#include <iostream>
#include "nullqr.h"
void helper(double s, double q[3][3], double qq[3][3], double C[17][25], double Z[13])
{
double q00 = q[0][0];
double q01 = q[0][1];
double q02 = q[0][2];
double q10 = q[1][0];
double q11 = q[1][1];
double q12 = q[1][2];
double q20 = q[2][0];
double q21 = q[2][1];
double q22 = q[2][2];
double qq00 = qq[0][0];
double qq01 = qq[0][1];
double qq02 = qq[0][2];
double qq10 = qq[1][0];
double qq11 = qq[1][1];
double qq12 = qq[1][2];
double qq20 = qq[2][0];
double qq21 = qq[2][1];
double qq22 = qq[2][2];
double s_2 = s*s;
double s_3 = s*s_2;
double s_4 = s*s_3;
double p012 = q00*q11 - q01*q10;
double p022 = q00*q21 - q01*q20;
double pp012 = qq00*qq11 - qq01*qq10;
double pp022 = qq00*qq21 - qq01*qq20;
double p011 = q02*q10 - q00*q12;
double p021 = q02*q20 - q00*q22;
double pp011 = qq02*qq10 - qq00*qq12;
double pp021 = qq02*qq20 - qq00*qq22;
double p010 = q01*q12 - q02*q11;
double p020 = q01*q22 - q02*q21;
double pp010 = qq01*qq12 - qq02*qq11;
double pp020 = qq01*qq22 - qq02*qq21;
double F030 = pp020*q20 + pp021*q21 + pp022*q22;
double F031 = 2*pp021*q22 - 2*pp022*q21;
double F032 = 2*pp022*q20 - 2*pp020*q22;
double F033 = 2*pp020*q21 - 2*pp021*q20;
double F034 = pp020*q20 - pp021*q21 - pp022*q22;
double F035 = 2*pp020*q21 + 2*pp021*q20;
double F036 = 2*pp020*q22 + 2*pp022*q20;
double F037 = pp021*q21 - pp020*q20 - pp022*q22;
double F038 = 2*pp021*q22 + 2*pp022*q21;
double F039 = pp022*q22 - pp021*q21 - pp020*q20;
double F020 = pp010*q10 + pp011*q11 + pp012*q12;
double F021 = 2*pp011*q12 - 2*pp012*q11;
double F022 = 2*pp012*q10 - 2*pp010*q12;
double F023 = 2*pp010*q11 - 2*pp011*q10;
double F024 = pp010*q10 - pp011*q11 - pp012*q12;
double F025 = 2*pp010*q11 + 2*pp011*q10;
double F026 = 2*pp010*q12 + 2*pp012*q10;
double F027 = pp011*q11 - pp010*q10 - pp012*q12;
double F028 = 2*pp011*q12 + 2*pp012*q11;
double F029 = pp012*q12 - pp011*q11 - pp010*q10;
double F010 = p020*qq20 + p021*qq21 + p022*qq22;
double F011 = 2*p022*qq21 - 2*p021*qq22;
double F012 = 2*p020*qq22 - 2*p022*qq20;
double F013 = 2*p021*qq20 - 2*p020*qq21;
double F014 = p020*qq20 - p021*qq21 - p022*qq22;
double F015 = 2*p020*qq21 + 2*p021*qq20;
double F016 = 2*p020*qq22 + 2*p022*qq20;
double F017 = p021*qq21 - p020*qq20 - p022*qq22;
double F018 = 2*p021*qq22 + 2*p022*qq21;
double F019 = p022*qq22 - p021*qq21 - p020*qq20;
double F000 = p010*qq10 + p011*qq11 + p012*qq12;
double F001 = 2*p012*qq11 - 2*p011*qq12;
double F002 = 2*p010*qq12 - 2*p012*qq10;
double F003 = 2*p011*qq10 - 2*p010*qq11;
double F004 = p010*qq10 - p011*qq11 - p012*qq12;
double F005 = 2*p010*qq11 + 2*p011*qq10;
double F006 = 2*p010*qq12 + 2*p012*qq10;
double F007 = p011*qq11 - p010*qq10 - p012*qq12;
double F008 = 2*p011*qq12 + 2*p012*qq11;
double F009 = p012*qq12 - p011*qq11 - p010*qq10;
double p122 = q10*q21 - q11*q20;
double p102 = q01*q10 - q00*q11;
double pp122 = qq10*qq21 - qq11*qq20;
double pp102 = qq01*qq10 - qq00*qq11;
double p121 = q12*q20 - q10*q22;
double p101 = q00*q12 - q02*q10;
double pp121 = qq12*qq20 - qq10*qq22;
double pp101 = qq00*qq12 - qq02*qq10;
double p120 = q11*q22 - q12*q21;
double p100 = q02*q11 - q01*q12;
double pp120 = qq11*qq22 - qq12*qq21;
double pp100 = qq02*qq11 - qq01*qq12;
double F130 = pp100*q00 + pp101*q01 + pp102*q02;
double F131 = 2*pp101*q02 - 2*pp102*q01;
double F132 = 2*pp102*q00 - 2*pp100*q02;
double F133 = 2*pp100*q01 - 2*pp101*q00;
double F134 = pp100*q00 - pp101*q01 - pp102*q02;
double F135 = 2*pp100*q01 + 2*pp101*q00;
double F136 = 2*pp100*q02 + 2*pp102*q00;
double F137 = pp101*q01 - pp100*q00 - pp102*q02;
double F138 = 2*pp101*q02 + 2*pp102*q01;
double F139 = pp102*q02 - pp101*q01 - pp100*q00;
double F120 = pp120*q20 + pp121*q21 + pp122*q22;
double F121 = 2*pp121*q22 - 2*pp122*q21;
double F122 = 2*pp122*q20 - 2*pp120*q22;
double F123 = 2*pp120*q21 - 2*pp121*q20;
double F124 = pp120*q20 - pp121*q21 - pp122*q22;
double F125 = 2*pp120*q21 + 2*pp121*q20;
double F126 = 2*pp120*q22 + 2*pp122*q20;
double F127 = pp121*q21 - pp120*q20 - pp122*q22;
double F128 = 2*pp121*q22 + 2*pp122*q21;
double F129 = pp122*q22 - pp121*q21 - pp120*q20;
double F110 = p100*qq00 + p101*qq01 + p102*qq02;
double F111 = 2*p102*qq01 - 2*p101*qq02;
double F112 = 2*p100*qq02 - 2*p102*qq00;
double F113 = 2*p101*qq00 - 2*p100*qq01;
double F114 = p100*qq00 - p101*qq01 - p102*qq02;
double F115 = 2*p100*qq01 + 2*p101*qq00;
double F116 = 2*p100*qq02 + 2*p102*qq00;
double F117 = p101*qq01 - p100*qq00 - p102*qq02;
double F118 = 2*p101*qq02 + 2*p102*qq01;
double F119 = p102*qq02 - p101*qq01 - p100*qq00;
double F100 = p120*qq20 + p121*qq21 + p122*qq22;
double F101 = 2*p122*qq21 - 2*p121*qq22;
double F102 = 2*p120*qq22 - 2*p122*qq20;
double F103 = 2*p121*qq20 - 2*p120*qq21;
double F104 = p120*qq20 - p121*qq21 - p122*qq22;
double F105 = 2*p120*qq21 + 2*p121*qq20;
double F106 = 2*p120*qq22 + 2*p122*qq20;
double F107 = p121*qq21 - p120*qq20 - p122*qq22;
double F108 = 2*p121*qq22 + 2*p122*qq21;
double F109 = p122*qq22 - p121*qq21 - p120*qq20;
double p202 = q01*q20 - q00*q21;
double p212 = q11*q20 - q10*q21;
double pp202 = qq01*qq20 - qq00*qq21;
double pp212 = qq11*qq20 - qq10*qq21;
double p201 = q00*q22 - q02*q20;
double p211 = q10*q22 - q12*q20;
double pp201 = qq00*qq22 - qq02*qq20;
double pp211 = qq10*qq22 - qq12*qq20;
double p200 = q02*q21 - q01*q22;
double p210 = q12*q21 - q11*q22;
double pp200 = qq02*qq21 - qq01*qq22;
double pp210 = qq12*qq21 - qq11*qq22;
double F230 = pp210*q10 + pp211*q11 + pp212*q12;
double F231 = 2*pp211*q12 - 2*pp212*q11;
double F232 = 2*pp212*q10 - 2*pp210*q12;
double F233 = 2*pp210*q11 - 2*pp211*q10;
double F234 = pp210*q10 - pp211*q11 - pp212*q12;
double F235 = 2*pp210*q11 + 2*pp211*q10;
double F236 = 2*pp210*q12 + 2*pp212*q10;
double F237 = pp211*q11 - pp210*q10 - pp212*q12;
double F238 = 2*pp211*q12 + 2*pp212*q11;
double F239 = pp212*q12 - pp211*q11 - pp210*q10;
double F220 = pp200*q00 + pp201*q01 + pp202*q02;
double F221 = 2*pp201*q02 - 2*pp202*q01;
double F222 = 2*pp202*q00 - 2*pp200*q02;
double F223 = 2*pp200*q01 - 2*pp201*q00;
double F224 = pp200*q00 - pp201*q01 - pp202*q02;
double F225 = 2*pp200*q01 + 2*pp201*q00;
double F226 = 2*pp200*q02 + 2*pp202*q00;
double F227 = pp201*q01 - pp200*q00 - pp202*q02;
double F228 = 2*pp201*q02 + 2*pp202*q01;
double F229 = pp202*q02 - pp201*q01 - pp200*q00;
double F210 = p210*qq10 + p211*qq11 + p212*qq12;
double F211 = 2*p212*qq11 - 2*p211*qq12;
double F212 = 2*p210*qq12 - 2*p212*qq10;
double F213 = 2*p211*qq10 - 2*p210*qq11;
double F214 = p210*qq10 - p211*qq11 - p212*qq12;
double F215 = 2*p210*qq11 + 2*p211*qq10;
double F216 = 2*p210*qq12 + 2*p212*qq10;
double F217 = p211*qq11 - p210*qq10 - p212*qq12;
double F218 = 2*p211*qq12 + 2*p212*qq11;
double F219 = p212*qq12 - p211*qq11 - p210*qq10;
double F200 = p200*qq00 + p201*qq01 + p202*qq02;
double F201 = 2*p202*qq01 - 2*p201*qq02;
double F202 = 2*p200*qq02 - 2*p202*qq00;
double F203 = 2*p201*qq00 - 2*p200*qq01;
double F204 = p200*qq00 - p201*qq01 - p202*qq02;
double F205 = 2*p200*qq01 + 2*p201*qq00;
double F206 = 2*p200*qq02 + 2*p202*qq00;
double F207 = p201*qq01 - p200*qq00 - p202*qq02;
double F208 = 2*p201*qq02 + 2*p202*qq01;
double F209 = p202*qq02 - p201*qq01 - p200*qq00;
double A_0_34 = F004*F034 - F014*F024;
double A_0_33 = F004*F035 + F005*F034 - F014*F025 - F015*F024;
double A_0_29 = F004*F036 + F006*F034 - F014*F026 - F016*F024;
double A_0_19 = F001*F034*s + F004*F031*s - F011*F024*s - F014*F021*s;
double A_0_32 = F005*F035 - F015*F025 + F004*F037 + F007*F034 - F014*F027 - F017*F024;
double A_0_28 = F005*F036 + F006*F035 - F015*F026 - F016*F025 + F004*F038 + F008*F034 - F014*F028 - F018*F024;
double A_0_18 = F001*F035*s + F002*F034*s + F004*F032*s + F005*F031*s - F011*F025*s - F012*F024*s - F014*F022*s - F015*F021*s;
double A_0_25 = F006*F036 - F016*F026 + F034*F009 - F024*F019 - F014*F029 + F004*F039;
double A_0_15 = F001*F036*s + F003*F034*s + F004*F033*s + F006*F031*s - F011*F026*s - F013*F024*s - F014*F023*s - F016*F021*s;
double A_0_9 = F001*F031*s_2 - F011*F021*s_2 + F000*F034*s_2 + F004*F030*s_2 - F010*F024*s_2 - F014*F020*s_2;
double A_0_31 = F005*F037 + F007*F035 - F015*F027 - F017*F025;
double A_0_27 = F005*F038 + F006*F037 + F007*F036 + F008*F035 - F015*F028 - F016*F027 - F017*F026 - F018*F025;
double A_0_17 = F002*F035*s + F005*F032*s - F012*F025*s - F015*F022*s + F001*F037*s + F007*F031*s - F011*F027*s - F017*F021*s;
double A_0_24 = F006*F038 + F008*F036 - F016*F028 - F018*F026 + F035*F009 - F025*F019 - F015*F029 + F005*F039;
double A_0_14 = F002*F036*s + F003*F035*s + F005*F033*s + F006*F032*s - F012*F026*s - F013*F025*s - F015*F023*s - F016*F022*s + F001*F038*s + F008*F031*s - F011*F028*s - F018*F021*s;
double A_0_8 = F001*F032*s_2 + F002*F031*s_2 - F011*F022*s_2 - F012*F021*s_2 + F000*F035*s_2 + F005*F030*s_2 - F010*F025*s_2 - F015*F020*s_2;
double A_0_22 = F036*F009 - F026*F019 - F016*F029 + F006*F039;
double A_0_12 = F003*F036*s + F006*F033*s - F013*F026*s - F016*F023*s + F031*F009*s - F021*F019*s - F011*F029*s + F001*F039*s;
double A_0_6 = F001*F033*s_2 + F003*F031*s_2 - F011*F023*s_2 - F013*F021*s_2 + F000*F036*s_2 + F006*F030*s_2 - F010*F026*s_2 - F016*F020*s_2;
double A_0_3 = F000*F031*s_3 + F001*F030*s_3 - F010*F021*s_3 - F011*F020*s_3;
double A_0_30 = F007*F037 - F017*F027;
double A_0_26 = F007*F038 + F008*F037 - F017*F028 - F018*F027;
double A_0_16 = F002*F037*s + F007*F032*s - F012*F027*s - F017*F022*s;
double A_0_23 = F008*F038 - F018*F028 + F037*F009 - F027*F019 - F017*F029 + F007*F039;
double A_0_13 = F002*F038*s + F003*F037*s + F007*F033*s + F008*F032*s - F012*F028*s - F013*F027*s - F017*F023*s - F018*F022*s;
double A_0_7 = F002*F032*s_2 - F012*F022*s_2 + F000*F037*s_2 + F007*F030*s_2 - F010*F027*s_2 - F017*F020*s_2;
double A_0_21 = F038*F009 - F028*F019 - F018*F029 + F008*F039;
double A_0_11 = F003*F038*s + F008*F033*s - F013*F028*s - F018*F023*s + F032*F009*s - F022*F019*s - F012*F029*s + F002*F039*s;
double A_0_5 = F002*F033*s_2 + F003*F032*s_2 - F012*F023*s_2 - F013*F022*s_2 + F000*F038*s_2 + F008*F030*s_2 - F010*F028*s_2 - F018*F020*s_2;
double A_0_2 = F000*F032*s_3 + F002*F030*s_3 - F010*F022*s_3 - F012*F020*s_3;
double A_0_20 = F009*F039 - F019*F029;
double A_0_10 = F033*F009*s - F023*F019*s - F013*F029*s + F003*F039*s;
double A_0_4 = F003*F033*s_2 - F013*F023*s_2 + F030*F009*s_2 - F020*F019*s_2 - F010*F029*s_2 + F000*F039*s_2;
double A_0_1 = F000*F033*s_3 + F003*F030*s_3 - F010*F023*s_3 - F013*F020*s_3;
double A_0_0 = F000*F030*s_4 - F010*F020*s_4;
double A_1_19 = F034*q00 + F014*qq00;
double A_1_18 = F034*q01 + F035*q00 + F014*qq01 + F015*qq00;
double A_1_15 = F034*q02 + F036*q00 + F014*qq02 + F016*qq00;
double A_1_9 = F031*q00*s + F011*qq00*s;
double A_1_17 = F035*q01 + F037*q00 + F015*qq01 + F017*qq00;
double A_1_14 = F035*q02 + F036*q01 + F038*q00 + F015*qq02 + F016*qq01 + F018*qq00;
double A_1_8 = F031*q01*s + F032*q00*s + F011*qq01*s + F012*qq00*s;
double A_1_12 = F036*q02 + F039*q00 + F016*qq02 + F019*qq00;
double A_1_6 = F031*q02*s + F033*q00*s + F011*qq02*s + F013*qq00*s;
double A_1_3 = F030*q00*s_2 + F010*qq00*s_2;
double A_1_16 = F037*q01 + F017*qq01;
double A_1_13 = F037*q02 + F038*q01 + F017*qq02 + F018*qq01;
double A_1_7 = F032*q01*s + F012*qq01*s;
double A_1_11 = F038*q02 + F039*q01 + F018*qq02 + F019*qq01;
double A_1_5 = F032*q02*s + F033*q01*s + F012*qq02*s + F013*qq01*s;
double A_1_2 = F030*q01*s_2 + F010*qq01*s_2;
double A_1_10 = F039*q02 + F019*qq02;
double A_1_4 = F033*q02*s + F013*qq02*s;
double A_1_1 = F030*q02*s_2 + F010*qq02*s_2;
double A_2_19 = - F024*q00 - F004*qq00;
double A_2_18 = - F024*q01 - F025*q00 - F004*qq01 - F005*qq00;
double A_2_15 = - F024*q02 - F026*q00 - F004*qq02 - F006*qq00;
double A_2_9 = - F021*q00*s - F001*qq00*s;
double A_2_17 = - F025*q01 - F027*q00 - F005*qq01 - F007*qq00;
double A_2_14 = - F025*q02 - F026*q01 - F028*q00 - F005*qq02 - F006*qq01 - F008*qq00;
double A_2_8 = - F021*q01*s - F022*q00*s - F001*qq01*s - F002*qq00*s;
double A_2_12 = - F026*q02 - F029*q00 - F006*qq02 - F009*qq00;
double A_2_6 = - F021*q02*s - F023*q00*s - F001*qq02*s - F003*qq00*s;
double A_2_3 = - F020*q00*s_2 - F000*qq00*s_2;
double A_2_16 = - F027*q01 - F007*qq01;
double A_2_13 = - F027*q02 - F028*q01 - F007*qq02 - F008*qq01;
double A_2_7 = - F022*q01*s - F002*qq01*s;
double A_2_11 = - F028*q02 - F029*q01 - F008*qq02 - F009*qq01;
double A_2_5 = - F022*q02*s - F023*q01*s - F002*qq02*s - F003*qq01*s;
double A_2_2 = - F020*q01*s_2 - F000*qq01*s_2;
double A_2_10 = - F029*q02 - F009*qq02;
double A_2_4 = - F023*q02*s - F003*qq02*s;
double A_2_1 = - F020*q02*s_2 - F000*qq02*s_2;
double A_3_19 = - F124*q10 - F104*qq10;
double A_3_18 = - F124*q11 - F125*q10 - F104*qq11 - F105*qq10;
double A_3_15 = - F124*q12 - F126*q10 - F104*qq12 - F106*qq10;
double A_3_9 = - F121*q10*s - F101*qq10*s;
double A_3_17 = - F125*q11 - F127*q10 - F105*qq11 - F107*qq10;
double A_3_14 = - F125*q12 - F126*q11 - F128*q10 - F105*qq12 - F106*qq11 - F108*qq10;
double A_3_8 = - F121*q11*s - F122*q10*s - F101*qq11*s - F102*qq10*s;
double A_3_12 = - F126*q12 - F129*q10 - F106*qq12 - F109*qq10;
double A_3_6 = - F121*q12*s - F123*q10*s - F101*qq12*s - F103*qq10*s;
double A_3_3 = - F120*q10*s_2 - F100*qq10*s_2;
double A_3_16 = - F127*q11 - F107*qq11;
double A_3_13 = - F127*q12 - F128*q11 - F107*qq12 - F108*qq11;
double A_3_7 = - F122*q11*s - F102*qq11*s;
double A_3_11 = - F128*q12 - F129*q11 - F108*qq12 - F109*qq11;
double A_3_5 = - F122*q12*s - F123*q11*s - F102*qq12*s - F103*qq11*s;
double A_3_2 = - F120*q11*s_2 - F100*qq11*s_2;
double A_3_10 = - F129*q12 - F109*qq12;
double A_3_4 = - F123*q12*s - F103*qq12*s;
double A_3_1 = - F120*q12*s_2 - F100*qq12*s_2;
double A_4_19 = - F224*q20 - F204*qq20;
double A_4_18 = - F224*q21 - F225*q20 - F204*qq21 - F205*qq20;
double A_4_15 = - F224*q22 - F226*q20 - F204*qq22 - F206*qq20;
double A_4_9 = - F221*q20*s - F201*qq20*s;
double A_4_17 = - F225*q21 - F227*q20 - F205*qq21 - F207*qq20;
double A_4_14 = - F225*q22 - F226*q21 - F228*q20 - F205*qq22 - F206*qq21 - F208*qq20;
double A_4_8 = - F221*q21*s - F222*q20*s - F201*qq21*s - F202*qq20*s;
double A_4_12 = - F226*q22 - F229*q20 - F206*qq22 - F209*qq20;
double A_4_6 = - F221*q22*s - F223*q20*s - F201*qq22*s - F203*qq20*s;
double A_4_3 = - F220*q20*s_2 - F200*qq20*s_2;
double A_4_16 = - F227*q21 - F207*qq21;
double A_4_13 = - F227*q22 - F228*q21 - F207*qq22 - F208*qq21;
double A_4_7 = - F222*q21*s - F202*qq21*s;
double A_4_11 = - F228*q22 - F229*q21 - F208*qq22 - F209*qq21;
double A_4_5 = - F222*q22*s - F223*q21*s - F202*qq22*s - F203*qq21*s;
double A_4_2 = - F220*q21*s_2 - F200*qq21*s_2;
double A_4_10 = - F229*q22 - F209*qq22;
double A_4_4 = - F223*q22*s - F203*qq22*s;
double A_4_1 = - F220*q22*s_2 - F200*qq22*s_2;
double A_5_9 = 1;
double A_5_7 = 1;
double A_5_4 = 1;
double A_5_0 = s_2 - 1;
double A_5_9_2 = A_5_9*A_5_9;
double B_0_0 = A_1_16 - (A_5_7*A_1_18)/A_5_9;
double B_1_0 = A_2_16 - (A_5_7*A_2_18)/A_5_9;
double B_2_0 = A_3_16 - (A_5_7*A_3_18)/A_5_9;
double B_3_0 = A_4_16 - (A_5_7*A_4_18)/A_5_9;
double B_4_0 = A_0_31 - (A_5_7*A_0_33)/A_5_9;
double B_5_0 = A_1_17 - (A_5_7*A_1_19)/A_5_9;
double B_6_0 = A_2_17 - (A_5_7*A_2_19)/A_5_9;
double B_7_0 = A_3_17 - (A_5_7*A_3_19)/A_5_9;
double B_8_0 = A_4_17 - (A_5_7*A_4_19)/A_5_9;
double B_0_1 = -A_5_7*(A_1_17/A_5_9 - (A_5_7*A_1_19)/A_5_9_2);
double B_1_1 = -A_5_7*(A_2_17/A_5_9 - (A_5_7*A_2_19)/A_5_9_2);
double B_2_1 = -A_5_7*(A_3_17/A_5_9 - (A_5_7*A_3_19)/A_5_9_2);
double B_3_1 = -A_5_7*(A_4_17/A_5_9 - (A_5_7*A_4_19)/A_5_9_2);
double B_4_1 = A_0_30 - A_5_7*(A_0_32/A_5_9 - (A_5_7*A_0_34)/A_5_9_2);
double B_5_1 = A_1_16 - (A_5_7*A_1_18)/A_5_9;
double B_6_1 = A_2_16 - (A_5_7*A_2_18)/A_5_9;
double B_7_1 = A_3_16 - (A_5_7*A_3_18)/A_5_9;
double B_8_1 = A_4_16 - (A_5_7*A_4_18)/A_5_9;
double B_0_2 = A_1_13 - (A_5_7*A_1_15)/A_5_9;
double B_1_2 = A_2_13 - (A_5_7*A_2_15)/A_5_9;
double B_2_2 = A_3_13 - (A_5_7*A_3_15)/A_5_9;
double B_3_2 = A_4_13 - (A_5_7*A_4_15)/A_5_9;
double B_4_2 = A_0_27 - (A_5_7*A_0_29)/A_5_9;
double B_5_2 = A_1_14;
double B_6_2 = A_2_14;
double B_7_2 = A_3_14;
double B_8_2 = A_4_14;
double B_9_2 = A_1_17 - (A_5_7*A_1_19)/A_5_9;
double B_10_2 = A_2_17 - (A_5_7*A_2_19)/A_5_9;
double B_11_2 = A_3_17 - (A_5_7*A_3_19)/A_5_9;
double B_12_2 = A_4_17 - (A_5_7*A_4_19)/A_5_9;
double B_0_3 = -(A_5_7*A_1_14)/A_5_9;
double B_1_3 = -(A_5_7*A_2_14)/A_5_9;
double B_2_3 = -(A_5_7*A_3_14)/A_5_9;
double B_3_3 = -(A_5_7*A_4_14)/A_5_9;
double B_4_3 = A_0_26 - (A_5_7*A_0_28)/A_5_9;
double B_5_3 = A_1_13 - (A_5_7*A_1_15)/A_5_9;
double B_6_3 = A_2_13 - (A_5_7*A_2_15)/A_5_9;
double B_7_3 = A_3_13 - (A_5_7*A_3_15)/A_5_9;
double B_8_3 = A_4_13 - (A_5_7*A_4_15)/A_5_9;
double B_9_3 = A_1_16 - (A_5_7*A_1_18)/A_5_9;
double B_10_3 = A_2_16 - (A_5_7*A_2_18)/A_5_9;
double B_11_3 = A_3_16 - (A_5_7*A_3_18)/A_5_9;
double B_12_3 = A_4_16 - (A_5_7*A_4_18)/A_5_9;
double B_0_4 = A_1_11 - (A_5_4*A_1_18)/A_5_9;
double B_1_4 = A_2_11 - (A_5_4*A_2_18)/A_5_9;
double B_2_4 = A_3_11 - (A_5_4*A_3_18)/A_5_9;
double B_3_4 = A_4_11 - (A_5_4*A_4_18)/A_5_9;
double B_4_4 = A_0_24 - (A_5_4*A_0_33)/A_5_9;
double B_5_4 = A_1_12 - (A_5_4*A_1_19)/A_5_9;
double B_6_4 = A_2_12 - (A_5_4*A_2_19)/A_5_9;
double B_7_4 = A_3_12 - (A_5_4*A_3_19)/A_5_9;
double B_8_4 = A_4_12 - (A_5_4*A_4_19)/A_5_9;
double B_9_4 = A_1_14;
double B_10_4 = A_2_14;
double B_11_4 = A_3_14;
double B_12_4 = A_4_14;
double B_0_5 = - A_5_7*(A_1_12/A_5_9 - (A_5_4*A_1_19)/A_5_9_2) - A_5_4*(A_1_17/A_5_9 - (A_5_7*A_1_19)/A_5_9_2);
double B_1_5 = - A_5_7*(A_2_12/A_5_9 - (A_5_4*A_2_19)/A_5_9_2) - A_5_4*(A_2_17/A_5_9 - (A_5_7*A_2_19)/A_5_9_2);
double B_2_5 = - A_5_7*(A_3_12/A_5_9 - (A_5_4*A_3_19)/A_5_9_2) - A_5_4*(A_3_17/A_5_9 - (A_5_7*A_3_19)/A_5_9_2);
double B_3_5 = - A_5_7*(A_4_12/A_5_9 - (A_5_4*A_4_19)/A_5_9_2) - A_5_4*(A_4_17/A_5_9 - (A_5_7*A_4_19)/A_5_9_2);
double B_4_5 = A_0_23 - A_5_7*(A_0_25/A_5_9 - (A_5_4*A_0_34)/A_5_9_2) - A_5_4*(A_0_32/A_5_9 - (A_5_7*A_0_34)/A_5_9_2);
double B_5_5 = A_1_11 - (A_5_4*A_1_18)/A_5_9;
double B_6_5 = A_2_11 - (A_5_4*A_2_18)/A_5_9;
double B_7_5 = A_3_11 - (A_5_4*A_3_18)/A_5_9;
double B_8_5 = A_4_11 - (A_5_4*A_4_18)/A_5_9;
double B_9_5 = A_1_13 - (A_5_7*A_1_15)/A_5_9;
double B_10_5 = A_2_13 - (A_5_7*A_2_15)/A_5_9;
double B_11_5 = A_3_13 - (A_5_7*A_3_15)/A_5_9;
double B_12_5 = A_4_13 - (A_5_7*A_4_15)/A_5_9;
double B_0_6 = A_1_10 - (A_5_4*A_1_15)/A_5_9;
double B_1_6 = A_2_10 - (A_5_4*A_2_15)/A_5_9;
double B_2_6 = A_3_10 - (A_5_4*A_3_15)/A_5_9;
double B_3_6 = A_4_10 - (A_5_4*A_4_15)/A_5_9;
double B_4_6 = A_0_22 - (A_5_4*A_0_29)/A_5_9;
double B_9_6 = A_1_12 - (A_5_4*A_1_19)/A_5_9;
double B_10_6 = A_2_12 - (A_5_4*A_2_19)/A_5_9;
double B_11_6 = A_3_12 - (A_5_4*A_3_19)/A_5_9;
double B_12_6 = A_4_12 - (A_5_4*A_4_19)/A_5_9;
double B_0_7 = -(A_5_4*A_1_14)/A_5_9;
double B_1_7 = -(A_5_4*A_2_14)/A_5_9;
double B_2_7 = -(A_5_4*A_3_14)/A_5_9;
double B_3_7 = -(A_5_4*A_4_14)/A_5_9;
double B_4_7 = A_0_21 - (A_5_4*A_0_28)/A_5_9;
double B_5_7 = A_1_10 - (A_5_4*A_1_15)/A_5_9;
double B_6_7 = A_2_10 - (A_5_4*A_2_15)/A_5_9;
double B_7_7 = A_3_10 - (A_5_4*A_3_15)/A_5_9;
double B_8_7 = A_4_10 - (A_5_4*A_4_15)/A_5_9;
double B_9_7 = A_1_11 - (A_5_4*A_1_18)/A_5_9;
double B_10_7 = A_2_11 - (A_5_4*A_2_18)/A_5_9;
double B_11_7 = A_3_11 - (A_5_4*A_3_18)/A_5_9;
double B_12_7 = A_4_11 - (A_5_4*A_4_18)/A_5_9;
double B_0_8 = -A_5_4*(A_1_12/A_5_9 - (A_5_4*A_1_19)/A_5_9_2);
double B_1_8 = -A_5_4*(A_2_12/A_5_9 - (A_5_4*A_2_19)/A_5_9_2);
double B_2_8 = -A_5_4*(A_3_12/A_5_9 - (A_5_4*A_3_19)/A_5_9_2);
double B_3_8 = -A_5_4*(A_4_12/A_5_9 - (A_5_4*A_4_19)/A_5_9_2);
double B_4_8 = A_0_20 - A_5_4*(A_0_25/A_5_9 - (A_5_4*A_0_34)/A_5_9_2);
double B_9_8 = A_1_10 - (A_5_4*A_1_15)/A_5_9;
double B_10_8 = A_2_10 - (A_5_4*A_2_15)/A_5_9;
double B_11_8 = A_3_10 - (A_5_4*A_3_15)/A_5_9;
double B_12_8 = A_4_10 - (A_5_4*A_4_15)/A_5_9;
double B_0_9 = A_1_7 - (A_5_7*A_1_9)/A_5_9;
double B_1_9 = A_2_7 - (A_5_7*A_2_9)/A_5_9;
double B_2_9 = A_3_7 - (A_5_7*A_3_9)/A_5_9;
double B_3_9 = A_4_7 - (A_5_7*A_4_9)/A_5_9;
double B_4_9 = A_0_17 - (A_5_7*A_0_19)/A_5_9;
double B_5_9 = A_1_8;
double B_6_9 = A_2_8;
double B_7_9 = A_3_8;
double B_8_9 = A_4_8;
double B_13_9 = A_1_17 - (A_5_7*A_1_19)/A_5_9;
double B_14_9 = A_2_17 - (A_5_7*A_2_19)/A_5_9;
double B_15_9 = A_3_17 - (A_5_7*A_3_19)/A_5_9;
double B_16_9 = A_4_17 - (A_5_7*A_4_19)/A_5_9;
double B_0_10 = -(A_1_8*A_5_7)/A_5_9;
double B_1_10 = -(A_2_8*A_5_7)/A_5_9;
double B_2_10 = -(A_3_8*A_5_7)/A_5_9;
double B_3_10 = -(A_4_8*A_5_7)/A_5_9;
double B_4_10 = A_0_16 - (A_5_7*A_0_18)/A_5_9;
double B_5_10 = A_1_7 - (A_5_7*A_1_9)/A_5_9;
double B_6_10 = A_2_7 - (A_5_7*A_2_9)/A_5_9;
double B_7_10 = A_3_7 - (A_5_7*A_3_9)/A_5_9;
double B_8_10 = A_4_7 - (A_5_7*A_4_9)/A_5_9;
double B_13_10 = A_1_16 - (A_5_7*A_1_18)/A_5_9;
double B_14_10 = A_2_16 - (A_5_7*A_2_18)/A_5_9;
double B_15_10 = A_3_16 - (A_5_7*A_3_18)/A_5_9;
double B_16_10 = A_4_16 - (A_5_7*A_4_18)/A_5_9;
double B_0_11 = A_1_5;
double B_1_11 = A_2_5;
double B_2_11 = A_3_5;
double B_3_11 = A_4_5;
double B_4_11 = A_0_14;
double B_5_11 = A_1_6;
double B_6_11 = A_2_6;
double B_7_11 = A_3_6;
double B_8_11 = A_4_6;
double B_9_11 = A_1_8;
double B_10_11 = A_2_8;
double B_11_11 = A_3_8;
double B_12_11 = A_4_8;
double B_13_11 = A_1_14;
double B_14_11 = A_2_14;
double B_15_11 = A_3_14;
double B_16_11 = A_4_14;
double B_0_12 = -(A_1_6*A_5_7)/A_5_9;
double B_1_12 = -(A_2_6*A_5_7)/A_5_9;
double B_2_12 = -(A_3_6*A_5_7)/A_5_9;
double B_3_12 = -(A_4_6*A_5_7)/A_5_9;
double B_4_12 = A_0_13 - (A_5_7*A_0_15)/A_5_9;
double B_5_12 = A_1_5;
double B_6_12 = A_2_5;
double B_7_12 = A_3_5;
double B_8_12 = A_4_5;
double B_9_12 = A_1_7 - (A_5_7*A_1_9)/A_5_9;
double B_10_12 = A_2_7 - (A_5_7*A_2_9)/A_5_9;
double B_11_12 = A_3_7 - (A_5_7*A_3_9)/A_5_9;
double B_12_12 = A_4_7 - (A_5_7*A_4_9)/A_5_9;
double B_13_12 = A_1_13 - (A_5_7*A_1_15)/A_5_9;
double B_14_12 = A_2_13 - (A_5_7*A_2_15)/A_5_9;
double B_15_12 = A_3_13 - (A_5_7*A_3_15)/A_5_9;
double B_16_12 = A_4_13 - (A_5_7*A_4_15)/A_5_9;
double B_0_13 = A_1_4 - (A_5_4*A_1_9)/A_5_9;
double B_1_13 = A_2_4 - (A_5_4*A_2_9)/A_5_9;
double B_2_13 = A_3_4 - (A_5_4*A_3_9)/A_5_9;
double B_3_13 = A_4_4 - (A_5_4*A_4_9)/A_5_9;
double B_4_13 = A_0_12 - (A_5_4*A_0_19)/A_5_9;
double B_9_13 = A_1_6;
double B_10_13 = A_2_6;
double B_11_13 = A_3_6;
double B_12_13 = A_4_6;
double B_13_13 = A_1_12 - (A_5_4*A_1_19)/A_5_9;
double B_14_13 = A_2_12 - (A_5_4*A_2_19)/A_5_9;
double B_15_13 = A_3_12 - (A_5_4*A_3_19)/A_5_9;
double B_16_13 = A_4_12 - (A_5_4*A_4_19)/A_5_9;
double B_0_14 = -(A_1_8*A_5_4)/A_5_9;
double B_1_14 = -(A_2_8*A_5_4)/A_5_9;
double B_2_14 = -(A_3_8*A_5_4)/A_5_9;
double B_3_14 = -(A_4_8*A_5_4)/A_5_9;
double B_4_14 = A_0_11 - (A_5_4*A_0_18)/A_5_9;
double B_5_14 = A_1_4 - (A_5_4*A_1_9)/A_5_9;
double B_6_14 = A_2_4 - (A_5_4*A_2_9)/A_5_9;
double B_7_14 = A_3_4 - (A_5_4*A_3_9)/A_5_9;
double B_8_14 = A_4_4 - (A_5_4*A_4_9)/A_5_9;
double B_9_14 = A_1_5;
double B_10_14 = A_2_5;
double B_11_14 = A_3_5;
double B_12_14 = A_4_5;
double B_13_14 = A_1_11 - (A_5_4*A_1_18)/A_5_9;
double B_14_14 = A_2_11 - (A_5_4*A_2_18)/A_5_9;
double B_15_14 = A_3_11 - (A_5_4*A_3_18)/A_5_9;
double B_16_14 = A_4_11 - (A_5_4*A_4_18)/A_5_9;
double B_0_15 = -(A_1_6*A_5_4)/A_5_9;
double B_1_15 = -(A_2_6*A_5_4)/A_5_9;
double B_2_15 = -(A_3_6*A_5_4)/A_5_9;
double B_3_15 = -(A_4_6*A_5_4)/A_5_9;
double B_4_15 = A_0_10 - (A_5_4*A_0_15)/A_5_9;
double B_9_15 = A_1_4 - (A_5_4*A_1_9)/A_5_9;
double B_10_15 = A_2_4 - (A_5_4*A_2_9)/A_5_9;
double B_11_15 = A_3_4 - (A_5_4*A_3_9)/A_5_9;
double B_12_15 = A_4_4 - (A_5_4*A_4_9)/A_5_9;
double B_13_15 = A_1_10 - (A_5_4*A_1_15)/A_5_9;
double B_14_15 = A_2_10 - (A_5_4*A_2_15)/A_5_9;
double B_15_15 = A_3_10 - (A_5_4*A_3_15)/A_5_9;
double B_16_15 = A_4_10 - (A_5_4*A_4_15)/A_5_9;
double B_0_16 = A_1_2 - (A_5_0*A_1_18)/A_5_9;
double B_1_16 = A_2_2 - (A_5_0*A_2_18)/A_5_9;
double B_2_16 = A_3_2 - (A_5_0*A_3_18)/A_5_9;
double B_3_16 = A_4_2 - (A_5_0*A_4_18)/A_5_9;
double B_4_16 = A_0_8 - (A_5_0*A_0_33)/A_5_9;
double B_5_16 = A_1_3 - (A_5_0*A_1_19)/A_5_9;
double B_6_16 = A_2_3 - (A_5_0*A_2_19)/A_5_9;
double B_7_16 = A_3_3 - (A_5_0*A_3_19)/A_5_9;
double B_8_16 = A_4_3 - (A_5_0*A_4_19)/A_5_9;
double B_13_16 = A_1_8;
double B_14_16 = A_2_8;
double B_15_16 = A_3_8;
double B_16_16 = A_4_8;
double B_0_17 = - A_5_7*(A_1_3/A_5_9 - (A_5_0*A_1_19)/A_5_9_2) - A_5_0*(A_1_17/A_5_9 - (A_5_7*A_1_19)/A_5_9_2);
double B_1_17 = - A_5_7*(A_2_3/A_5_9 - (A_5_0*A_2_19)/A_5_9_2) - A_5_0*(A_2_17/A_5_9 - (A_5_7*A_2_19)/A_5_9_2);
double B_2_17 = - A_5_7*(A_3_3/A_5_9 - (A_5_0*A_3_19)/A_5_9_2) - A_5_0*(A_3_17/A_5_9 - (A_5_7*A_3_19)/A_5_9_2);
double B_3_17 = - A_5_7*(A_4_3/A_5_9 - (A_5_0*A_4_19)/A_5_9_2) - A_5_0*(A_4_17/A_5_9 - (A_5_7*A_4_19)/A_5_9_2);
double B_4_17 = A_0_7 - A_5_7*(A_0_9/A_5_9 - (A_5_0*A_0_34)/A_5_9_2) - A_5_0*(A_0_32/A_5_9 - (A_5_7*A_0_34)/A_5_9_2);
double B_5_17 = A_1_2 - (A_5_0*A_1_18)/A_5_9;
double B_6_17 = A_2_2 - (A_5_0*A_2_18)/A_5_9;
double B_7_17 = A_3_2 - (A_5_0*A_3_18)/A_5_9;
double B_8_17 = A_4_2 - (A_5_0*A_4_18)/A_5_9;
double B_13_17 = A_1_7 - (A_5_7*A_1_9)/A_5_9;
double B_14_17 = A_2_7 - (A_5_7*A_2_9)/A_5_9;
double B_15_17 = A_3_7 - (A_5_7*A_3_9)/A_5_9;
double B_16_17 = A_4_7 - (A_5_7*A_4_9)/A_5_9;
double B_0_18 = A_1_1 - (A_5_0*A_1_15)/A_5_9;
double B_1_18 = A_2_1 - (A_5_0*A_2_15)/A_5_9;
double B_2_18 = A_3_1 - (A_5_0*A_3_15)/A_5_9;
double B_3_18 = A_4_1 - (A_5_0*A_4_15)/A_5_9;
double B_4_18 = A_0_6 - (A_5_0*A_0_29)/A_5_9;
double B_9_18 = A_1_3 - (A_5_0*A_1_19)/A_5_9;
double B_10_18 = A_2_3 - (A_5_0*A_2_19)/A_5_9;
double B_11_18 = A_3_3 - (A_5_0*A_3_19)/A_5_9;
double B_12_18 = A_4_3 - (A_5_0*A_4_19)/A_5_9;
double B_13_18 = A_1_6;
double B_14_18 = A_2_6;
double B_15_18 = A_3_6;
double B_16_18 = A_4_6;
double B_0_19 = -(A_5_0*A_1_14)/A_5_9;
double B_1_19 = -(A_5_0*A_2_14)/A_5_9;
double B_2_19 = -(A_5_0*A_3_14)/A_5_9;
double B_3_19 = -(A_5_0*A_4_14)/A_5_9;
double B_4_19 = A_0_5 - (A_5_0*A_0_28)/A_5_9;
double B_5_19 = A_1_1 - (A_5_0*A_1_15)/A_5_9;
double B_6_19 = A_2_1 - (A_5_0*A_2_15)/A_5_9;
double B_7_19 = A_3_1 - (A_5_0*A_3_15)/A_5_9;
double B_8_19 = A_4_1 - (A_5_0*A_4_15)/A_5_9;
double B_9_19 = A_1_2 - (A_5_0*A_1_18)/A_5_9;
double B_10_19 = A_2_2 - (A_5_0*A_2_18)/A_5_9;
double B_11_19 = A_3_2 - (A_5_0*A_3_18)/A_5_9;
double B_12_19 = A_4_2 - (A_5_0*A_4_18)/A_5_9;
double B_13_19 = A_1_5;
double B_14_19 = A_2_5;
double B_15_19 = A_3_5;
double B_16_19 = A_4_5;
double B_0_20 = - A_5_4*(A_1_3/A_5_9 - (A_5_0*A_1_19)/A_5_9_2) - A_5_0*(A_1_12/A_5_9 - (A_5_4*A_1_19)/A_5_9_2);
double B_1_20 = - A_5_4*(A_2_3/A_5_9 - (A_5_0*A_2_19)/A_5_9_2) - A_5_0*(A_2_12/A_5_9 - (A_5_4*A_2_19)/A_5_9_2);
double B_2_20 = - A_5_4*(A_3_3/A_5_9 - (A_5_0*A_3_19)/A_5_9_2) - A_5_0*(A_3_12/A_5_9 - (A_5_4*A_3_19)/A_5_9_2);
double B_3_20 = - A_5_4*(A_4_3/A_5_9 - (A_5_0*A_4_19)/A_5_9_2) - A_5_0*(A_4_12/A_5_9 - (A_5_4*A_4_19)/A_5_9_2);
double B_4_20 = A_0_4 - A_5_4*(A_0_9/A_5_9 - (A_5_0*A_0_34)/A_5_9_2) - A_5_0*(A_0_25/A_5_9 - (A_5_4*A_0_34)/A_5_9_2);
double B_9_20 = A_1_1 - (A_5_0*A_1_15)/A_5_9;
double B_10_20 = A_2_1 - (A_5_0*A_2_15)/A_5_9;
double B_11_20 = A_3_1 - (A_5_0*A_3_15)/A_5_9;
double B_12_20 = A_4_1 - (A_5_0*A_4_15)/A_5_9;
double B_13_20 = A_1_4 - (A_5_4*A_1_9)/A_5_9;
double B_14_20 = A_2_4 - (A_5_4*A_2_9)/A_5_9;
double B_15_20 = A_3_4 - (A_5_4*A_3_9)/A_5_9;
double B_16_20 = A_4_4 - (A_5_4*A_4_9)/A_5_9;
double B_0_21 = -(A_5_0*A_1_9)/A_5_9;
double B_1_21 = -(A_5_0*A_2_9)/A_5_9;
double B_2_21 = -(A_5_0*A_3_9)/A_5_9;
double B_3_21 = -(A_5_0*A_4_9)/A_5_9;
double B_4_21 = A_0_3 - (A_5_0*A_0_19)/A_5_9;
double B_13_21 = A_1_3 - (A_5_0*A_1_19)/A_5_9;
double B_14_21 = A_2_3 - (A_5_0*A_2_19)/A_5_9;
double B_15_21 = A_3_3 - (A_5_0*A_3_19)/A_5_9;
double B_16_21 = A_4_3 - (A_5_0*A_4_19)/A_5_9;
double B_0_22 = -(A_1_8*A_5_0)/A_5_9;
double B_1_22 = -(A_2_8*A_5_0)/A_5_9;
double B_2_22 = -(A_3_8*A_5_0)/A_5_9;
double B_3_22 = -(A_4_8*A_5_0)/A_5_9;
double B_4_22 = A_0_2 - (A_5_0*A_0_18)/A_5_9;
double B_5_22 = -(A_5_0*A_1_9)/A_5_9;
double B_6_22 = -(A_5_0*A_2_9)/A_5_9;
double B_7_22 = -(A_5_0*A_3_9)/A_5_9;
double B_8_22 = -(A_5_0*A_4_9)/A_5_9;
double B_13_22 = A_1_2 - (A_5_0*A_1_18)/A_5_9;
double B_14_22 = A_2_2 - (A_5_0*A_2_18)/A_5_9;
double B_15_22 = A_3_2 - (A_5_0*A_3_18)/A_5_9;
double B_16_22 = A_4_2 - (A_5_0*A_4_18)/A_5_9;
double B_0_23 = -(A_1_6*A_5_0)/A_5_9;
double B_1_23 = -(A_2_6*A_5_0)/A_5_9;
double B_2_23 = -(A_3_6*A_5_0)/A_5_9;
double B_3_23 = -(A_4_6*A_5_0)/A_5_9;
double B_4_23 = A_0_1 - (A_5_0*A_0_15)/A_5_9;
double B_9_23 = -(A_5_0*A_1_9)/A_5_9;
double B_10_23 = -(A_5_0*A_2_9)/A_5_9;
double B_11_23 = -(A_5_0*A_3_9)/A_5_9;
double B_12_23 = -(A_5_0*A_4_9)/A_5_9;
double B_13_23 = A_1_1 - (A_5_0*A_1_15)/A_5_9;
double B_14_23 = A_2_1 - (A_5_0*A_2_15)/A_5_9;
double B_15_23 = A_3_1 - (A_5_0*A_3_15)/A_5_9;
double B_16_23 = A_4_1 - (A_5_0*A_4_15)/A_5_9;
double B_0_24 = -A_5_0*(A_1_3/A_5_9 - (A_5_0*A_1_19)/A_5_9_2);
double B_1_24 = -A_5_0*(A_2_3/A_5_9 - (A_5_0*A_2_19)/A_5_9_2);
double B_2_24 = -A_5_0*(A_3_3/A_5_9 - (A_5_0*A_3_19)/A_5_9_2);
double B_3_24 = -A_5_0*(A_4_3/A_5_9 - (A_5_0*A_4_19)/A_5_9_2);
double B_4_24 = A_0_0 - A_5_0*(A_0_9/A_5_9 - (A_5_0*A_0_34)/A_5_9_2);
double B_13_24 = -(A_5_0*A_1_9)/A_5_9;
double B_14_24 = -(A_5_0*A_2_9)/A_5_9;
double B_15_24 = -(A_5_0*A_3_9)/A_5_9;
double B_16_24 = -(A_5_0*A_4_9)/A_5_9;
C[0][0] = B_0_0;
C[1][0] = B_1_0;
C[2][0] = B_2_0;
C[3][0] = B_3_0;
C[4][0] = B_4_0;
C[5][0] = B_5_0;
C[6][0] = B_6_0;
C[7][0] = B_7_0;
C[8][0] = B_8_0;
C[0][1] = B_0_1;
C[1][1] = B_1_1;
C[2][1] = B_2_1;
C[3][1] = B_3_1;
C[4][1] = B_4_1;
C[5][1] = B_5_1;
C[6][1] = B_6_1;
C[7][1] = B_7_1;
C[8][1] = B_8_1;
C[0][2] = B_0_9;
C[1][2] = B_1_9;
C[2][2] = B_2_9;
C[3][2] = B_3_9;
C[4][2] = B_4_9;
C[5][2] = B_5_9;
C[6][2] = B_6_9;
C[7][2] = B_7_9;
C[8][2] = B_8_9;
C[13][2] = B_13_9;
C[14][2] = B_14_9;
C[15][2] = B_15_9;
C[16][2] = B_16_9;
C[0][3] = B_0_2;
C[1][3] = B_1_2;
C[2][3] = B_2_2;
C[3][3] = B_3_2;
C[4][3] = B_4_2;
C[5][3] = B_5_2;
C[6][3] = B_6_2;
C[7][3] = B_7_2;
C[8][3] = B_8_2;
C[9][3] = B_9_2;
C[10][3] = B_10_2;
C[11][3] = B_11_2;
C[12][3] = B_12_2;
C[0][4] = B_0_10;
C[1][4] = B_1_10;
C[2][4] = B_2_10;
C[3][4] = B_3_10;
C[4][4] = B_4_10;
C[5][4] = B_5_10;
C[6][4] = B_6_10;
C[7][4] = B_7_10;
C[8][4] = B_8_10;
C[13][4] = B_13_10;
C[14][4] = B_14_10;
C[15][4] = B_15_10;
C[16][4] = B_16_10;
C[0][5] = B_0_3;
C[1][5] = B_1_3;
C[2][5] = B_2_3;
C[3][5] = B_3_3;
C[4][5] = B_4_3;
C[5][5] = B_5_3;
C[6][5] = B_6_3;
C[7][5] = B_7_3;
C[8][5] = B_8_3;
C[9][5] = B_9_3;
C[10][5] = B_10_3;
C[11][5] = B_11_3;
C[12][5] = B_12_3;
C[0][6] = B_0_16;
C[1][6] = B_1_16;
C[2][6] = B_2_16;
C[3][6] = B_3_16;
C[4][6] = B_4_16;
C[5][6] = B_5_16;
C[6][6] = B_6_16;
C[7][6] = B_7_16;
C[8][6] = B_8_16;
C[13][6] = B_13_16;
C[14][6] = B_14_16;
C[15][6] = B_15_16;
C[16][6] = B_16_16;
C[0][7] = B_0_11;
C[1][7] = B_1_11;
C[2][7] = B_2_11;
C[3][7] = B_3_11;
C[4][7] = B_4_11;
C[5][7] = B_5_11;
C[6][7] = B_6_11;
C[7][7] = B_7_11;
C[8][7] = B_8_11;
C[9][7] = B_9_11;
C[10][7] = B_10_11;
C[11][7] = B_11_11;
C[12][7] = B_12_11;
C[13][7] = B_13_11;
C[14][7] = B_14_11;
C[15][7] = B_15_11;
C[16][7] = B_16_11;
C[0][8] = B_0_4;
C[1][8] = B_1_4;
C[2][8] = B_2_4;
C[3][8] = B_3_4;
C[4][8] = B_4_4;
C[5][8] = B_5_4;
C[6][8] = B_6_4;
C[7][8] = B_7_4;
C[8][8] = B_8_4;
C[9][8] = B_9_4;
C[10][8] = B_10_4;
C[11][8] = B_11_4;
C[12][8] = B_12_4;
C[0][9] = B_0_17;
C[1][9] = B_1_17;
C[2][9] = B_2_17;
C[3][9] = B_3_17;
C[4][9] = B_4_17;
C[5][9] = B_5_17;
C[6][9] = B_6_17;
C[7][9] = B_7_17;
C[8][9] = B_8_17;
C[13][9] = B_13_17;
C[14][9] = B_14_17;
C[15][9] = B_15_17;
C[16][9] = B_16_17;
C[0][10] = B_0_12;
C[1][10] = B_1_12;
C[2][10] = B_2_12;
C[3][10] = B_3_12;
C[4][10] = B_4_12;
C[5][10] = B_5_12;
C[6][10] = B_6_12;
C[7][10] = B_7_12;
C[8][10] = B_8_12;
C[9][10] = B_9_12;
C[10][10] = B_10_12;
C[11][10] = B_11_12;
C[12][10] = B_12_12;
C[13][10] = B_13_12;
C[14][10] = B_14_12;
C[15][10] = B_15_12;
C[16][10] = B_16_12;
C[0][11] = B_0_5;
C[1][11] = B_1_5;
C[2][11] = B_2_5;
C[3][11] = B_3_5;
C[4][11] = B_4_5;
C[5][11] = B_5_5;
C[6][11] = B_6_5;
C[7][11] = B_7_5;
C[8][11] = B_8_5;
C[9][11] = B_9_5;
C[10][11] = B_10_5;
C[11][11] = B_11_5;
C[12][11] = B_12_5;
C[0][12] = B_0_21;
C[1][12] = B_1_21;
C[2][12] = B_2_21;
C[3][12] = B_3_21;
C[4][12] = B_4_21;
C[13][12] = B_13_21;
C[14][12] = B_14_21;
C[15][12] = B_15_21;
C[16][12] = B_16_21;
C[0][13] = B_0_18;
C[1][13] = B_1_18;
C[2][13] = B_2_18;
C[3][13] = B_3_18;
C[4][13] = B_4_18;
C[9][13] = B_9_18;
C[10][13] = B_10_18;
C[11][13] = B_11_18;
C[12][13] = B_12_18;
C[13][13] = B_13_18;
C[14][13] = B_14_18;
C[15][13] = B_15_18;
C[16][13] = B_16_18;
C[0][14] = B_0_13;
C[1][14] = B_1_13;
C[2][14] = B_2_13;
C[3][14] = B_3_13;
C[4][14] = B_4_13;
C[9][14] = B_9_13;
C[10][14] = B_10_13;
C[11][14] = B_11_13;
C[12][14] = B_12_13;
C[13][14] = B_13_13;
C[14][14] = B_14_13;
C[15][14] = B_15_13;
C[16][14] = B_16_13;
C[0][15] = B_0_6;
C[1][15] = B_1_6;
C[2][15] = B_2_6;
C[3][15] = B_3_6;
C[4][15] = B_4_6;
C[9][15] = B_9_6;
C[10][15] = B_10_6;
C[11][15] = B_11_6;
C[12][15] = B_12_6;
C[0][16] = B_0_22;
C[1][16] = B_1_22;
C[2][16] = B_2_22;
C[3][16] = B_3_22;
C[4][16] = B_4_22;
C[5][16] = B_5_22;
C[6][16] = B_6_22;
C[7][16] = B_7_22;
C[8][16] = B_8_22;
C[13][16] = B_13_22;
C[14][16] = B_14_22;
C[15][16] = B_15_22;
C[16][16] = B_16_22;
C[0][17] = B_0_19;
C[1][17] = B_1_19;
C[2][17] = B_2_19;
C[3][17] = B_3_19;
C[4][17] = B_4_19;
C[5][17] = B_5_19;
C[6][17] = B_6_19;
C[7][17] = B_7_19;
C[8][17] = B_8_19;
C[9][17] = B_9_19;
C[10][17] = B_10_19;
C[11][17] = B_11_19;
C[12][17] = B_12_19;
C[13][17] = B_13_19;
C[14][17] = B_14_19;
C[15][17] = B_15_19;
C[16][17] = B_16_19;
C[0][18] = B_0_14;
C[1][18] = B_1_14;
C[2][18] = B_2_14;
C[3][18] = B_3_14;
C[4][18] = B_4_14;
C[5][18] = B_5_14;
C[6][18] = B_6_14;
C[7][18] = B_7_14;
C[8][18] = B_8_14;
C[9][18] = B_9_14;
C[10][18] = B_10_14;
C[11][18] = B_11_14;
C[12][18] = B_12_14;
C[13][18] = B_13_14;
C[14][18] = B_14_14;
C[15][18] = B_15_14;
C[16][18] = B_16_14;
C[0][19] = B_0_7;
C[1][19] = B_1_7;
C[2][19] = B_2_7;
C[3][19] = B_3_7;
C[4][19] = B_4_7;
C[5][19] = B_5_7;
C[6][19] = B_6_7;
C[7][19] = B_7_7;
C[8][19] = B_8_7;
C[9][19] = B_9_7;
C[10][19] = B_10_7;
C[11][19] = B_11_7;
C[12][19] = B_12_7;
C[0][20] = B_0_24;
C[1][20] = B_1_24;
C[2][20] = B_2_24;
C[3][20] = B_3_24;
C[4][20] = B_4_24;
C[13][20] = B_13_24;
C[14][20] = B_14_24;
C[15][20] = B_15_24;
C[16][20] = B_16_24;
C[0][21] = B_0_23;
C[1][21] = B_1_23;
C[2][21] = B_2_23;
C[3][21] = B_3_23;
C[4][21] = B_4_23;
C[9][21] = B_9_23;
C[10][21] = B_10_23;
C[11][21] = B_11_23;
C[12][21] = B_12_23;
C[13][21] = B_13_23;
C[14][21] = B_14_23;
C[15][21] = B_15_23;
C[16][21] = B_16_23;
C[0][22] = B_0_20;
C[1][22] = B_1_20;
C[2][22] = B_2_20;
C[3][22] = B_3_20;
C[4][22] = B_4_20;
C[9][22] = B_9_20;
C[10][22] = B_10_20;
C[11][22] = B_11_20;
C[12][22] = B_12_20;
C[13][22] = B_13_20;
C[14][22] = B_14_20;
C[15][22] = B_15_20;
C[16][22] = B_16_20;
C[0][23] = B_0_15;
C[1][23] = B_1_15;
C[2][23] = B_2_15;
C[3][23] = B_3_15;
C[4][23] = B_4_15;
C[9][23] = B_9_15;
C[10][23] = B_10_15;
C[11][23] = B_11_15;
C[12][23] = B_12_15;
C[13][23] = B_13_15;
C[14][23] = B_14_15;
C[15][23] = B_15_15;
C[16][23] = B_16_15;
C[0][24] = B_0_8;
C[1][24] = B_1_8;
C[2][24] = B_2_8;
C[3][24] = B_3_8;
C[4][24] = B_4_8;
C[9][24] = B_9_8;
C[10][24] = B_10_8;
C[11][24] = B_11_8;
C[12][24] = B_12_8;
int rank = rref<17, 25>(C);
// assert(rank == 13);
double D_0_13 = C[0][13];
double D_1_13 = C[1][13];
double D_2_13 = C[2][13];
double D_3_13 = C[3][13];
double D_4_13 = C[4][13];
double D_5_13 = C[5][13];
double D_6_13 = C[6][13];
double D_7_13 = C[7][13];
double D_8_13 = C[8][13];
double D_9_13 = C[9][13];
double D_10_13 = C[10][13];
double D_11_13 = C[11][13];
double D_12_13 = C[12][13];
double D_0_14 = C[0][14];
double D_1_14 = C[1][14];
double D_2_14 = C[2][14];
double D_3_14 = C[3][14];
double D_4_14 = C[4][14];
double D_5_14 = C[5][14];
double D_6_14 = C[6][14];
double D_7_14 = C[7][14];
double D_8_14 = C[8][14];
double D_9_14 = C[9][14];
double D_10_14 = C[10][14];
double D_11_14 = C[11][14];
double D_12_14 = C[12][14];
double D_0_15 = C[0][15];
double D_1_15 = C[1][15];
double D_2_15 = C[2][15];
double D_3_15 = C[3][15];
double D_4_15 = C[4][15];
double D_5_15 = C[5][15];
double D_6_15 = C[6][15];
double D_7_15 = C[7][15];
double D_8_15 = C[8][15];
double D_9_15 = C[9][15];
double D_10_15 = C[10][15];
double D_11_15 = C[11][15];
double D_12_15 = C[12][15];
double D_0_16 = C[0][16];
double D_1_16 = C[1][16];
double D_2_16 = C[2][16];
double D_3_16 = C[3][16];
double D_4_16 = C[4][16];
double D_5_16 = C[5][16];
double D_6_16 = C[6][16];
double D_7_16 = C[7][16];
double D_8_16 = C[8][16];
double D_9_16 = C[9][16];
double D_10_16 = C[10][16];
double D_11_16 = C[11][16];
double D_12_16 = C[12][16];
double D_0_17 = C[0][17];
double D_1_17 = C[1][17];
double D_2_17 = C[2][17];
double D_3_17 = C[3][17];
double D_4_17 = C[4][17];
double D_5_17 = C[5][17];
double D_6_17 = C[6][17];
double D_7_17 = C[7][17];
double D_8_17 = C[8][17];
double D_9_17 = C[9][17];
double D_10_17 = C[10][17];
double D_11_17 = C[11][17];
double D_12_17 = C[12][17];
double D_0_18 = C[0][18];
double D_1_18 = C[1][18];
double D_2_18 = C[2][18];
double D_3_18 = C[3][18];
double D_4_18 = C[4][18];
double D_5_18 = C[5][18];
double D_6_18 = C[6][18];
double D_7_18 = C[7][18];
double D_8_18 = C[8][18];
double D_9_18 = C[9][18];
double D_10_18 = C[10][18];
double D_11_18 = C[11][18];
double D_12_18 = C[12][18];
double D_0_19 = C[0][19];
double D_1_19 = C[1][19];
double D_2_19 = C[2][19];
double D_3_19 = C[3][19];
double D_4_19 = C[4][19];
double D_5_19 = C[5][19];
double D_6_19 = C[6][19];
double D_7_19 = C[7][19];
double D_8_19 = C[8][19];
double D_9_19 = C[9][19];
double D_10_19 = C[10][19];
double D_11_19 = C[11][19];
double D_12_19 = C[12][19];
double D_0_20 = C[0][20];
double D_1_20 = C[1][20];
double D_2_20 = C[2][20];
double D_3_20 = C[3][20];
double D_4_20 = C[4][20];
double D_5_20 = C[5][20];
double D_6_20 = C[6][20];
double D_7_20 = C[7][20];
double D_8_20 = C[8][20];
double D_9_20 = C[9][20];
double D_10_20 = C[10][20];
double D_11_20 = C[11][20];
double D_12_20 = C[12][20];
double D_0_21 = C[0][21];
double D_1_21 = C[1][21];
double D_2_21 = C[2][21];
double D_3_21 = C[3][21];
double D_4_21 = C[4][21];
double D_5_21 = C[5][21];
double D_6_21 = C[6][21];
double D_7_21 = C[7][21];
double D_8_21 = C[8][21];
double D_9_21 = C[9][21];
double D_10_21 = C[10][21];
double D_11_21 = C[11][21];
double D_12_21 = C[12][21];
double D_0_22 = C[0][22];
double D_1_22 = C[1][22];
double D_2_22 = C[2][22];
double D_3_22 = C[3][22];
double D_4_22 = C[4][22];
double D_5_22 = C[5][22];
double D_6_22 = C[6][22];
double D_7_22 = C[7][22];
double D_8_22 = C[8][22];
double D_9_22 = C[9][22];
double D_10_22 = C[10][22];
double D_11_22 = C[11][22];
double D_12_22 = C[12][22];
double D_0_23 = C[0][23];
double D_1_23 = C[1][23];
double D_2_23 = C[2][23];
double D_3_23 = C[3][23];
double D_4_23 = C[4][23];
double D_5_23 = C[5][23];
double D_6_23 = C[6][23];
double D_7_23 = C[7][23];
double D_8_23 = C[8][23];
double D_9_23 = C[9][23];
double D_10_23 = C[10][23];
double D_11_23 = C[11][23];
double D_12_23 = C[12][23];
double D_0_24 = C[0][24];
double D_1_24 = C[1][24];
double D_2_24 = C[2][24];
double D_3_24 = C[3][24];
double D_4_24 = C[4][24];
double D_5_24 = C[5][24];
double D_6_24 = C[6][24];
double D_7_24 = C[7][24];
double D_8_24 = C[8][24];
double D_9_24 = C[9][24];
double D_10_24 = C[10][24];
double D_11_24 = C[11][24];
double D_12_24 = C[12][24];
double W000 = -D_3_20;
double W100 = -D_5_20;
double W200 = -D_7_20;
double W020 = -D_3_16;
double W120 = -D_5_16;
double W220 = -D_7_16;
double W001 = D_2_20 - D_3_21;
double W101 = D_4_20 - D_5_21;
double W201 = D_6_20 - D_7_21;
double W011 = -D_3_13;
double W111 = -D_5_13;
double W211 = -D_7_13;
double W021 = D_2_16 - D_3_17;
double W121 = D_4_16 - D_5_17;
double W221 = D_6_16 - D_7_17;
double W002 = D_2_21 - D_3_22;
double W102 = D_4_21 - D_5_22;
double W202 = D_6_21 - D_7_22;
double W012 = D_2_13 - D_3_14;
double W112 = D_4_13 - D_5_14;
double W212 = D_6_13 - D_7_14;
double W022 = D_2_17 - D_3_18;
double W122 = D_4_17 - D_5_18;
double W222 = D_6_17 - D_7_18;
double W003 = D_2_22 - D_3_23;
double W103 = D_4_22 - D_5_23;
double W203 = D_6_22 - D_7_23;
double W013 = D_2_14 - D_3_15;
double W113 = D_4_14 - D_5_15;
double W213 = D_6_14 - D_7_15;
double W023 = D_2_18 - D_3_19;
double W123 = D_4_18 - D_5_19;
double W223 = D_6_18 - D_7_19;
double W004 = D_2_23 - D_3_24;
double W104 = D_4_23 - D_5_24;
double W204 = D_6_23 - D_7_24;
double W014 = D_2_15;
double W114 = D_4_15;
double W214 = D_6_15;
double W024 = D_2_19;
double W124 = D_4_19;
double W224 = D_6_19;
double W005 = D_2_24;
double W105 = D_4_24;
double W205 = D_6_24;
Z[12] = W005*W114*W224 - W005*W124*W214 - W014*W105*W224 + W014*W124*W205 + W024*W105*W214 - W024*W114*W205;
Z[11] = W004*W114*W224 - W004*W124*W214 + W005*W113*W224 + W005*W114*W223 - W005*W123*W214 - W005*W124*W213 - W013*W105*W224 + W013*W124*W205 - W014*W104*W224 - W014*W105*W223 + W014*W123*W205 + W014*W124*W204 + W023*W105*W214 - W023*W114*W205 + W024*W104*W214 + W024*W105*W213 - W024*W113*W205 - W024*W114*W204;
Z[10] = W003*W114*W224 - W003*W124*W214 + W004*W113*W224 + W004*W114*W223 - W004*W123*W214 - W004*W124*W213 + W005*W112*W224 + W005*W113*W223 + W005*W114*W222 - W005*W122*W214 - W005*W123*W213 - W005*W124*W212 - W012*W105*W224 + W012*W124*W205 - W013*W104*W224 - W013*W105*W223 + W013*W123*W205 + W013*W124*W204 - W014*W103*W224 - W014*W104*W223 - W014*W105*W222 + W014*W122*W205 + W014*W123*W204 + W014*W124*W203 + W022*W105*W214 - W022*W114*W205 + W023*W104*W214 + W023*W105*W213 - W023*W113*W205 - W023*W114*W204 + W024*W103*W214 + W024*W104*W213 + W024*W105*W212 - W024*W112*W205 - W024*W113*W204 - W024*W114*W203;
Z[9] = W002*W114*W224 - W002*W124*W214 + W003*W113*W224 + W003*W114*W223 - W003*W123*W214 - W003*W124*W213 + W004*W112*W224 + W004*W113*W223 + W004*W114*W222 - W004*W122*W214 - W004*W123*W213 - W004*W124*W212 + W005*W111*W224 + W005*W112*W223 + W005*W113*W222 + W005*W114*W221 - W005*W121*W214 - W005*W122*W213 - W005*W123*W212 - W005*W124*W211 - W011*W105*W224 + W011*W124*W205 - W012*W104*W224 - W012*W105*W223 + W012*W123*W205 + W012*W124*W204 - W013*W103*W224 - W013*W104*W223 - W013*W105*W222 + W013*W122*W205 + W013*W123*W204 + W013*W124*W203 - W014*W102*W224 - W014*W103*W223 - W014*W104*W222 - W014*W105*W221 + W014*W121*W205 + W014*W122*W204 + W014*W123*W203 + W014*W124*W202 + W021*W105*W214 - W021*W114*W205 + W022*W104*W214 + W022*W105*W213 - W022*W113*W205 - W022*W114*W204 + W023*W103*W214 + W023*W104*W213 + W023*W105*W212 - W023*W112*W205 - W023*W113*W204 - W023*W114*W203 + W024*W102*W214 + W024*W103*W213 + W024*W104*W212 + W024*W105*W211 - W024*W111*W205 - W024*W112*W204 - W024*W113*W203 - W024*W114*W202;
Z[8] = W001*W114*W224 - W001*W124*W214 + W002*W113*W224 + W002*W114*W223 - W002*W123*W214 - W002*W124*W213 + W003*W112*W224 + W003*W113*W223 + W003*W114*W222 - W003*W122*W214 - W003*W123*W213 - W003*W124*W212 + W004*W111*W224 + W004*W112*W223 + W004*W113*W222 + W004*W114*W221 - W004*W121*W214 - W004*W122*W213 - W004*W123*W212 - W004*W124*W211 + W005*W111*W223 + W005*W112*W222 + W005*W113*W221 + W005*W114*W220 - W005*W120*W214 - W005*W121*W213 - W005*W122*W212 - W005*W123*W211 - W011*W104*W224 - W011*W105*W223 + W011*W123*W205 + W011*W124*W204 - W012*W103*W224 - W012*W104*W223 - W012*W105*W222 + W012*W122*W205 + W012*W123*W204 + W012*W124*W203 - W013*W102*W224 - W013*W103*W223 - W013*W104*W222 - W013*W105*W221 + W013*W121*W205 + W013*W122*W204 + W013*W123*W203 + W013*W124*W202 - W014*W101*W224 - W014*W102*W223 - W014*W103*W222 - W014*W104*W221 - W014*W105*W220 + W014*W120*W205 + W014*W121*W204 + W014*W122*W203 + W014*W123*W202 + W014*W124*W201 + W020*W105*W214 - W020*W114*W205 + W021*W104*W214 + W021*W105*W213 - W021*W113*W205 - W021*W114*W204 + W022*W103*W214 + W022*W104*W213 + W022*W105*W212 - W022*W112*W205 - W022*W113*W204 - W022*W114*W203 + W023*W102*W214 + W023*W103*W213 + W023*W104*W212 + W023*W105*W211 - W023*W111*W205 - W023*W112*W204 - W023*W113*W203 - W023*W114*W202 + W024*W101*W214 + W024*W102*W213 + W024*W103*W212 + W024*W104*W211 - W024*W111*W204 - W024*W112*W203 - W024*W113*W202 - W024*W114*W201;
Z[7] = W000*W114*W224 - W000*W124*W214 + W001*W113*W224 + W001*W114*W223 - W001*W123*W214 - W001*W124*W213 + W002*W112*W224 + W002*W113*W223 + W002*W114*W222 - W002*W122*W214 - W002*W123*W213 - W002*W124*W212 + W003*W111*W224 + W003*W112*W223 + W003*W113*W222 + W003*W114*W221 - W003*W121*W214 - W003*W122*W213 - W003*W123*W212 - W003*W124*W211 + W004*W111*W223 + W004*W112*W222 + W004*W113*W221 + W004*W114*W220 - W004*W120*W214 - W004*W121*W213 - W004*W122*W212 - W004*W123*W211 + W005*W111*W222 + W005*W112*W221 + W005*W113*W220 - W005*W120*W213 - W005*W121*W212 - W005*W122*W211 - W011*W103*W224 - W011*W104*W223 - W011*W105*W222 + W011*W122*W205 + W011*W123*W204 + W011*W124*W203 - W012*W102*W224 - W012*W103*W223 - W012*W104*W222 - W012*W105*W221 + W012*W121*W205 + W012*W122*W204 + W012*W123*W203 + W012*W124*W202 - W013*W101*W224 - W013*W102*W223 - W013*W103*W222 - W013*W104*W221 - W013*W105*W220 + W013*W120*W205 + W013*W121*W204 + W013*W122*W203 + W013*W123*W202 + W013*W124*W201 - W014*W100*W224 - W014*W101*W223 - W014*W102*W222 - W014*W103*W221 - W014*W104*W220 + W014*W120*W204 + W014*W121*W203 + W014*W122*W202 + W014*W123*W201 + W014*W124*W200 + W020*W104*W214 + W020*W105*W213 - W020*W113*W205 - W020*W114*W204 + W021*W103*W214 + W021*W104*W213 + W021*W105*W212 - W021*W112*W205 - W021*W113*W204 - W021*W114*W203 + W022*W102*W214 + W022*W103*W213 + W022*W104*W212 + W022*W105*W211 - W022*W111*W205 - W022*W112*W204 - W022*W113*W203 - W022*W114*W202 + W023*W101*W214 + W023*W102*W213 + W023*W103*W212 + W023*W104*W211 - W023*W111*W204 - W023*W112*W203 - W023*W113*W202 - W023*W114*W201 + W024*W100*W214 + W024*W101*W213 + W024*W102*W212 + W024*W103*W211 - W024*W111*W203 - W024*W112*W202 - W024*W113*W201 - W024*W114*W200;
Z[6] = W000*W113*W224 + W000*W114*W223 - W000*W123*W214 - W000*W124*W213 + W001*W112*W224 + W001*W113*W223 + W001*W114*W222 - W001*W122*W214 - W001*W123*W213 - W001*W124*W212 + W002*W111*W224 + W002*W112*W223 + W002*W113*W222 + W002*W114*W221 - W002*W121*W214 - W002*W122*W213 - W002*W123*W212 - W002*W124*W211 + W003*W111*W223 + W003*W112*W222 + W003*W113*W221 + W003*W114*W220 - W003*W120*W214 - W003*W121*W213 - W003*W122*W212 - W003*W123*W211 + W004*W111*W222 + W004*W112*W221 + W004*W113*W220 - W004*W120*W213 - W004*W121*W212 - W004*W122*W211 + W005*W111*W221 + W005*W112*W220 - W005*W120*W212 - W005*W121*W211 - W011*W102*W224 - W011*W103*W223 - W011*W104*W222 - W011*W105*W221 + W011*W121*W205 + W011*W122*W204 + W011*W123*W203 + W011*W124*W202 - W012*W101*W224 - W012*W102*W223 - W012*W103*W222 - W012*W104*W221 - W012*W105*W220 + W012*W120*W205 + W012*W121*W204 + W012*W122*W203 + W012*W123*W202 + W012*W124*W201 - W013*W100*W224 - W013*W101*W223 - W013*W102*W222 - W013*W103*W221 - W013*W104*W220 + W013*W120*W204 + W013*W121*W203 + W013*W122*W202 + W013*W123*W201 + W013*W124*W200 - W014*W100*W223 - W014*W101*W222 - W014*W102*W221 - W014*W103*W220 + W014*W120*W203 + W014*W121*W202 + W014*W122*W201 + W014*W123*W200 + W020*W103*W214 + W020*W104*W213 + W020*W105*W212 - W020*W112*W205 - W020*W113*W204 - W020*W114*W203 + W021*W102*W214 + W021*W103*W213 + W021*W104*W212 + W021*W105*W211 - W021*W111*W205 - W021*W112*W204 - W021*W113*W203 - W021*W114*W202 + W022*W101*W214 + W022*W102*W213 + W022*W103*W212 + W022*W104*W211 - W022*W111*W204 - W022*W112*W203 - W022*W113*W202 - W022*W114*W201 + W023*W100*W214 + W023*W101*W213 + W023*W102*W212 + W023*W103*W211 - W023*W111*W203 - W023*W112*W202 - W023*W113*W201 - W023*W114*W200 + W024*W100*W213 + W024*W101*W212 + W024*W102*W211 - W024*W111*W202 - W024*W112*W201 - W024*W113*W200;
Z[5] = W000*W112*W224 + W000*W113*W223 + W000*W114*W222 - W000*W122*W214 - W000*W123*W213 - W000*W124*W212 + W001*W111*W224 + W001*W112*W223 + W001*W113*W222 + W001*W114*W221 - W001*W121*W214 - W001*W122*W213 - W001*W123*W212 - W001*W124*W211 + W002*W111*W223 + W002*W112*W222 + W002*W113*W221 + W002*W114*W220 - W002*W120*W214 - W002*W121*W213 - W002*W122*W212 - W002*W123*W211 + W003*W111*W222 + W003*W112*W221 + W003*W113*W220 - W003*W120*W213 - W003*W121*W212 - W003*W122*W211 + W004*W111*W221 + W004*W112*W220 - W004*W120*W212 - W004*W121*W211 + W005*W111*W220 - W005*W120*W211 - W011*W101*W224 - W011*W102*W223 - W011*W103*W222 - W011*W104*W221 - W011*W105*W220 + W011*W120*W205 + W011*W121*W204 + W011*W122*W203 + W011*W123*W202 + W011*W124*W201 - W012*W100*W224 - W012*W101*W223 - W012*W102*W222 - W012*W103*W221 - W012*W104*W220 + W012*W120*W204 + W012*W121*W203 + W012*W122*W202 + W012*W123*W201 + W012*W124*W200 - W013*W100*W223 - W013*W101*W222 - W013*W102*W221 - W013*W103*W220 + W013*W120*W203 + W013*W121*W202 + W013*W122*W201 + W013*W123*W200 - W014*W100*W222 - W014*W101*W221 - W014*W102*W220 + W014*W120*W202 + W014*W121*W201 + W014*W122*W200 + W020*W102*W214 + W020*W103*W213 + W020*W104*W212 + W020*W105*W211 - W020*W111*W205 - W020*W112*W204 - W020*W113*W203 - W020*W114*W202 + W021*W101*W214 + W021*W102*W213 + W021*W103*W212 + W021*W104*W211 - W021*W111*W204 - W021*W112*W203 - W021*W113*W202 - W021*W114*W201 + W022*W100*W214 + W022*W101*W213 + W022*W102*W212 + W022*W103*W211 - W022*W111*W203 - W022*W112*W202 - W022*W113*W201 - W022*W114*W200 + W023*W100*W213 + W023*W101*W212 + W023*W102*W211 - W023*W111*W202 - W023*W112*W201 - W023*W113*W200 + W024*W100*W212 + W024*W101*W211 - W024*W111*W201 - W024*W112*W200;
Z[4] = W000*W111*W224 + W000*W112*W223 + W000*W113*W222 + W000*W114*W221 - W000*W121*W214 - W000*W122*W213 - W000*W123*W212 - W000*W124*W211 + W001*W111*W223 + W001*W112*W222 + W001*W113*W221 + W001*W114*W220 - W001*W120*W214 - W001*W121*W213 - W001*W122*W212 - W001*W123*W211 + W002*W111*W222 + W002*W112*W221 + W002*W113*W220 - W002*W120*W213 - W002*W121*W212 - W002*W122*W211 + W003*W111*W221 + W003*W112*W220 - W003*W120*W212 - W003*W121*W211 + W004*W111*W220 - W004*W120*W211 - W011*W100*W224 - W011*W101*W223 - W011*W102*W222 - W011*W103*W221 - W011*W104*W220 + W011*W120*W204 + W011*W121*W203 + W011*W122*W202 + W011*W123*W201 + W011*W124*W200 - W012*W100*W223 - W012*W101*W222 - W012*W102*W221 - W012*W103*W220 + W012*W120*W203 + W012*W121*W202 + W012*W122*W201 + W012*W123*W200 - W013*W100*W222 - W013*W101*W221 - W013*W102*W220 + W013*W120*W202 + W013*W121*W201 + W013*W122*W200 - W014*W100*W221 - W014*W101*W220 + W014*W120*W201 + W014*W121*W200 + W020*W101*W214 + W020*W102*W213 + W020*W103*W212 + W020*W104*W211 - W020*W111*W204 - W020*W112*W203 - W020*W113*W202 - W020*W114*W201 + W021*W100*W214 + W021*W101*W213 + W021*W102*W212 + W021*W103*W211 - W021*W111*W203 - W021*W112*W202 - W021*W113*W201 - W021*W114*W200 + W022*W100*W213 + W022*W101*W212 + W022*W102*W211 - W022*W111*W202 - W022*W112*W201 - W022*W113*W200 + W023*W100*W212 + W023*W101*W211 - W023*W111*W201 - W023*W112*W200 + W024*W100*W211 - W024*W111*W200;
Z[3] = W000*W111*W223 + W000*W112*W222 + W000*W113*W221 + W000*W114*W220 - W000*W120*W214 - W000*W121*W213 - W000*W122*W212 - W000*W123*W211 + W001*W111*W222 + W001*W112*W221 + W001*W113*W220 - W001*W120*W213 - W001*W121*W212 - W001*W122*W211 + W002*W111*W221 + W002*W112*W220 - W002*W120*W212 - W002*W121*W211 + W003*W111*W220 - W003*W120*W211 - W011*W100*W223 - W011*W101*W222 - W011*W102*W221 - W011*W103*W220 + W011*W120*W203 + W011*W121*W202 + W011*W122*W201 + W011*W123*W200 - W012*W100*W222 - W012*W101*W221 - W012*W102*W220 + W012*W120*W202 + W012*W121*W201 + W012*W122*W200 - W013*W100*W221 - W013*W101*W220 + W013*W120*W201 + W013*W121*W200 - W014*W100*W220 + W014*W120*W200 + W020*W100*W214 + W020*W101*W213 + W020*W102*W212 + W020*W103*W211 - W020*W111*W203 - W020*W112*W202 - W020*W113*W201 - W020*W114*W200 + W021*W100*W213 + W021*W101*W212 + W021*W102*W211 - W021*W111*W202 - W021*W112*W201 - W021*W113*W200 + W022*W100*W212 + W022*W101*W211 - W022*W111*W201 - W022*W112*W200 + W023*W100*W211 - W023*W111*W200;
Z[2] = W000*W111*W222 + W000*W112*W221 + W000*W113*W220 - W000*W120*W213 - W000*W121*W212 - W000*W122*W211 + W001*W111*W221 + W001*W112*W220 - W001*W120*W212 - W001*W121*W211 + W002*W111*W220 - W002*W120*W211 - W011*W100*W222 - W011*W101*W221 - W011*W102*W220 + W011*W120*W202 + W011*W121*W201 + W011*W122*W200 - W012*W100*W221 - W012*W101*W220 + W012*W120*W201 + W012*W121*W200 - W013*W100*W220 + W013*W120*W200 + W020*W100*W213 + W020*W101*W212 + W020*W102*W211 - W020*W111*W202 - W020*W112*W201 - W020*W113*W200 + W021*W100*W212 + W021*W101*W211 - W021*W111*W201 - W021*W112*W200 + W022*W100*W211 - W022*W111*W200;
Z[1] = W000*W111*W221 + W000*W112*W220 - W000*W120*W212 - W000*W121*W211 + W001*W111*W220 - W001*W120*W211 - W011*W100*W221 - W011*W101*W220 + W011*W120*W201 + W011*W121*W200 - W012*W100*W220 + W012*W120*W200 + W020*W100*W212 + W020*W101*W211 - W020*W111*W201 - W020*W112*W200 + W021*W100*W211 - W021*W111*W200;
Z[0] = W000*W111*W220 - W000*W120*W211 - W011*W100*W220 + W011*W120*W200 + W020*W100*W211 - W020*W111*W200;
}
void finalize(double C[17][25], double u3, double Y[3][3])
{
double D_0_13 = C[0][13];
double D_1_13 = C[1][13];
double D_2_13 = C[2][13];
double D_3_13 = C[3][13];
double D_4_13 = C[4][13];
double D_5_13 = C[5][13];
double D_6_13 = C[6][13];
double D_7_13 = C[7][13];
double D_8_13 = C[8][13];
double D_9_13 = C[9][13];
double D_10_13 = C[10][13];
double D_11_13 = C[11][13];
double D_12_13 = C[12][13];
double D_0_14 = C[0][14];
double D_1_14 = C[1][14];
double D_2_14 = C[2][14];
double D_3_14 = C[3][14];
double D_4_14 = C[4][14];
double D_5_14 = C[5][14];
double D_6_14 = C[6][14];
double D_7_14 = C[7][14];
double D_8_14 = C[8][14];
double D_9_14 = C[9][14];
double D_10_14 = C[10][14];
double D_11_14 = C[11][14];
double D_12_14 = C[12][14];
double D_0_15 = C[0][15];
double D_1_15 = C[1][15];
double D_2_15 = C[2][15];
double D_3_15 = C[3][15];
double D_4_15 = C[4][15];
double D_5_15 = C[5][15];
double D_6_15 = C[6][15];
double D_7_15 = C[7][15];
double D_8_15 = C[8][15];
double D_9_15 = C[9][15];
double D_10_15 = C[10][15];
double D_11_15 = C[11][15];
double D_12_15 = C[12][15];
double D_0_16 = C[0][16];
double D_1_16 = C[1][16];
double D_2_16 = C[2][16];
double D_3_16 = C[3][16];
double D_4_16 = C[4][16];
double D_5_16 = C[5][16];
double D_6_16 = C[6][16];
double D_7_16 = C[7][16];
double D_8_16 = C[8][16];
double D_9_16 = C[9][16];
double D_10_16 = C[10][16];
double D_11_16 = C[11][16];
double D_12_16 = C[12][16];
double D_0_17 = C[0][17];
double D_1_17 = C[1][17];
double D_2_17 = C[2][17];
double D_3_17 = C[3][17];
double D_4_17 = C[4][17];
double D_5_17 = C[5][17];
double D_6_17 = C[6][17];
double D_7_17 = C[7][17];
double D_8_17 = C[8][17];
double D_9_17 = C[9][17];
double D_10_17 = C[10][17];
double D_11_17 = C[11][17];
double D_12_17 = C[12][17];
double D_0_18 = C[0][18];
double D_1_18 = C[1][18];
double D_2_18 = C[2][18];
double D_3_18 = C[3][18];
double D_4_18 = C[4][18];
double D_5_18 = C[5][18];
double D_6_18 = C[6][18];
double D_7_18 = C[7][18];
double D_8_18 = C[8][18];
double D_9_18 = C[9][18];
double D_10_18 = C[10][18];
double D_11_18 = C[11][18];
double D_12_18 = C[12][18];
double D_0_19 = C[0][19];
double D_1_19 = C[1][19];
double D_2_19 = C[2][19];
double D_3_19 = C[3][19];
double D_4_19 = C[4][19];
double D_5_19 = C[5][19];
double D_6_19 = C[6][19];
double D_7_19 = C[7][19];
double D_8_19 = C[8][19];
double D_9_19 = C[9][19];
double D_10_19 = C[10][19];
double D_11_19 = C[11][19];
double D_12_19 = C[12][19];
double D_0_20 = C[0][20];
double D_1_20 = C[1][20];
double D_2_20 = C[2][20];
double D_3_20 = C[3][20];
double D_4_20 = C[4][20];
double D_5_20 = C[5][20];
double D_6_20 = C[6][20];
double D_7_20 = C[7][20];
double D_8_20 = C[8][20];
double D_9_20 = C[9][20];
double D_10_20 = C[10][20];
double D_11_20 = C[11][20];
double D_12_20 = C[12][20];
double D_0_21 = C[0][21];
double D_1_21 = C[1][21];
double D_2_21 = C[2][21];
double D_3_21 = C[3][21];
double D_4_21 = C[4][21];
double D_5_21 = C[5][21];
double D_6_21 = C[6][21];
double D_7_21 = C[7][21];
double D_8_21 = C[8][21];
double D_9_21 = C[9][21];
double D_10_21 = C[10][21];
double D_11_21 = C[11][21];
double D_12_21 = C[12][21];
double D_0_22 = C[0][22];
double D_1_22 = C[1][22];
double D_2_22 = C[2][22];
double D_3_22 = C[3][22];
double D_4_22 = C[4][22];
double D_5_22 = C[5][22];
double D_6_22 = C[6][22];
double D_7_22 = C[7][22];
double D_8_22 = C[8][22];
double D_9_22 = C[9][22];
double D_10_22 = C[10][22];
double D_11_22 = C[11][22];
double D_12_22 = C[12][22];
double D_0_23 = C[0][23];
double D_1_23 = C[1][23];
double D_2_23 = C[2][23];
double D_3_23 = C[3][23];
double D_4_23 = C[4][23];
double D_5_23 = C[5][23];
double D_6_23 = C[6][23];
double D_7_23 = C[7][23];
double D_8_23 = C[8][23];
double D_9_23 = C[9][23];
double D_10_23 = C[10][23];
double D_11_23 = C[11][23];
double D_12_23 = C[12][23];
double D_0_24 = C[0][24];
double D_1_24 = C[1][24];
double D_2_24 = C[2][24];
double D_3_24 = C[3][24];
double D_4_24 = C[4][24];
double D_5_24 = C[5][24];
double D_6_24 = C[6][24];
double D_7_24 = C[7][24];
double D_8_24 = C[8][24];
double D_9_24 = C[9][24];
double D_10_24 = C[10][24];
double D_11_24 = C[11][24];
double D_12_24 = C[12][24];
double u3_2 = u3*u3;
double u3_3 = u3*u3_2;
double u3_4 = u3*u3_3;
double u3_5 = u3*u3_4;
double W000 = -D_3_20;
double W100 = -D_5_20;
double W200 = -D_7_20;
double W020 = -D_3_16;
double W120 = -D_5_16;
double W220 = -D_7_16;
double W001 = D_2_20 - D_3_21;
double W101 = D_4_20 - D_5_21;
double W201 = D_6_20 - D_7_21;
double W011 = -D_3_13;
double W111 = -D_5_13;
double W211 = -D_7_13;
double W021 = D_2_16 - D_3_17;
double W121 = D_4_16 - D_5_17;
double W221 = D_6_16 - D_7_17;
double W002 = D_2_21 - D_3_22;
double W102 = D_4_21 - D_5_22;
double W202 = D_6_21 - D_7_22;
double W012 = D_2_13 - D_3_14;
double W112 = D_4_13 - D_5_14;
double W212 = D_6_13 - D_7_14;
double W022 = D_2_17 - D_3_18;
double W122 = D_4_17 - D_5_18;
double W222 = D_6_17 - D_7_18;
double W003 = D_2_22 - D_3_23;
double W103 = D_4_22 - D_5_23;
double W203 = D_6_22 - D_7_23;
double W013 = D_2_14 - D_3_15;
double W113 = D_4_14 - D_5_15;
double W213 = D_6_14 - D_7_15;
double W023 = D_2_18 - D_3_19;
double W123 = D_4_18 - D_5_19;
double W223 = D_6_18 - D_7_19;
double W004 = D_2_23 - D_3_24;
double W104 = D_4_23 - D_5_24;
double W204 = D_6_23 - D_7_24;
double W014 = D_2_15;
double W114 = D_4_15;
double W214 = D_6_15;
double W024 = D_2_19;
double W124 = D_4_19;
double W224 = D_6_19;
double W005 = D_2_24;
double W105 = D_4_24;
double W205 = D_6_24;
Y[0][0] = W000 + W001*u3 + W002*u3_2 + W003*u3_3 + W004*u3_4 + W005*u3_5;
Y[1][0] = W100 + W101*u3 + W102*u3_2 + W103*u3_3 + W104*u3_4 + W105*u3_5;
Y[2][0] = W200 + W201*u3 + W202*u3_2 + W203*u3_3 + W204*u3_4 + W205*u3_5;
Y[0][1] = W011*u3 + W012*u3_2 + W013*u3_3 + W014*u3_4;
Y[1][1] = W111*u3 + W112*u3_2 + W113*u3_3 + W114*u3_4;
Y[2][1] = W211*u3 + W212*u3_2 + W213*u3_3 + W214*u3_4;
Y[0][2] = W020 + W021*u3 + W022*u3_2 + W023*u3_3 + W024*u3_4;
Y[1][2] = W120 + W121*u3 + W122*u3_2 + W123*u3_3 + W124*u3_4;
Y[2][2] = W220 + W221*u3 + W222*u3_2 + W223*u3_3 + W224*u3_4;
}
