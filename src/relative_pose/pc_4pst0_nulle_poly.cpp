#include <chrono>
#include <Eigen/Dense>
#include <opencv2/opencv.hpp>
#include "relative_pose/relative_pose.hpp"
#include "precomp.hpp"
#include "relative_pose_estimator.hpp"
#include "nullqr.h"

int const DEG = 10;
int const MAXSOLS = 10;
#include "sturm.h"

int const NVIEWS = 2;
int const SAMPLE = 4;
double const IMAGE_THRESH = 1e-5;

// void helper(double E[5][9], double C[10][20], double Z[11]);
void helper(double E[4][9], double C[9][19], double Z[11]);
// void finalize(double C[10][20], double w4, double Y[3][3]);
void finalize(double C[9][19], double w3, double Y[3][3]);

namespace pc_4pst0_nulle_poly
{

void helper(double E[4][9], double C[9][19], double Z[11])
{
double E00 = E[0][0];
double E01 = E[0][1];
double E02 = E[0][2];
double E03 = E[0][3];
double E04 = E[0][4];
double E05 = E[0][5];
double E06 = E[0][6];
double E07 = E[0][7];
double E08 = E[0][8];
double E10 = E[1][0];
double E11 = E[1][1];
double E12 = E[1][2];
double E13 = E[1][3];
double E14 = E[1][4];
double E15 = E[1][5];
double E16 = E[1][6];
double E17 = E[1][7];
double E18 = E[1][8];
double E20 = E[2][0];
double E21 = E[2][1];
double E22 = E[2][2];
double E23 = E[2][3];
double E24 = E[2][4];
double E25 = E[2][5];
double E26 = E[2][6];
double E27 = E[2][7];
double E28 = E[2][8];
double E30 = E[3][0];
double E31 = E[3][1];
double E32 = E[3][2];
double E33 = E[3][3];
double E34 = E[3][4];
double E35 = E[3][5];
double E36 = E[3][6];
double E37 = E[3][7];
double E38 = E[3][8];
double E00_2 = E00*E00;
double E01_2 = E01*E01;
double E02_2 = E02*E02;
double E03_2 = E03*E03;
double E04_2 = E04*E04;
double E05_2 = E05*E05;
double E06_2 = E06*E06;
double E07_2 = E07*E07;
double E08_2 = E08*E08;
double E10_2 = E10*E10;
double E11_2 = E11*E11;
double E12_2 = E12*E12;
double E13_2 = E13*E13;
double E14_2 = E14*E14;
double E15_2 = E15*E15;
double E16_2 = E16*E16;
double E17_2 = E17*E17;
double E18_2 = E18*E18;
double E20_2 = E20*E20;
double E21_2 = E21*E21;
double E22_2 = E22*E22;
double E23_2 = E23*E23;
double E24_2 = E24*E24;
double E25_2 = E25*E25;
double E26_2 = E26*E26;
double E27_2 = E27*E27;
double E28_2 = E28*E28;
double E30_2 = E30*E30;
double E31_2 = E31*E31;
double E32_2 = E32*E32;
double E33_2 = E33*E33;
double E34_2 = E34*E34;
double E35_2 = E35*E35;
double E36_2 = E36*E36;
double E37_2 = E37*E37;
double E38_2 = E38*E38;
double A_0_19 = E00*E04*E08 - E00*E05*E07 - E01*E03*E08 + E01*E05*E06 + E02*E03*E07 - E02*E04*E06;
double A_0_18 = E00*E04*E18 - E00*E05*E17 - E00*E07*E15 + E00*E08*E14 - E01*E03*E18 + E01*E05*E16 + E01*E06*E15 - E01*E08*E13 + E02*E03*E17 - E02*E04*E16 - E02*E06*E14 + E02*E07*E13 + E03*E07*E12 - E03*E08*E11 - E04*E06*E12 + E04*E08*E10 + E05*E06*E11 - E05*E07*E10;
double A_0_15 = E00*E04*E28 - E00*E05*E27 - E00*E07*E25 + E00*E08*E24 - E01*E03*E28 + E01*E05*E26 + E01*E06*E25 - E01*E08*E23 + E02*E03*E27 - E02*E04*E26 - E02*E06*E24 + E02*E07*E23 + E03*E07*E22 - E03*E08*E21 - E04*E06*E22 + E04*E08*E20 + E05*E06*E21 - E05*E07*E20;
double A_0_9 = E00*E04*E38 - E00*E05*E37 - E00*E07*E35 + E00*E08*E34 - E01*E03*E38 + E01*E05*E36 + E01*E06*E35 - E01*E08*E33 + E02*E03*E37 - E02*E04*E36 - E02*E06*E34 + E02*E07*E33 + E03*E07*E32 - E03*E08*E31 - E04*E06*E32 + E04*E08*E30 + E05*E06*E31 - E05*E07*E30;
double A_0_17 = E00*E14*E18 - E00*E15*E17 - E01*E13*E18 + E01*E15*E16 + E02*E13*E17 - E02*E14*E16 - E03*E11*E18 + E03*E12*E17 + E04*E10*E18 - E04*E12*E16 - E05*E10*E17 + E05*E11*E16 + E06*E11*E15 - E06*E12*E14 - E07*E10*E15 + E07*E12*E13 + E08*E10*E14 - E08*E11*E13;
double A_0_14 = E00*E14*E28 - E00*E15*E27 - E00*E17*E25 + E00*E18*E24 - E01*E13*E28 + E01*E15*E26 + E01*E16*E25 - E01*E18*E23 + E02*E13*E27 - E02*E14*E26 - E02*E16*E24 + E02*E17*E23 - E03*E11*E28 + E03*E12*E27 + E03*E17*E22 - E03*E18*E21 + E04*E10*E28 - E04*E12*E26 - E04*E16*E22 + E04*E18*E20 - E05*E10*E27 + E05*E11*E26 + E05*E16*E21 - E05*E17*E20 + E06*E11*E25 - E06*E12*E24 - E06*E14*E22 + E06*E15*E21 - E07*E10*E25 + E07*E12*E23 + E07*E13*E22 - E07*E15*E20 + E08*E10*E24 - E08*E11*E23 - E08*E13*E21 + E08*E14*E20;
double A_0_8 = E00*E14*E38 - E00*E15*E37 - E00*E17*E35 + E00*E18*E34 - E01*E13*E38 + E01*E15*E36 + E01*E16*E35 - E01*E18*E33 + E02*E13*E37 - E02*E14*E36 - E02*E16*E34 + E02*E17*E33 - E03*E11*E38 + E03*E12*E37 + E03*E17*E32 - E03*E18*E31 + E04*E10*E38 - E04*E12*E36 - E04*E16*E32 + E04*E18*E30 - E05*E10*E37 + E05*E11*E36 + E05*E16*E31 - E05*E17*E30 + E06*E11*E35 - E06*E12*E34 - E06*E14*E32 + E06*E15*E31 - E07*E10*E35 + E07*E12*E33 + E07*E13*E32 - E07*E15*E30 + E08*E10*E34 - E08*E11*E33 - E08*E13*E31 + E08*E14*E30;
double A_0_12 = E00*E24*E28 - E00*E25*E27 - E01*E23*E28 + E01*E25*E26 + E02*E23*E27 - E02*E24*E26 - E03*E21*E28 + E03*E22*E27 + E04*E20*E28 - E04*E22*E26 - E05*E20*E27 + E05*E21*E26 + E06*E21*E25 - E06*E22*E24 - E07*E20*E25 + E07*E22*E23 + E08*E20*E24 - E08*E21*E23;
double A_0_6 = E00*E24*E38 - E00*E25*E37 - E00*E27*E35 + E00*E28*E34 - E01*E23*E38 + E01*E25*E36 + E01*E26*E35 - E01*E28*E33 + E02*E23*E37 - E02*E24*E36 - E02*E26*E34 + E02*E27*E33 - E03*E21*E38 + E03*E22*E37 + E03*E27*E32 - E03*E28*E31 + E04*E20*E38 - E04*E22*E36 - E04*E26*E32 + E04*E28*E30 - E05*E20*E37 + E05*E21*E36 + E05*E26*E31 - E05*E27*E30 + E06*E21*E35 - E06*E22*E34 - E06*E24*E32 + E06*E25*E31 - E07*E20*E35 + E07*E22*E33 + E07*E23*E32 - E07*E25*E30 + E08*E20*E34 - E08*E21*E33 - E08*E23*E31 + E08*E24*E30;
double A_0_3 = E00*E34*E38 - E00*E35*E37 - E01*E33*E38 + E01*E35*E36 + E02*E33*E37 - E02*E34*E36 - E03*E31*E38 + E03*E32*E37 + E04*E30*E38 - E04*E32*E36 - E05*E30*E37 + E05*E31*E36 + E06*E31*E35 - E06*E32*E34 - E07*E30*E35 + E07*E32*E33 + E08*E30*E34 - E08*E31*E33;
double A_0_16 = E10*E14*E18 - E10*E15*E17 - E11*E13*E18 + E11*E15*E16 + E12*E13*E17 - E12*E14*E16;
double A_0_13 = E10*E14*E28 - E10*E15*E27 - E10*E17*E25 + E10*E18*E24 - E11*E13*E28 + E11*E15*E26 + E11*E16*E25 - E11*E18*E23 + E12*E13*E27 - E12*E14*E26 - E12*E16*E24 + E12*E17*E23 + E13*E17*E22 - E13*E18*E21 - E14*E16*E22 + E14*E18*E20 + E15*E16*E21 - E15*E17*E20;
double A_0_7 = E10*E14*E38 - E10*E15*E37 - E10*E17*E35 + E10*E18*E34 - E11*E13*E38 + E11*E15*E36 + E11*E16*E35 - E11*E18*E33 + E12*E13*E37 - E12*E14*E36 - E12*E16*E34 + E12*E17*E33 + E13*E17*E32 - E13*E18*E31 - E14*E16*E32 + E14*E18*E30 + E15*E16*E31 - E15*E17*E30;
double A_0_11 = E10*E24*E28 - E10*E25*E27 - E11*E23*E28 + E11*E25*E26 + E12*E23*E27 - E12*E24*E26 - E13*E21*E28 + E13*E22*E27 + E14*E20*E28 - E14*E22*E26 - E15*E20*E27 + E15*E21*E26 + E16*E21*E25 - E16*E22*E24 - E17*E20*E25 + E17*E22*E23 + E18*E20*E24 - E18*E21*E23;
double A_0_5 = E10*E24*E38 - E10*E25*E37 - E10*E27*E35 + E10*E28*E34 - E11*E23*E38 + E11*E25*E36 + E11*E26*E35 - E11*E28*E33 + E12*E23*E37 - E12*E24*E36 - E12*E26*E34 + E12*E27*E33 - E13*E21*E38 + E13*E22*E37 + E13*E27*E32 - E13*E28*E31 + E14*E20*E38 - E14*E22*E36 - E14*E26*E32 + E14*E28*E30 - E15*E20*E37 + E15*E21*E36 + E15*E26*E31 - E15*E27*E30 + E16*E21*E35 - E16*E22*E34 - E16*E24*E32 + E16*E25*E31 - E17*E20*E35 + E17*E22*E33 + E17*E23*E32 - E17*E25*E30 + E18*E20*E34 - E18*E21*E33 - E18*E23*E31 + E18*E24*E30;
double A_0_2 = E10*E34*E38 - E10*E35*E37 - E11*E33*E38 + E11*E35*E36 + E12*E33*E37 - E12*E34*E36 - E13*E31*E38 + E13*E32*E37 + E14*E30*E38 - E14*E32*E36 - E15*E30*E37 + E15*E31*E36 + E16*E31*E35 - E16*E32*E34 - E17*E30*E35 + E17*E32*E33 + E18*E30*E34 - E18*E31*E33;
double A_0_10 = E20*E24*E28 - E20*E25*E27 - E21*E23*E28 + E21*E25*E26 + E22*E23*E27 - E22*E24*E26;
double A_0_4 = E20*E24*E38 - E20*E25*E37 - E20*E27*E35 + E20*E28*E34 - E21*E23*E38 + E21*E25*E36 + E21*E26*E35 - E21*E28*E33 + E22*E23*E37 - E22*E24*E36 - E22*E26*E34 + E22*E27*E33 + E23*E27*E32 - E23*E28*E31 - E24*E26*E32 + E24*E28*E30 + E25*E26*E31 - E25*E27*E30;
double A_0_1 = E20*E34*E38 - E20*E35*E37 - E21*E33*E38 + E21*E35*E36 + E22*E33*E37 - E22*E34*E36 - E23*E31*E38 + E23*E32*E37 + E24*E30*E38 - E24*E32*E36 - E25*E30*E37 + E25*E31*E36 + E26*E31*E35 - E26*E32*E34 - E27*E30*E35 + E27*E32*E33 + E28*E30*E34 - E28*E31*E33;
double A_0_0 = E30*E34*E38 - E30*E35*E37 - E31*E33*E38 + E31*E35*E36 + E32*E33*E37 - E32*E34*E36;
double A_1_19 = E00*(2*E00_2 + 2*E01_2 + 2*E02_2) + E03*(2*E00*E03 + 2*E01*E04 + 2*E02*E05) + E06*(2*E00*E06 + 2*E01*E07 + 2*E02*E08) - E00*(E00_2 + E01_2 + E02_2 + E03_2 + E04_2 + E05_2 + E06_2 + E07_2 + E08_2);
double A_1_18 = E10*(2*E00_2 + 2*E01_2 + 2*E02_2) - E00*(2*E00*E10 + 2*E01*E11 + 2*E02*E12 + 2*E03*E13 + 2*E04*E14 + 2*E05*E15 + 2*E06*E16 + 2*E07*E17 + 2*E08*E18) + E03*(2*E00*E13 + 2*E03*E10 + 2*E01*E14 + 2*E04*E11 + 2*E02*E15 + 2*E05*E12) + E06*(2*E00*E16 + 2*E06*E10 + 2*E01*E17 + 2*E07*E11 + 2*E02*E18 + 2*E08*E12) + E13*(2*E00*E03 + 2*E01*E04 + 2*E02*E05) + E16*(2*E00*E06 + 2*E01*E07 + 2*E02*E08) + E00*(4*E00*E10 + 4*E01*E11 + 4*E02*E12) - E10*(E00_2 + E01_2 + E02_2 + E03_2 + E04_2 + E05_2 + E06_2 + E07_2 + E08_2);
double A_1_15 = E20*(2*E00_2 + 2*E01_2 + 2*E02_2) - E00*(2*E00*E20 + 2*E01*E21 + 2*E02*E22 + 2*E03*E23 + 2*E04*E24 + 2*E05*E25 + 2*E06*E26 + 2*E07*E27 + 2*E08*E28) + E03*(2*E00*E23 + 2*E03*E20 + 2*E01*E24 + 2*E04*E21 + 2*E02*E25 + 2*E05*E22) + E06*(2*E00*E26 + 2*E06*E20 + 2*E01*E27 + 2*E07*E21 + 2*E02*E28 + 2*E08*E22) + E23*(2*E00*E03 + 2*E01*E04 + 2*E02*E05) + E26*(2*E00*E06 + 2*E01*E07 + 2*E02*E08) + E00*(4*E00*E20 + 4*E01*E21 + 4*E02*E22) - E20*(E00_2 + E01_2 + E02_2 + E03_2 + E04_2 + E05_2 + E06_2 + E07_2 + E08_2);
double A_1_9 = E30*(2*E00_2 + 2*E01_2 + 2*E02_2) - E00*(2*E00*E30 + 2*E01*E31 + 2*E02*E32 + 2*E03*E33 + 2*E04*E34 + 2*E05*E35 + 2*E06*E36 + 2*E07*E37 + 2*E08*E38) + E03*(2*E00*E33 + 2*E03*E30 + 2*E01*E34 + 2*E04*E31 + 2*E02*E35 + 2*E05*E32) + E06*(2*E00*E36 + 2*E06*E30 + 2*E01*E37 + 2*E07*E31 + 2*E02*E38 + 2*E08*E32) + E33*(2*E00*E03 + 2*E01*E04 + 2*E02*E05) + E36*(2*E00*E06 + 2*E01*E07 + 2*E02*E08) + E00*(4*E00*E30 + 4*E01*E31 + 4*E02*E32) - E30*(E00_2 + E01_2 + E02_2 + E03_2 + E04_2 + E05_2 + E06_2 + E07_2 + E08_2);
double A_1_17 = E00*(2*E10_2 + 2*E11_2 + 2*E12_2) - E10*(2*E00*E10 + 2*E01*E11 + 2*E02*E12 + 2*E03*E13 + 2*E04*E14 + 2*E05*E15 + 2*E06*E16 + 2*E07*E17 + 2*E08*E18) + E13*(2*E00*E13 + 2*E03*E10 + 2*E01*E14 + 2*E04*E11 + 2*E02*E15 + 2*E05*E12) + E16*(2*E00*E16 + 2*E06*E10 + 2*E01*E17 + 2*E07*E11 + 2*E02*E18 + 2*E08*E12) + E10*(4*E00*E10 + 4*E01*E11 + 4*E02*E12) + E03*(2*E10*E13 + 2*E11*E14 + 2*E12*E15) + E06*(2*E10*E16 + 2*E11*E17 + 2*E12*E18) - E00*(E10_2 + E11_2 + E12_2 + E13_2 + E14_2 + E15_2 + E16_2 + E17_2 + E18_2);
double A_1_14 = E23*(2*E00*E13 + 2*E03*E10 + 2*E01*E14 + 2*E04*E11 + 2*E02*E15 + 2*E05*E12) - E10*(2*E00*E20 + 2*E01*E21 + 2*E02*E22 + 2*E03*E23 + 2*E04*E24 + 2*E05*E25 + 2*E06*E26 + 2*E07*E27 + 2*E08*E28) - E00*(2*E10*E20 + 2*E11*E21 + 2*E12*E22 + 2*E13*E23 + 2*E14*E24 + 2*E15*E25 + 2*E16*E26 + 2*E17*E27 + 2*E18*E28) - E20*(2*E00*E10 + 2*E01*E11 + 2*E02*E12 + 2*E03*E13 + 2*E04*E14 + 2*E05*E15 + 2*E06*E16 + 2*E07*E17 + 2*E08*E18) + E26*(2*E00*E16 + 2*E06*E10 + 2*E01*E17 + 2*E07*E11 + 2*E02*E18 + 2*E08*E12) + E13*(2*E00*E23 + 2*E03*E20 + 2*E01*E24 + 2*E04*E21 + 2*E02*E25 + 2*E05*E22) + E16*(2*E00*E26 + 2*E06*E20 + 2*E01*E27 + 2*E07*E21 + 2*E02*E28 + 2*E08*E22) + E03*(2*E10*E23 + 2*E13*E20 + 2*E11*E24 + 2*E14*E21 + 2*E12*E25 + 2*E15*E22) + E06*(2*E10*E26 + 2*E16*E20 + 2*E11*E27 + 2*E17*E21 + 2*E12*E28 + 2*E18*E22) + E20*(4*E00*E10 + 4*E01*E11 + 4*E02*E12) + E10*(4*E00*E20 + 4*E01*E21 + 4*E02*E22) + E00*(4*E10*E20 + 4*E11*E21 + 4*E12*E22);
double A_1_8 = E33*(2*E00*E13 + 2*E03*E10 + 2*E01*E14 + 2*E04*E11 + 2*E02*E15 + 2*E05*E12) - E10*(2*E00*E30 + 2*E01*E31 + 2*E02*E32 + 2*E03*E33 + 2*E04*E34 + 2*E05*E35 + 2*E06*E36 + 2*E07*E37 + 2*E08*E38) - E00*(2*E10*E30 + 2*E11*E31 + 2*E12*E32 + 2*E13*E33 + 2*E14*E34 + 2*E15*E35 + 2*E16*E36 + 2*E17*E37 + 2*E18*E38) - E30*(2*E00*E10 + 2*E01*E11 + 2*E02*E12 + 2*E03*E13 + 2*E04*E14 + 2*E05*E15 + 2*E06*E16 + 2*E07*E17 + 2*E08*E18) + E36*(2*E00*E16 + 2*E06*E10 + 2*E01*E17 + 2*E07*E11 + 2*E02*E18 + 2*E08*E12) + E13*(2*E00*E33 + 2*E03*E30 + 2*E01*E34 + 2*E04*E31 + 2*E02*E35 + 2*E05*E32) + E16*(2*E00*E36 + 2*E06*E30 + 2*E01*E37 + 2*E07*E31 + 2*E02*E38 + 2*E08*E32) + E03*(2*E10*E33 + 2*E13*E30 + 2*E11*E34 + 2*E14*E31 + 2*E12*E35 + 2*E15*E32) + E06*(2*E10*E36 + 2*E16*E30 + 2*E11*E37 + 2*E17*E31 + 2*E12*E38 + 2*E18*E32) + E30*(4*E00*E10 + 4*E01*E11 + 4*E02*E12) + E10*(4*E00*E30 + 4*E01*E31 + 4*E02*E32) + E00*(4*E10*E30 + 4*E11*E31 + 4*E12*E32);
double A_1_12 = E00*(2*E20_2 + 2*E21_2 + 2*E22_2) - E20*(2*E00*E20 + 2*E01*E21 + 2*E02*E22 + 2*E03*E23 + 2*E04*E24 + 2*E05*E25 + 2*E06*E26 + 2*E07*E27 + 2*E08*E28) + E23*(2*E00*E23 + 2*E03*E20 + 2*E01*E24 + 2*E04*E21 + 2*E02*E25 + 2*E05*E22) + E26*(2*E00*E26 + 2*E06*E20 + 2*E01*E27 + 2*E07*E21 + 2*E02*E28 + 2*E08*E22) + E20*(4*E00*E20 + 4*E01*E21 + 4*E02*E22) + E03*(2*E20*E23 + 2*E21*E24 + 2*E22*E25) + E06*(2*E20*E26 + 2*E21*E27 + 2*E22*E28) - E00*(E20_2 + E21_2 + E22_2 + E23_2 + E24_2 + E25_2 + E26_2 + E27_2 + E28_2);
double A_1_6 = E33*(2*E00*E23 + 2*E03*E20 + 2*E01*E24 + 2*E04*E21 + 2*E02*E25 + 2*E05*E22) - E20*(2*E00*E30 + 2*E01*E31 + 2*E02*E32 + 2*E03*E33 + 2*E04*E34 + 2*E05*E35 + 2*E06*E36 + 2*E07*E37 + 2*E08*E38) - E00*(2*E20*E30 + 2*E21*E31 + 2*E22*E32 + 2*E23*E33 + 2*E24*E34 + 2*E25*E35 + 2*E26*E36 + 2*E27*E37 + 2*E28*E38) - E30*(2*E00*E20 + 2*E01*E21 + 2*E02*E22 + 2*E03*E23 + 2*E04*E24 + 2*E05*E25 + 2*E06*E26 + 2*E07*E27 + 2*E08*E28) + E36*(2*E00*E26 + 2*E06*E20 + 2*E01*E27 + 2*E07*E21 + 2*E02*E28 + 2*E08*E22) + E23*(2*E00*E33 + 2*E03*E30 + 2*E01*E34 + 2*E04*E31 + 2*E02*E35 + 2*E05*E32) + E26*(2*E00*E36 + 2*E06*E30 + 2*E01*E37 + 2*E07*E31 + 2*E02*E38 + 2*E08*E32) + E03*(2*E20*E33 + 2*E23*E30 + 2*E21*E34 + 2*E24*E31 + 2*E22*E35 + 2*E25*E32) + E06*(2*E20*E36 + 2*E26*E30 + 2*E21*E37 + 2*E27*E31 + 2*E22*E38 + 2*E28*E32) + E30*(4*E00*E20 + 4*E01*E21 + 4*E02*E22) + E20*(4*E00*E30 + 4*E01*E31 + 4*E02*E32) + E00*(4*E20*E30 + 4*E21*E31 + 4*E22*E32);
double A_1_3 = E00*(2*E30_2 + 2*E31_2 + 2*E32_2) - E30*(2*E00*E30 + 2*E01*E31 + 2*E02*E32 + 2*E03*E33 + 2*E04*E34 + 2*E05*E35 + 2*E06*E36 + 2*E07*E37 + 2*E08*E38) + E33*(2*E00*E33 + 2*E03*E30 + 2*E01*E34 + 2*E04*E31 + 2*E02*E35 + 2*E05*E32) + E36*(2*E00*E36 + 2*E06*E30 + 2*E01*E37 + 2*E07*E31 + 2*E02*E38 + 2*E08*E32) + E30*(4*E00*E30 + 4*E01*E31 + 4*E02*E32) + E03*(2*E30*E33 + 2*E31*E34 + 2*E32*E35) + E06*(2*E30*E36 + 2*E31*E37 + 2*E32*E38) - E00*(E30_2 + E31_2 + E32_2 + E33_2 + E34_2 + E35_2 + E36_2 + E37_2 + E38_2);
double A_1_16 = E10*(2*E10_2 + 2*E11_2 + 2*E12_2) + E13*(2*E10*E13 + 2*E11*E14 + 2*E12*E15) + E16*(2*E10*E16 + 2*E11*E17 + 2*E12*E18) - E10*(E10_2 + E11_2 + E12_2 + E13_2 + E14_2 + E15_2 + E16_2 + E17_2 + E18_2);
double A_1_13 = E20*(2*E10_2 + 2*E11_2 + 2*E12_2) - E10*(2*E10*E20 + 2*E11*E21 + 2*E12*E22 + 2*E13*E23 + 2*E14*E24 + 2*E15*E25 + 2*E16*E26 + 2*E17*E27 + 2*E18*E28) + E13*(2*E10*E23 + 2*E13*E20 + 2*E11*E24 + 2*E14*E21 + 2*E12*E25 + 2*E15*E22) + E16*(2*E10*E26 + 2*E16*E20 + 2*E11*E27 + 2*E17*E21 + 2*E12*E28 + 2*E18*E22) + E23*(2*E10*E13 + 2*E11*E14 + 2*E12*E15) + E26*(2*E10*E16 + 2*E11*E17 + 2*E12*E18) + E10*(4*E10*E20 + 4*E11*E21 + 4*E12*E22) - E20*(E10_2 + E11_2 + E12_2 + E13_2 + E14_2 + E15_2 + E16_2 + E17_2 + E18_2);
double A_1_7 = E30*(2*E10_2 + 2*E11_2 + 2*E12_2) - E10*(2*E10*E30 + 2*E11*E31 + 2*E12*E32 + 2*E13*E33 + 2*E14*E34 + 2*E15*E35 + 2*E16*E36 + 2*E17*E37 + 2*E18*E38) + E13*(2*E10*E33 + 2*E13*E30 + 2*E11*E34 + 2*E14*E31 + 2*E12*E35 + 2*E15*E32) + E16*(2*E10*E36 + 2*E16*E30 + 2*E11*E37 + 2*E17*E31 + 2*E12*E38 + 2*E18*E32) + E33*(2*E10*E13 + 2*E11*E14 + 2*E12*E15) + E36*(2*E10*E16 + 2*E11*E17 + 2*E12*E18) + E10*(4*E10*E30 + 4*E11*E31 + 4*E12*E32) - E30*(E10_2 + E11_2 + E12_2 + E13_2 + E14_2 + E15_2 + E16_2 + E17_2 + E18_2);
double A_1_11 = E10*(2*E20_2 + 2*E21_2 + 2*E22_2) - E20*(2*E10*E20 + 2*E11*E21 + 2*E12*E22 + 2*E13*E23 + 2*E14*E24 + 2*E15*E25 + 2*E16*E26 + 2*E17*E27 + 2*E18*E28) + E23*(2*E10*E23 + 2*E13*E20 + 2*E11*E24 + 2*E14*E21 + 2*E12*E25 + 2*E15*E22) + E26*(2*E10*E26 + 2*E16*E20 + 2*E11*E27 + 2*E17*E21 + 2*E12*E28 + 2*E18*E22) + E20*(4*E10*E20 + 4*E11*E21 + 4*E12*E22) + E13*(2*E20*E23 + 2*E21*E24 + 2*E22*E25) + E16*(2*E20*E26 + 2*E21*E27 + 2*E22*E28) - E10*(E20_2 + E21_2 + E22_2 + E23_2 + E24_2 + E25_2 + E26_2 + E27_2 + E28_2);
double A_1_5 = E33*(2*E10*E23 + 2*E13*E20 + 2*E11*E24 + 2*E14*E21 + 2*E12*E25 + 2*E15*E22) - E20*(2*E10*E30 + 2*E11*E31 + 2*E12*E32 + 2*E13*E33 + 2*E14*E34 + 2*E15*E35 + 2*E16*E36 + 2*E17*E37 + 2*E18*E38) - E10*(2*E20*E30 + 2*E21*E31 + 2*E22*E32 + 2*E23*E33 + 2*E24*E34 + 2*E25*E35 + 2*E26*E36 + 2*E27*E37 + 2*E28*E38) - E30*(2*E10*E20 + 2*E11*E21 + 2*E12*E22 + 2*E13*E23 + 2*E14*E24 + 2*E15*E25 + 2*E16*E26 + 2*E17*E27 + 2*E18*E28) + E36*(2*E10*E26 + 2*E16*E20 + 2*E11*E27 + 2*E17*E21 + 2*E12*E28 + 2*E18*E22) + E23*(2*E10*E33 + 2*E13*E30 + 2*E11*E34 + 2*E14*E31 + 2*E12*E35 + 2*E15*E32) + E26*(2*E10*E36 + 2*E16*E30 + 2*E11*E37 + 2*E17*E31 + 2*E12*E38 + 2*E18*E32) + E13*(2*E20*E33 + 2*E23*E30 + 2*E21*E34 + 2*E24*E31 + 2*E22*E35 + 2*E25*E32) + E16*(2*E20*E36 + 2*E26*E30 + 2*E21*E37 + 2*E27*E31 + 2*E22*E38 + 2*E28*E32) + E30*(4*E10*E20 + 4*E11*E21 + 4*E12*E22) + E20*(4*E10*E30 + 4*E11*E31 + 4*E12*E32) + E10*(4*E20*E30 + 4*E21*E31 + 4*E22*E32);
double A_1_2 = E10*(2*E30_2 + 2*E31_2 + 2*E32_2) - E30*(2*E10*E30 + 2*E11*E31 + 2*E12*E32 + 2*E13*E33 + 2*E14*E34 + 2*E15*E35 + 2*E16*E36 + 2*E17*E37 + 2*E18*E38) + E33*(2*E10*E33 + 2*E13*E30 + 2*E11*E34 + 2*E14*E31 + 2*E12*E35 + 2*E15*E32) + E36*(2*E10*E36 + 2*E16*E30 + 2*E11*E37 + 2*E17*E31 + 2*E12*E38 + 2*E18*E32) + E30*(4*E10*E30 + 4*E11*E31 + 4*E12*E32) + E13*(2*E30*E33 + 2*E31*E34 + 2*E32*E35) + E16*(2*E30*E36 + 2*E31*E37 + 2*E32*E38) - E10*(E30_2 + E31_2 + E32_2 + E33_2 + E34_2 + E35_2 + E36_2 + E37_2 + E38_2);
double A_1_10 = E20*(2*E20_2 + 2*E21_2 + 2*E22_2) + E23*(2*E20*E23 + 2*E21*E24 + 2*E22*E25) + E26*(2*E20*E26 + 2*E21*E27 + 2*E22*E28) - E20*(E20_2 + E21_2 + E22_2 + E23_2 + E24_2 + E25_2 + E26_2 + E27_2 + E28_2);
double A_1_4 = E30*(2*E20_2 + 2*E21_2 + 2*E22_2) - E20*(2*E20*E30 + 2*E21*E31 + 2*E22*E32 + 2*E23*E33 + 2*E24*E34 + 2*E25*E35 + 2*E26*E36 + 2*E27*E37 + 2*E28*E38) + E23*(2*E20*E33 + 2*E23*E30 + 2*E21*E34 + 2*E24*E31 + 2*E22*E35 + 2*E25*E32) + E26*(2*E20*E36 + 2*E26*E30 + 2*E21*E37 + 2*E27*E31 + 2*E22*E38 + 2*E28*E32) + E33*(2*E20*E23 + 2*E21*E24 + 2*E22*E25) + E36*(2*E20*E26 + 2*E21*E27 + 2*E22*E28) + E20*(4*E20*E30 + 4*E21*E31 + 4*E22*E32) - E30*(E20_2 + E21_2 + E22_2 + E23_2 + E24_2 + E25_2 + E26_2 + E27_2 + E28_2);
double A_1_1 = E20*(2*E30_2 + 2*E31_2 + 2*E32_2) - E30*(2*E20*E30 + 2*E21*E31 + 2*E22*E32 + 2*E23*E33 + 2*E24*E34 + 2*E25*E35 + 2*E26*E36 + 2*E27*E37 + 2*E28*E38) + E33*(2*E20*E33 + 2*E23*E30 + 2*E21*E34 + 2*E24*E31 + 2*E22*E35 + 2*E25*E32) + E36*(2*E20*E36 + 2*E26*E30 + 2*E21*E37 + 2*E27*E31 + 2*E22*E38 + 2*E28*E32) + E30*(4*E20*E30 + 4*E21*E31 + 4*E22*E32) + E23*(2*E30*E33 + 2*E31*E34 + 2*E32*E35) + E26*(2*E30*E36 + 2*E31*E37 + 2*E32*E38) - E20*(E30_2 + E31_2 + E32_2 + E33_2 + E34_2 + E35_2 + E36_2 + E37_2 + E38_2);
double A_1_0 = E30*(2*E30_2 + 2*E31_2 + 2*E32_2) + E33*(2*E30*E33 + 2*E31*E34 + 2*E32*E35) + E36*(2*E30*E36 + 2*E31*E37 + 2*E32*E38) - E30*(E30_2 + E31_2 + E32_2 + E33_2 + E34_2 + E35_2 + E36_2 + E37_2 + E38_2);
double A_2_19 = E03*(2*E03_2 + 2*E04_2 + 2*E05_2) + E00*(2*E00*E03 + 2*E01*E04 + 2*E02*E05) + E06*(2*E03*E06 + 2*E04*E07 + 2*E05*E08) - E03*(E00_2 + E01_2 + E02_2 + E03_2 + E04_2 + E05_2 + E06_2 + E07_2 + E08_2);
double A_2_18 = E13*(2*E03_2 + 2*E04_2 + 2*E05_2) - E03*(2*E00*E10 + 2*E01*E11 + 2*E02*E12 + 2*E03*E13 + 2*E04*E14 + 2*E05*E15 + 2*E06*E16 + 2*E07*E17 + 2*E08*E18) + E00*(2*E00*E13 + 2*E03*E10 + 2*E01*E14 + 2*E04*E11 + 2*E02*E15 + 2*E05*E12) + E06*(2*E03*E16 + 2*E06*E13 + 2*E04*E17 + 2*E07*E14 + 2*E05*E18 + 2*E08*E15) + E10*(2*E00*E03 + 2*E01*E04 + 2*E02*E05) + E16*(2*E03*E06 + 2*E04*E07 + 2*E05*E08) + E03*(4*E03*E13 + 4*E04*E14 + 4*E05*E15) - E13*(E00_2 + E01_2 + E02_2 + E03_2 + E04_2 + E05_2 + E06_2 + E07_2 + E08_2);
double A_2_15 = E23*(2*E03_2 + 2*E04_2 + 2*E05_2) - E03*(2*E00*E20 + 2*E01*E21 + 2*E02*E22 + 2*E03*E23 + 2*E04*E24 + 2*E05*E25 + 2*E06*E26 + 2*E07*E27 + 2*E08*E28) + E00*(2*E00*E23 + 2*E03*E20 + 2*E01*E24 + 2*E04*E21 + 2*E02*E25 + 2*E05*E22) + E06*(2*E03*E26 + 2*E06*E23 + 2*E04*E27 + 2*E07*E24 + 2*E05*E28 + 2*E08*E25) + E20*(2*E00*E03 + 2*E01*E04 + 2*E02*E05) + E26*(2*E03*E06 + 2*E04*E07 + 2*E05*E08) + E03*(4*E03*E23 + 4*E04*E24 + 4*E05*E25) - E23*(E00_2 + E01_2 + E02_2 + E03_2 + E04_2 + E05_2 + E06_2 + E07_2 + E08_2);
double A_2_9 = E33*(2*E03_2 + 2*E04_2 + 2*E05_2) - E03*(2*E00*E30 + 2*E01*E31 + 2*E02*E32 + 2*E03*E33 + 2*E04*E34 + 2*E05*E35 + 2*E06*E36 + 2*E07*E37 + 2*E08*E38) + E00*(2*E00*E33 + 2*E03*E30 + 2*E01*E34 + 2*E04*E31 + 2*E02*E35 + 2*E05*E32) + E06*(2*E03*E36 + 2*E06*E33 + 2*E04*E37 + 2*E07*E34 + 2*E05*E38 + 2*E08*E35) + E30*(2*E00*E03 + 2*E01*E04 + 2*E02*E05) + E36*(2*E03*E06 + 2*E04*E07 + 2*E05*E08) + E03*(4*E03*E33 + 4*E04*E34 + 4*E05*E35) - E33*(E00_2 + E01_2 + E02_2 + E03_2 + E04_2 + E05_2 + E06_2 + E07_2 + E08_2);
double A_2_17 = E03*(2*E13_2 + 2*E14_2 + 2*E15_2) - E13*(2*E00*E10 + 2*E01*E11 + 2*E02*E12 + 2*E03*E13 + 2*E04*E14 + 2*E05*E15 + 2*E06*E16 + 2*E07*E17 + 2*E08*E18) + E10*(2*E00*E13 + 2*E03*E10 + 2*E01*E14 + 2*E04*E11 + 2*E02*E15 + 2*E05*E12) + E16*(2*E03*E16 + 2*E06*E13 + 2*E04*E17 + 2*E07*E14 + 2*E05*E18 + 2*E08*E15) + E13*(4*E03*E13 + 4*E04*E14 + 4*E05*E15) + E00*(2*E10*E13 + 2*E11*E14 + 2*E12*E15) + E06*(2*E13*E16 + 2*E14*E17 + 2*E15*E18) - E03*(E10_2 + E11_2 + E12_2 + E13_2 + E14_2 + E15_2 + E16_2 + E17_2 + E18_2);
double A_2_14 = E20*(2*E00*E13 + 2*E03*E10 + 2*E01*E14 + 2*E04*E11 + 2*E02*E15 + 2*E05*E12) - E13*(2*E00*E20 + 2*E01*E21 + 2*E02*E22 + 2*E03*E23 + 2*E04*E24 + 2*E05*E25 + 2*E06*E26 + 2*E07*E27 + 2*E08*E28) - E03*(2*E10*E20 + 2*E11*E21 + 2*E12*E22 + 2*E13*E23 + 2*E14*E24 + 2*E15*E25 + 2*E16*E26 + 2*E17*E27 + 2*E18*E28) - E23*(2*E00*E10 + 2*E01*E11 + 2*E02*E12 + 2*E03*E13 + 2*E04*E14 + 2*E05*E15 + 2*E06*E16 + 2*E07*E17 + 2*E08*E18) + E26*(2*E03*E16 + 2*E06*E13 + 2*E04*E17 + 2*E07*E14 + 2*E05*E18 + 2*E08*E15) + E10*(2*E00*E23 + 2*E03*E20 + 2*E01*E24 + 2*E04*E21 + 2*E02*E25 + 2*E05*E22) + E16*(2*E03*E26 + 2*E06*E23 + 2*E04*E27 + 2*E07*E24 + 2*E05*E28 + 2*E08*E25) + E00*(2*E10*E23 + 2*E13*E20 + 2*E11*E24 + 2*E14*E21 + 2*E12*E25 + 2*E15*E22) + E06*(2*E13*E26 + 2*E16*E23 + 2*E14*E27 + 2*E17*E24 + 2*E15*E28 + 2*E18*E25) + E23*(4*E03*E13 + 4*E04*E14 + 4*E05*E15) + E13*(4*E03*E23 + 4*E04*E24 + 4*E05*E25) + E03*(4*E13*E23 + 4*E14*E24 + 4*E15*E25);
double A_2_8 = E30*(2*E00*E13 + 2*E03*E10 + 2*E01*E14 + 2*E04*E11 + 2*E02*E15 + 2*E05*E12) - E13*(2*E00*E30 + 2*E01*E31 + 2*E02*E32 + 2*E03*E33 + 2*E04*E34 + 2*E05*E35 + 2*E06*E36 + 2*E07*E37 + 2*E08*E38) - E03*(2*E10*E30 + 2*E11*E31 + 2*E12*E32 + 2*E13*E33 + 2*E14*E34 + 2*E15*E35 + 2*E16*E36 + 2*E17*E37 + 2*E18*E38) - E33*(2*E00*E10 + 2*E01*E11 + 2*E02*E12 + 2*E03*E13 + 2*E04*E14 + 2*E05*E15 + 2*E06*E16 + 2*E07*E17 + 2*E08*E18) + E36*(2*E03*E16 + 2*E06*E13 + 2*E04*E17 + 2*E07*E14 + 2*E05*E18 + 2*E08*E15) + E10*(2*E00*E33 + 2*E03*E30 + 2*E01*E34 + 2*E04*E31 + 2*E02*E35 + 2*E05*E32) + E16*(2*E03*E36 + 2*E06*E33 + 2*E04*E37 + 2*E07*E34 + 2*E05*E38 + 2*E08*E35) + E00*(2*E10*E33 + 2*E13*E30 + 2*E11*E34 + 2*E14*E31 + 2*E12*E35 + 2*E15*E32) + E06*(2*E13*E36 + 2*E16*E33 + 2*E14*E37 + 2*E17*E34 + 2*E15*E38 + 2*E18*E35) + E33*(4*E03*E13 + 4*E04*E14 + 4*E05*E15) + E13*(4*E03*E33 + 4*E04*E34 + 4*E05*E35) + E03*(4*E13*E33 + 4*E14*E34 + 4*E15*E35);
double A_2_12 = E03*(2*E23_2 + 2*E24_2 + 2*E25_2) - E23*(2*E00*E20 + 2*E01*E21 + 2*E02*E22 + 2*E03*E23 + 2*E04*E24 + 2*E05*E25 + 2*E06*E26 + 2*E07*E27 + 2*E08*E28) + E20*(2*E00*E23 + 2*E03*E20 + 2*E01*E24 + 2*E04*E21 + 2*E02*E25 + 2*E05*E22) + E26*(2*E03*E26 + 2*E06*E23 + 2*E04*E27 + 2*E07*E24 + 2*E05*E28 + 2*E08*E25) + E23*(4*E03*E23 + 4*E04*E24 + 4*E05*E25) + E00*(2*E20*E23 + 2*E21*E24 + 2*E22*E25) + E06*(2*E23*E26 + 2*E24*E27 + 2*E25*E28) - E03*(E20_2 + E21_2 + E22_2 + E23_2 + E24_2 + E25_2 + E26_2 + E27_2 + E28_2);
double A_2_6 = E30*(2*E00*E23 + 2*E03*E20 + 2*E01*E24 + 2*E04*E21 + 2*E02*E25 + 2*E05*E22) - E23*(2*E00*E30 + 2*E01*E31 + 2*E02*E32 + 2*E03*E33 + 2*E04*E34 + 2*E05*E35 + 2*E06*E36 + 2*E07*E37 + 2*E08*E38) - E03*(2*E20*E30 + 2*E21*E31 + 2*E22*E32 + 2*E23*E33 + 2*E24*E34 + 2*E25*E35 + 2*E26*E36 + 2*E27*E37 + 2*E28*E38) - E33*(2*E00*E20 + 2*E01*E21 + 2*E02*E22 + 2*E03*E23 + 2*E04*E24 + 2*E05*E25 + 2*E06*E26 + 2*E07*E27 + 2*E08*E28) + E36*(2*E03*E26 + 2*E06*E23 + 2*E04*E27 + 2*E07*E24 + 2*E05*E28 + 2*E08*E25) + E20*(2*E00*E33 + 2*E03*E30 + 2*E01*E34 + 2*E04*E31 + 2*E02*E35 + 2*E05*E32) + E26*(2*E03*E36 + 2*E06*E33 + 2*E04*E37 + 2*E07*E34 + 2*E05*E38 + 2*E08*E35) + E00*(2*E20*E33 + 2*E23*E30 + 2*E21*E34 + 2*E24*E31 + 2*E22*E35 + 2*E25*E32) + E06*(2*E23*E36 + 2*E26*E33 + 2*E24*E37 + 2*E27*E34 + 2*E25*E38 + 2*E28*E35) + E33*(4*E03*E23 + 4*E04*E24 + 4*E05*E25) + E23*(4*E03*E33 + 4*E04*E34 + 4*E05*E35) + E03*(4*E23*E33 + 4*E24*E34 + 4*E25*E35);
double A_2_3 = E03*(2*E33_2 + 2*E34_2 + 2*E35_2) - E33*(2*E00*E30 + 2*E01*E31 + 2*E02*E32 + 2*E03*E33 + 2*E04*E34 + 2*E05*E35 + 2*E06*E36 + 2*E07*E37 + 2*E08*E38) + E30*(2*E00*E33 + 2*E03*E30 + 2*E01*E34 + 2*E04*E31 + 2*E02*E35 + 2*E05*E32) + E36*(2*E03*E36 + 2*E06*E33 + 2*E04*E37 + 2*E07*E34 + 2*E05*E38 + 2*E08*E35) + E33*(4*E03*E33 + 4*E04*E34 + 4*E05*E35) + E00*(2*E30*E33 + 2*E31*E34 + 2*E32*E35) + E06*(2*E33*E36 + 2*E34*E37 + 2*E35*E38) - E03*(E30_2 + E31_2 + E32_2 + E33_2 + E34_2 + E35_2 + E36_2 + E37_2 + E38_2);
double A_2_16 = E13*(2*E13_2 + 2*E14_2 + 2*E15_2) + E10*(2*E10*E13 + 2*E11*E14 + 2*E12*E15) + E16*(2*E13*E16 + 2*E14*E17 + 2*E15*E18) - E13*(E10_2 + E11_2 + E12_2 + E13_2 + E14_2 + E15_2 + E16_2 + E17_2 + E18_2);
double A_2_13 = E23*(2*E13_2 + 2*E14_2 + 2*E15_2) - E13*(2*E10*E20 + 2*E11*E21 + 2*E12*E22 + 2*E13*E23 + 2*E14*E24 + 2*E15*E25 + 2*E16*E26 + 2*E17*E27 + 2*E18*E28) + E10*(2*E10*E23 + 2*E13*E20 + 2*E11*E24 + 2*E14*E21 + 2*E12*E25 + 2*E15*E22) + E16*(2*E13*E26 + 2*E16*E23 + 2*E14*E27 + 2*E17*E24 + 2*E15*E28 + 2*E18*E25) + E20*(2*E10*E13 + 2*E11*E14 + 2*E12*E15) + E26*(2*E13*E16 + 2*E14*E17 + 2*E15*E18) + E13*(4*E13*E23 + 4*E14*E24 + 4*E15*E25) - E23*(E10_2 + E11_2 + E12_2 + E13_2 + E14_2 + E15_2 + E16_2 + E17_2 + E18_2);
double A_2_7 = E33*(2*E13_2 + 2*E14_2 + 2*E15_2) - E13*(2*E10*E30 + 2*E11*E31 + 2*E12*E32 + 2*E13*E33 + 2*E14*E34 + 2*E15*E35 + 2*E16*E36 + 2*E17*E37 + 2*E18*E38) + E10*(2*E10*E33 + 2*E13*E30 + 2*E11*E34 + 2*E14*E31 + 2*E12*E35 + 2*E15*E32) + E16*(2*E13*E36 + 2*E16*E33 + 2*E14*E37 + 2*E17*E34 + 2*E15*E38 + 2*E18*E35) + E30*(2*E10*E13 + 2*E11*E14 + 2*E12*E15) + E36*(2*E13*E16 + 2*E14*E17 + 2*E15*E18) + E13*(4*E13*E33 + 4*E14*E34 + 4*E15*E35) - E33*(E10_2 + E11_2 + E12_2 + E13_2 + E14_2 + E15_2 + E16_2 + E17_2 + E18_2);
double A_2_11 = E13*(2*E23_2 + 2*E24_2 + 2*E25_2) - E23*(2*E10*E20 + 2*E11*E21 + 2*E12*E22 + 2*E13*E23 + 2*E14*E24 + 2*E15*E25 + 2*E16*E26 + 2*E17*E27 + 2*E18*E28) + E20*(2*E10*E23 + 2*E13*E20 + 2*E11*E24 + 2*E14*E21 + 2*E12*E25 + 2*E15*E22) + E26*(2*E13*E26 + 2*E16*E23 + 2*E14*E27 + 2*E17*E24 + 2*E15*E28 + 2*E18*E25) + E23*(4*E13*E23 + 4*E14*E24 + 4*E15*E25) + E10*(2*E20*E23 + 2*E21*E24 + 2*E22*E25) + E16*(2*E23*E26 + 2*E24*E27 + 2*E25*E28) - E13*(E20_2 + E21_2 + E22_2 + E23_2 + E24_2 + E25_2 + E26_2 + E27_2 + E28_2);
double A_2_5 = E30*(2*E10*E23 + 2*E13*E20 + 2*E11*E24 + 2*E14*E21 + 2*E12*E25 + 2*E15*E22) - E23*(2*E10*E30 + 2*E11*E31 + 2*E12*E32 + 2*E13*E33 + 2*E14*E34 + 2*E15*E35 + 2*E16*E36 + 2*E17*E37 + 2*E18*E38) - E13*(2*E20*E30 + 2*E21*E31 + 2*E22*E32 + 2*E23*E33 + 2*E24*E34 + 2*E25*E35 + 2*E26*E36 + 2*E27*E37 + 2*E28*E38) - E33*(2*E10*E20 + 2*E11*E21 + 2*E12*E22 + 2*E13*E23 + 2*E14*E24 + 2*E15*E25 + 2*E16*E26 + 2*E17*E27 + 2*E18*E28) + E36*(2*E13*E26 + 2*E16*E23 + 2*E14*E27 + 2*E17*E24 + 2*E15*E28 + 2*E18*E25) + E20*(2*E10*E33 + 2*E13*E30 + 2*E11*E34 + 2*E14*E31 + 2*E12*E35 + 2*E15*E32) + E26*(2*E13*E36 + 2*E16*E33 + 2*E14*E37 + 2*E17*E34 + 2*E15*E38 + 2*E18*E35) + E10*(2*E20*E33 + 2*E23*E30 + 2*E21*E34 + 2*E24*E31 + 2*E22*E35 + 2*E25*E32) + E16*(2*E23*E36 + 2*E26*E33 + 2*E24*E37 + 2*E27*E34 + 2*E25*E38 + 2*E28*E35) + E33*(4*E13*E23 + 4*E14*E24 + 4*E15*E25) + E23*(4*E13*E33 + 4*E14*E34 + 4*E15*E35) + E13*(4*E23*E33 + 4*E24*E34 + 4*E25*E35);
double A_2_2 = E13*(2*E33_2 + 2*E34_2 + 2*E35_2) - E33*(2*E10*E30 + 2*E11*E31 + 2*E12*E32 + 2*E13*E33 + 2*E14*E34 + 2*E15*E35 + 2*E16*E36 + 2*E17*E37 + 2*E18*E38) + E30*(2*E10*E33 + 2*E13*E30 + 2*E11*E34 + 2*E14*E31 + 2*E12*E35 + 2*E15*E32) + E36*(2*E13*E36 + 2*E16*E33 + 2*E14*E37 + 2*E17*E34 + 2*E15*E38 + 2*E18*E35) + E33*(4*E13*E33 + 4*E14*E34 + 4*E15*E35) + E10*(2*E30*E33 + 2*E31*E34 + 2*E32*E35) + E16*(2*E33*E36 + 2*E34*E37 + 2*E35*E38) - E13*(E30_2 + E31_2 + E32_2 + E33_2 + E34_2 + E35_2 + E36_2 + E37_2 + E38_2);
double A_2_10 = E23*(2*E23_2 + 2*E24_2 + 2*E25_2) + E20*(2*E20*E23 + 2*E21*E24 + 2*E22*E25) + E26*(2*E23*E26 + 2*E24*E27 + 2*E25*E28) - E23*(E20_2 + E21_2 + E22_2 + E23_2 + E24_2 + E25_2 + E26_2 + E27_2 + E28_2);
double A_2_4 = E33*(2*E23_2 + 2*E24_2 + 2*E25_2) - E23*(2*E20*E30 + 2*E21*E31 + 2*E22*E32 + 2*E23*E33 + 2*E24*E34 + 2*E25*E35 + 2*E26*E36 + 2*E27*E37 + 2*E28*E38) + E20*(2*E20*E33 + 2*E23*E30 + 2*E21*E34 + 2*E24*E31 + 2*E22*E35 + 2*E25*E32) + E26*(2*E23*E36 + 2*E26*E33 + 2*E24*E37 + 2*E27*E34 + 2*E25*E38 + 2*E28*E35) + E30*(2*E20*E23 + 2*E21*E24 + 2*E22*E25) + E36*(2*E23*E26 + 2*E24*E27 + 2*E25*E28) + E23*(4*E23*E33 + 4*E24*E34 + 4*E25*E35) - E33*(E20_2 + E21_2 + E22_2 + E23_2 + E24_2 + E25_2 + E26_2 + E27_2 + E28_2);
double A_2_1 = E23*(2*E33_2 + 2*E34_2 + 2*E35_2) - E33*(2*E20*E30 + 2*E21*E31 + 2*E22*E32 + 2*E23*E33 + 2*E24*E34 + 2*E25*E35 + 2*E26*E36 + 2*E27*E37 + 2*E28*E38) + E30*(2*E20*E33 + 2*E23*E30 + 2*E21*E34 + 2*E24*E31 + 2*E22*E35 + 2*E25*E32) + E36*(2*E23*E36 + 2*E26*E33 + 2*E24*E37 + 2*E27*E34 + 2*E25*E38 + 2*E28*E35) + E33*(4*E23*E33 + 4*E24*E34 + 4*E25*E35) + E20*(2*E30*E33 + 2*E31*E34 + 2*E32*E35) + E26*(2*E33*E36 + 2*E34*E37 + 2*E35*E38) - E23*(E30_2 + E31_2 + E32_2 + E33_2 + E34_2 + E35_2 + E36_2 + E37_2 + E38_2);
double A_2_0 = E33*(2*E33_2 + 2*E34_2 + 2*E35_2) + E30*(2*E30*E33 + 2*E31*E34 + 2*E32*E35) + E36*(2*E33*E36 + 2*E34*E37 + 2*E35*E38) - E33*(E30_2 + E31_2 + E32_2 + E33_2 + E34_2 + E35_2 + E36_2 + E37_2 + E38_2);
double A_3_19 = E06*(2*E06_2 + 2*E07_2 + 2*E08_2) + E00*(2*E00*E06 + 2*E01*E07 + 2*E02*E08) + E03*(2*E03*E06 + 2*E04*E07 + 2*E05*E08) - E06*(E00_2 + E01_2 + E02_2 + E03_2 + E04_2 + E05_2 + E06_2 + E07_2 + E08_2);
double A_3_18 = E16*(2*E06_2 + 2*E07_2 + 2*E08_2) - E06*(2*E00*E10 + 2*E01*E11 + 2*E02*E12 + 2*E03*E13 + 2*E04*E14 + 2*E05*E15 + 2*E06*E16 + 2*E07*E17 + 2*E08*E18) + E00*(2*E00*E16 + 2*E06*E10 + 2*E01*E17 + 2*E07*E11 + 2*E02*E18 + 2*E08*E12) + E03*(2*E03*E16 + 2*E06*E13 + 2*E04*E17 + 2*E07*E14 + 2*E05*E18 + 2*E08*E15) + E10*(2*E00*E06 + 2*E01*E07 + 2*E02*E08) + E13*(2*E03*E06 + 2*E04*E07 + 2*E05*E08) + E06*(4*E06*E16 + 4*E07*E17 + 4*E08*E18) - E16*(E00_2 + E01_2 + E02_2 + E03_2 + E04_2 + E05_2 + E06_2 + E07_2 + E08_2);
double A_3_15 = E26*(2*E06_2 + 2*E07_2 + 2*E08_2) - E06*(2*E00*E20 + 2*E01*E21 + 2*E02*E22 + 2*E03*E23 + 2*E04*E24 + 2*E05*E25 + 2*E06*E26 + 2*E07*E27 + 2*E08*E28) + E00*(2*E00*E26 + 2*E06*E20 + 2*E01*E27 + 2*E07*E21 + 2*E02*E28 + 2*E08*E22) + E03*(2*E03*E26 + 2*E06*E23 + 2*E04*E27 + 2*E07*E24 + 2*E05*E28 + 2*E08*E25) + E20*(2*E00*E06 + 2*E01*E07 + 2*E02*E08) + E23*(2*E03*E06 + 2*E04*E07 + 2*E05*E08) + E06*(4*E06*E26 + 4*E07*E27 + 4*E08*E28) - E26*(E00_2 + E01_2 + E02_2 + E03_2 + E04_2 + E05_2 + E06_2 + E07_2 + E08_2);
double A_3_9 = E36*(2*E06_2 + 2*E07_2 + 2*E08_2) - E06*(2*E00*E30 + 2*E01*E31 + 2*E02*E32 + 2*E03*E33 + 2*E04*E34 + 2*E05*E35 + 2*E06*E36 + 2*E07*E37 + 2*E08*E38) + E00*(2*E00*E36 + 2*E06*E30 + 2*E01*E37 + 2*E07*E31 + 2*E02*E38 + 2*E08*E32) + E03*(2*E03*E36 + 2*E06*E33 + 2*E04*E37 + 2*E07*E34 + 2*E05*E38 + 2*E08*E35) + E30*(2*E00*E06 + 2*E01*E07 + 2*E02*E08) + E33*(2*E03*E06 + 2*E04*E07 + 2*E05*E08) + E06*(4*E06*E36 + 4*E07*E37 + 4*E08*E38) - E36*(E00_2 + E01_2 + E02_2 + E03_2 + E04_2 + E05_2 + E06_2 + E07_2 + E08_2);
double A_3_17 = E06*(2*E16_2 + 2*E17_2 + 2*E18_2) - E16*(2*E00*E10 + 2*E01*E11 + 2*E02*E12 + 2*E03*E13 + 2*E04*E14 + 2*E05*E15 + 2*E06*E16 + 2*E07*E17 + 2*E08*E18) + E10*(2*E00*E16 + 2*E06*E10 + 2*E01*E17 + 2*E07*E11 + 2*E02*E18 + 2*E08*E12) + E13*(2*E03*E16 + 2*E06*E13 + 2*E04*E17 + 2*E07*E14 + 2*E05*E18 + 2*E08*E15) + E16*(4*E06*E16 + 4*E07*E17 + 4*E08*E18) + E00*(2*E10*E16 + 2*E11*E17 + 2*E12*E18) + E03*(2*E13*E16 + 2*E14*E17 + 2*E15*E18) - E06*(E10_2 + E11_2 + E12_2 + E13_2 + E14_2 + E15_2 + E16_2 + E17_2 + E18_2);
double A_3_14 = E20*(2*E00*E16 + 2*E06*E10 + 2*E01*E17 + 2*E07*E11 + 2*E02*E18 + 2*E08*E12) - E16*(2*E00*E20 + 2*E01*E21 + 2*E02*E22 + 2*E03*E23 + 2*E04*E24 + 2*E05*E25 + 2*E06*E26 + 2*E07*E27 + 2*E08*E28) - E06*(2*E10*E20 + 2*E11*E21 + 2*E12*E22 + 2*E13*E23 + 2*E14*E24 + 2*E15*E25 + 2*E16*E26 + 2*E17*E27 + 2*E18*E28) - E26*(2*E00*E10 + 2*E01*E11 + 2*E02*E12 + 2*E03*E13 + 2*E04*E14 + 2*E05*E15 + 2*E06*E16 + 2*E07*E17 + 2*E08*E18) + E23*(2*E03*E16 + 2*E06*E13 + 2*E04*E17 + 2*E07*E14 + 2*E05*E18 + 2*E08*E15) + E10*(2*E00*E26 + 2*E06*E20 + 2*E01*E27 + 2*E07*E21 + 2*E02*E28 + 2*E08*E22) + E13*(2*E03*E26 + 2*E06*E23 + 2*E04*E27 + 2*E07*E24 + 2*E05*E28 + 2*E08*E25) + E00*(2*E10*E26 + 2*E16*E20 + 2*E11*E27 + 2*E17*E21 + 2*E12*E28 + 2*E18*E22) + E03*(2*E13*E26 + 2*E16*E23 + 2*E14*E27 + 2*E17*E24 + 2*E15*E28 + 2*E18*E25) + E26*(4*E06*E16 + 4*E07*E17 + 4*E08*E18) + E16*(4*E06*E26 + 4*E07*E27 + 4*E08*E28) + E06*(4*E16*E26 + 4*E17*E27 + 4*E18*E28);
double A_3_8 = E30*(2*E00*E16 + 2*E06*E10 + 2*E01*E17 + 2*E07*E11 + 2*E02*E18 + 2*E08*E12) - E16*(2*E00*E30 + 2*E01*E31 + 2*E02*E32 + 2*E03*E33 + 2*E04*E34 + 2*E05*E35 + 2*E06*E36 + 2*E07*E37 + 2*E08*E38) - E06*(2*E10*E30 + 2*E11*E31 + 2*E12*E32 + 2*E13*E33 + 2*E14*E34 + 2*E15*E35 + 2*E16*E36 + 2*E17*E37 + 2*E18*E38) - E36*(2*E00*E10 + 2*E01*E11 + 2*E02*E12 + 2*E03*E13 + 2*E04*E14 + 2*E05*E15 + 2*E06*E16 + 2*E07*E17 + 2*E08*E18) + E33*(2*E03*E16 + 2*E06*E13 + 2*E04*E17 + 2*E07*E14 + 2*E05*E18 + 2*E08*E15) + E10*(2*E00*E36 + 2*E06*E30 + 2*E01*E37 + 2*E07*E31 + 2*E02*E38 + 2*E08*E32) + E13*(2*E03*E36 + 2*E06*E33 + 2*E04*E37 + 2*E07*E34 + 2*E05*E38 + 2*E08*E35) + E00*(2*E10*E36 + 2*E16*E30 + 2*E11*E37 + 2*E17*E31 + 2*E12*E38 + 2*E18*E32) + E03*(2*E13*E36 + 2*E16*E33 + 2*E14*E37 + 2*E17*E34 + 2*E15*E38 + 2*E18*E35) + E36*(4*E06*E16 + 4*E07*E17 + 4*E08*E18) + E16*(4*E06*E36 + 4*E07*E37 + 4*E08*E38) + E06*(4*E16*E36 + 4*E17*E37 + 4*E18*E38);
double A_3_12 = E06*(2*E26_2 + 2*E27_2 + 2*E28_2) - E26*(2*E00*E20 + 2*E01*E21 + 2*E02*E22 + 2*E03*E23 + 2*E04*E24 + 2*E05*E25 + 2*E06*E26 + 2*E07*E27 + 2*E08*E28) + E20*(2*E00*E26 + 2*E06*E20 + 2*E01*E27 + 2*E07*E21 + 2*E02*E28 + 2*E08*E22) + E23*(2*E03*E26 + 2*E06*E23 + 2*E04*E27 + 2*E07*E24 + 2*E05*E28 + 2*E08*E25) + E26*(4*E06*E26 + 4*E07*E27 + 4*E08*E28) + E00*(2*E20*E26 + 2*E21*E27 + 2*E22*E28) + E03*(2*E23*E26 + 2*E24*E27 + 2*E25*E28) - E06*(E20_2 + E21_2 + E22_2 + E23_2 + E24_2 + E25_2 + E26_2 + E27_2 + E28_2);
double A_3_6 = E30*(2*E00*E26 + 2*E06*E20 + 2*E01*E27 + 2*E07*E21 + 2*E02*E28 + 2*E08*E22) - E26*(2*E00*E30 + 2*E01*E31 + 2*E02*E32 + 2*E03*E33 + 2*E04*E34 + 2*E05*E35 + 2*E06*E36 + 2*E07*E37 + 2*E08*E38) - E06*(2*E20*E30 + 2*E21*E31 + 2*E22*E32 + 2*E23*E33 + 2*E24*E34 + 2*E25*E35 + 2*E26*E36 + 2*E27*E37 + 2*E28*E38) - E36*(2*E00*E20 + 2*E01*E21 + 2*E02*E22 + 2*E03*E23 + 2*E04*E24 + 2*E05*E25 + 2*E06*E26 + 2*E07*E27 + 2*E08*E28) + E33*(2*E03*E26 + 2*E06*E23 + 2*E04*E27 + 2*E07*E24 + 2*E05*E28 + 2*E08*E25) + E20*(2*E00*E36 + 2*E06*E30 + 2*E01*E37 + 2*E07*E31 + 2*E02*E38 + 2*E08*E32) + E23*(2*E03*E36 + 2*E06*E33 + 2*E04*E37 + 2*E07*E34 + 2*E05*E38 + 2*E08*E35) + E00*(2*E20*E36 + 2*E26*E30 + 2*E21*E37 + 2*E27*E31 + 2*E22*E38 + 2*E28*E32) + E03*(2*E23*E36 + 2*E26*E33 + 2*E24*E37 + 2*E27*E34 + 2*E25*E38 + 2*E28*E35) + E36*(4*E06*E26 + 4*E07*E27 + 4*E08*E28) + E26*(4*E06*E36 + 4*E07*E37 + 4*E08*E38) + E06*(4*E26*E36 + 4*E27*E37 + 4*E28*E38);
double A_3_3 = E06*(2*E36_2 + 2*E37_2 + 2*E38_2) - E36*(2*E00*E30 + 2*E01*E31 + 2*E02*E32 + 2*E03*E33 + 2*E04*E34 + 2*E05*E35 + 2*E06*E36 + 2*E07*E37 + 2*E08*E38) + E30*(2*E00*E36 + 2*E06*E30 + 2*E01*E37 + 2*E07*E31 + 2*E02*E38 + 2*E08*E32) + E33*(2*E03*E36 + 2*E06*E33 + 2*E04*E37 + 2*E07*E34 + 2*E05*E38 + 2*E08*E35) + E36*(4*E06*E36 + 4*E07*E37 + 4*E08*E38) + E00*(2*E30*E36 + 2*E31*E37 + 2*E32*E38) + E03*(2*E33*E36 + 2*E34*E37 + 2*E35*E38) - E06*(E30_2 + E31_2 + E32_2 + E33_2 + E34_2 + E35_2 + E36_2 + E37_2 + E38_2);
double A_3_16 = E16*(2*E16_2 + 2*E17_2 + 2*E18_2) + E10*(2*E10*E16 + 2*E11*E17 + 2*E12*E18) + E13*(2*E13*E16 + 2*E14*E17 + 2*E15*E18) - E16*(E10_2 + E11_2 + E12_2 + E13_2 + E14_2 + E15_2 + E16_2 + E17_2 + E18_2);
double A_3_13 = E26*(2*E16_2 + 2*E17_2 + 2*E18_2) - E16*(2*E10*E20 + 2*E11*E21 + 2*E12*E22 + 2*E13*E23 + 2*E14*E24 + 2*E15*E25 + 2*E16*E26 + 2*E17*E27 + 2*E18*E28) + E10*(2*E10*E26 + 2*E16*E20 + 2*E11*E27 + 2*E17*E21 + 2*E12*E28 + 2*E18*E22) + E13*(2*E13*E26 + 2*E16*E23 + 2*E14*E27 + 2*E17*E24 + 2*E15*E28 + 2*E18*E25) + E20*(2*E10*E16 + 2*E11*E17 + 2*E12*E18) + E23*(2*E13*E16 + 2*E14*E17 + 2*E15*E18) + E16*(4*E16*E26 + 4*E17*E27 + 4*E18*E28) - E26*(E10_2 + E11_2 + E12_2 + E13_2 + E14_2 + E15_2 + E16_2 + E17_2 + E18_2);
double A_3_7 = E36*(2*E16_2 + 2*E17_2 + 2*E18_2) - E16*(2*E10*E30 + 2*E11*E31 + 2*E12*E32 + 2*E13*E33 + 2*E14*E34 + 2*E15*E35 + 2*E16*E36 + 2*E17*E37 + 2*E18*E38) + E10*(2*E10*E36 + 2*E16*E30 + 2*E11*E37 + 2*E17*E31 + 2*E12*E38 + 2*E18*E32) + E13*(2*E13*E36 + 2*E16*E33 + 2*E14*E37 + 2*E17*E34 + 2*E15*E38 + 2*E18*E35) + E30*(2*E10*E16 + 2*E11*E17 + 2*E12*E18) + E33*(2*E13*E16 + 2*E14*E17 + 2*E15*E18) + E16*(4*E16*E36 + 4*E17*E37 + 4*E18*E38) - E36*(E10_2 + E11_2 + E12_2 + E13_2 + E14_2 + E15_2 + E16_2 + E17_2 + E18_2);
double A_3_11 = E16*(2*E26_2 + 2*E27_2 + 2*E28_2) - E26*(2*E10*E20 + 2*E11*E21 + 2*E12*E22 + 2*E13*E23 + 2*E14*E24 + 2*E15*E25 + 2*E16*E26 + 2*E17*E27 + 2*E18*E28) + E20*(2*E10*E26 + 2*E16*E20 + 2*E11*E27 + 2*E17*E21 + 2*E12*E28 + 2*E18*E22) + E23*(2*E13*E26 + 2*E16*E23 + 2*E14*E27 + 2*E17*E24 + 2*E15*E28 + 2*E18*E25) + E26*(4*E16*E26 + 4*E17*E27 + 4*E18*E28) + E10*(2*E20*E26 + 2*E21*E27 + 2*E22*E28) + E13*(2*E23*E26 + 2*E24*E27 + 2*E25*E28) - E16*(E20_2 + E21_2 + E22_2 + E23_2 + E24_2 + E25_2 + E26_2 + E27_2 + E28_2);
double A_3_5 = E30*(2*E10*E26 + 2*E16*E20 + 2*E11*E27 + 2*E17*E21 + 2*E12*E28 + 2*E18*E22) - E26*(2*E10*E30 + 2*E11*E31 + 2*E12*E32 + 2*E13*E33 + 2*E14*E34 + 2*E15*E35 + 2*E16*E36 + 2*E17*E37 + 2*E18*E38) - E16*(2*E20*E30 + 2*E21*E31 + 2*E22*E32 + 2*E23*E33 + 2*E24*E34 + 2*E25*E35 + 2*E26*E36 + 2*E27*E37 + 2*E28*E38) - E36*(2*E10*E20 + 2*E11*E21 + 2*E12*E22 + 2*E13*E23 + 2*E14*E24 + 2*E15*E25 + 2*E16*E26 + 2*E17*E27 + 2*E18*E28) + E33*(2*E13*E26 + 2*E16*E23 + 2*E14*E27 + 2*E17*E24 + 2*E15*E28 + 2*E18*E25) + E20*(2*E10*E36 + 2*E16*E30 + 2*E11*E37 + 2*E17*E31 + 2*E12*E38 + 2*E18*E32) + E23*(2*E13*E36 + 2*E16*E33 + 2*E14*E37 + 2*E17*E34 + 2*E15*E38 + 2*E18*E35) + E10*(2*E20*E36 + 2*E26*E30 + 2*E21*E37 + 2*E27*E31 + 2*E22*E38 + 2*E28*E32) + E13*(2*E23*E36 + 2*E26*E33 + 2*E24*E37 + 2*E27*E34 + 2*E25*E38 + 2*E28*E35) + E36*(4*E16*E26 + 4*E17*E27 + 4*E18*E28) + E26*(4*E16*E36 + 4*E17*E37 + 4*E18*E38) + E16*(4*E26*E36 + 4*E27*E37 + 4*E28*E38);
double A_3_2 = E16*(2*E36_2 + 2*E37_2 + 2*E38_2) - E36*(2*E10*E30 + 2*E11*E31 + 2*E12*E32 + 2*E13*E33 + 2*E14*E34 + 2*E15*E35 + 2*E16*E36 + 2*E17*E37 + 2*E18*E38) + E30*(2*E10*E36 + 2*E16*E30 + 2*E11*E37 + 2*E17*E31 + 2*E12*E38 + 2*E18*E32) + E33*(2*E13*E36 + 2*E16*E33 + 2*E14*E37 + 2*E17*E34 + 2*E15*E38 + 2*E18*E35) + E36*(4*E16*E36 + 4*E17*E37 + 4*E18*E38) + E10*(2*E30*E36 + 2*E31*E37 + 2*E32*E38) + E13*(2*E33*E36 + 2*E34*E37 + 2*E35*E38) - E16*(E30_2 + E31_2 + E32_2 + E33_2 + E34_2 + E35_2 + E36_2 + E37_2 + E38_2);
double A_3_10 = E26*(2*E26_2 + 2*E27_2 + 2*E28_2) + E20*(2*E20*E26 + 2*E21*E27 + 2*E22*E28) + E23*(2*E23*E26 + 2*E24*E27 + 2*E25*E28) - E26*(E20_2 + E21_2 + E22_2 + E23_2 + E24_2 + E25_2 + E26_2 + E27_2 + E28_2);
double A_3_4 = E36*(2*E26_2 + 2*E27_2 + 2*E28_2) - E26*(2*E20*E30 + 2*E21*E31 + 2*E22*E32 + 2*E23*E33 + 2*E24*E34 + 2*E25*E35 + 2*E26*E36 + 2*E27*E37 + 2*E28*E38) + E20*(2*E20*E36 + 2*E26*E30 + 2*E21*E37 + 2*E27*E31 + 2*E22*E38 + 2*E28*E32) + E23*(2*E23*E36 + 2*E26*E33 + 2*E24*E37 + 2*E27*E34 + 2*E25*E38 + 2*E28*E35) + E30*(2*E20*E26 + 2*E21*E27 + 2*E22*E28) + E33*(2*E23*E26 + 2*E24*E27 + 2*E25*E28) + E26*(4*E26*E36 + 4*E27*E37 + 4*E28*E38) - E36*(E20_2 + E21_2 + E22_2 + E23_2 + E24_2 + E25_2 + E26_2 + E27_2 + E28_2);
double A_3_1 = E26*(2*E36_2 + 2*E37_2 + 2*E38_2) - E36*(2*E20*E30 + 2*E21*E31 + 2*E22*E32 + 2*E23*E33 + 2*E24*E34 + 2*E25*E35 + 2*E26*E36 + 2*E27*E37 + 2*E28*E38) + E30*(2*E20*E36 + 2*E26*E30 + 2*E21*E37 + 2*E27*E31 + 2*E22*E38 + 2*E28*E32) + E33*(2*E23*E36 + 2*E26*E33 + 2*E24*E37 + 2*E27*E34 + 2*E25*E38 + 2*E28*E35) + E36*(4*E26*E36 + 4*E27*E37 + 4*E28*E38) + E20*(2*E30*E36 + 2*E31*E37 + 2*E32*E38) + E23*(2*E33*E36 + 2*E34*E37 + 2*E35*E38) - E26*(E30_2 + E31_2 + E32_2 + E33_2 + E34_2 + E35_2 + E36_2 + E37_2 + E38_2);
double A_3_0 = E36*(2*E36_2 + 2*E37_2 + 2*E38_2) + E30*(2*E30*E36 + 2*E31*E37 + 2*E32*E38) + E33*(2*E33*E36 + 2*E34*E37 + 2*E35*E38) - E36*(E30_2 + E31_2 + E32_2 + E33_2 + E34_2 + E35_2 + E36_2 + E37_2 + E38_2);
double A_4_19 = E01*(2*E00_2 + 2*E01_2 + 2*E02_2) + E04*(2*E00*E03 + 2*E01*E04 + 2*E02*E05) + E07*(2*E00*E06 + 2*E01*E07 + 2*E02*E08) - E01*(E00_2 + E01_2 + E02_2 + E03_2 + E04_2 + E05_2 + E06_2 + E07_2 + E08_2);
double A_4_18 = E11*(2*E00_2 + 2*E01_2 + 2*E02_2) - E01*(2*E00*E10 + 2*E01*E11 + 2*E02*E12 + 2*E03*E13 + 2*E04*E14 + 2*E05*E15 + 2*E06*E16 + 2*E07*E17 + 2*E08*E18) + E04*(2*E00*E13 + 2*E03*E10 + 2*E01*E14 + 2*E04*E11 + 2*E02*E15 + 2*E05*E12) + E07*(2*E00*E16 + 2*E06*E10 + 2*E01*E17 + 2*E07*E11 + 2*E02*E18 + 2*E08*E12) + E14*(2*E00*E03 + 2*E01*E04 + 2*E02*E05) + E17*(2*E00*E06 + 2*E01*E07 + 2*E02*E08) + E01*(4*E00*E10 + 4*E01*E11 + 4*E02*E12) - E11*(E00_2 + E01_2 + E02_2 + E03_2 + E04_2 + E05_2 + E06_2 + E07_2 + E08_2);
double A_4_15 = E21*(2*E00_2 + 2*E01_2 + 2*E02_2) - E01*(2*E00*E20 + 2*E01*E21 + 2*E02*E22 + 2*E03*E23 + 2*E04*E24 + 2*E05*E25 + 2*E06*E26 + 2*E07*E27 + 2*E08*E28) + E04*(2*E00*E23 + 2*E03*E20 + 2*E01*E24 + 2*E04*E21 + 2*E02*E25 + 2*E05*E22) + E07*(2*E00*E26 + 2*E06*E20 + 2*E01*E27 + 2*E07*E21 + 2*E02*E28 + 2*E08*E22) + E24*(2*E00*E03 + 2*E01*E04 + 2*E02*E05) + E27*(2*E00*E06 + 2*E01*E07 + 2*E02*E08) + E01*(4*E00*E20 + 4*E01*E21 + 4*E02*E22) - E21*(E00_2 + E01_2 + E02_2 + E03_2 + E04_2 + E05_2 + E06_2 + E07_2 + E08_2);
double A_4_9 = E31*(2*E00_2 + 2*E01_2 + 2*E02_2) - E01*(2*E00*E30 + 2*E01*E31 + 2*E02*E32 + 2*E03*E33 + 2*E04*E34 + 2*E05*E35 + 2*E06*E36 + 2*E07*E37 + 2*E08*E38) + E04*(2*E00*E33 + 2*E03*E30 + 2*E01*E34 + 2*E04*E31 + 2*E02*E35 + 2*E05*E32) + E07*(2*E00*E36 + 2*E06*E30 + 2*E01*E37 + 2*E07*E31 + 2*E02*E38 + 2*E08*E32) + E34*(2*E00*E03 + 2*E01*E04 + 2*E02*E05) + E37*(2*E00*E06 + 2*E01*E07 + 2*E02*E08) + E01*(4*E00*E30 + 4*E01*E31 + 4*E02*E32) - E31*(E00_2 + E01_2 + E02_2 + E03_2 + E04_2 + E05_2 + E06_2 + E07_2 + E08_2);
double A_4_17 = E01*(2*E10_2 + 2*E11_2 + 2*E12_2) - E11*(2*E00*E10 + 2*E01*E11 + 2*E02*E12 + 2*E03*E13 + 2*E04*E14 + 2*E05*E15 + 2*E06*E16 + 2*E07*E17 + 2*E08*E18) + E14*(2*E00*E13 + 2*E03*E10 + 2*E01*E14 + 2*E04*E11 + 2*E02*E15 + 2*E05*E12) + E17*(2*E00*E16 + 2*E06*E10 + 2*E01*E17 + 2*E07*E11 + 2*E02*E18 + 2*E08*E12) + E11*(4*E00*E10 + 4*E01*E11 + 4*E02*E12) + E04*(2*E10*E13 + 2*E11*E14 + 2*E12*E15) + E07*(2*E10*E16 + 2*E11*E17 + 2*E12*E18) - E01*(E10_2 + E11_2 + E12_2 + E13_2 + E14_2 + E15_2 + E16_2 + E17_2 + E18_2);
double A_4_14 = E24*(2*E00*E13 + 2*E03*E10 + 2*E01*E14 + 2*E04*E11 + 2*E02*E15 + 2*E05*E12) - E11*(2*E00*E20 + 2*E01*E21 + 2*E02*E22 + 2*E03*E23 + 2*E04*E24 + 2*E05*E25 + 2*E06*E26 + 2*E07*E27 + 2*E08*E28) - E01*(2*E10*E20 + 2*E11*E21 + 2*E12*E22 + 2*E13*E23 + 2*E14*E24 + 2*E15*E25 + 2*E16*E26 + 2*E17*E27 + 2*E18*E28) - E21*(2*E00*E10 + 2*E01*E11 + 2*E02*E12 + 2*E03*E13 + 2*E04*E14 + 2*E05*E15 + 2*E06*E16 + 2*E07*E17 + 2*E08*E18) + E27*(2*E00*E16 + 2*E06*E10 + 2*E01*E17 + 2*E07*E11 + 2*E02*E18 + 2*E08*E12) + E14*(2*E00*E23 + 2*E03*E20 + 2*E01*E24 + 2*E04*E21 + 2*E02*E25 + 2*E05*E22) + E17*(2*E00*E26 + 2*E06*E20 + 2*E01*E27 + 2*E07*E21 + 2*E02*E28 + 2*E08*E22) + E04*(2*E10*E23 + 2*E13*E20 + 2*E11*E24 + 2*E14*E21 + 2*E12*E25 + 2*E15*E22) + E07*(2*E10*E26 + 2*E16*E20 + 2*E11*E27 + 2*E17*E21 + 2*E12*E28 + 2*E18*E22) + E21*(4*E00*E10 + 4*E01*E11 + 4*E02*E12) + E11*(4*E00*E20 + 4*E01*E21 + 4*E02*E22) + E01*(4*E10*E20 + 4*E11*E21 + 4*E12*E22);
double A_4_8 = E34*(2*E00*E13 + 2*E03*E10 + 2*E01*E14 + 2*E04*E11 + 2*E02*E15 + 2*E05*E12) - E11*(2*E00*E30 + 2*E01*E31 + 2*E02*E32 + 2*E03*E33 + 2*E04*E34 + 2*E05*E35 + 2*E06*E36 + 2*E07*E37 + 2*E08*E38) - E01*(2*E10*E30 + 2*E11*E31 + 2*E12*E32 + 2*E13*E33 + 2*E14*E34 + 2*E15*E35 + 2*E16*E36 + 2*E17*E37 + 2*E18*E38) - E31*(2*E00*E10 + 2*E01*E11 + 2*E02*E12 + 2*E03*E13 + 2*E04*E14 + 2*E05*E15 + 2*E06*E16 + 2*E07*E17 + 2*E08*E18) + E37*(2*E00*E16 + 2*E06*E10 + 2*E01*E17 + 2*E07*E11 + 2*E02*E18 + 2*E08*E12) + E14*(2*E00*E33 + 2*E03*E30 + 2*E01*E34 + 2*E04*E31 + 2*E02*E35 + 2*E05*E32) + E17*(2*E00*E36 + 2*E06*E30 + 2*E01*E37 + 2*E07*E31 + 2*E02*E38 + 2*E08*E32) + E04*(2*E10*E33 + 2*E13*E30 + 2*E11*E34 + 2*E14*E31 + 2*E12*E35 + 2*E15*E32) + E07*(2*E10*E36 + 2*E16*E30 + 2*E11*E37 + 2*E17*E31 + 2*E12*E38 + 2*E18*E32) + E31*(4*E00*E10 + 4*E01*E11 + 4*E02*E12) + E11*(4*E00*E30 + 4*E01*E31 + 4*E02*E32) + E01*(4*E10*E30 + 4*E11*E31 + 4*E12*E32);
double A_4_12 = E01*(2*E20_2 + 2*E21_2 + 2*E22_2) - E21*(2*E00*E20 + 2*E01*E21 + 2*E02*E22 + 2*E03*E23 + 2*E04*E24 + 2*E05*E25 + 2*E06*E26 + 2*E07*E27 + 2*E08*E28) + E24*(2*E00*E23 + 2*E03*E20 + 2*E01*E24 + 2*E04*E21 + 2*E02*E25 + 2*E05*E22) + E27*(2*E00*E26 + 2*E06*E20 + 2*E01*E27 + 2*E07*E21 + 2*E02*E28 + 2*E08*E22) + E21*(4*E00*E20 + 4*E01*E21 + 4*E02*E22) + E04*(2*E20*E23 + 2*E21*E24 + 2*E22*E25) + E07*(2*E20*E26 + 2*E21*E27 + 2*E22*E28) - E01*(E20_2 + E21_2 + E22_2 + E23_2 + E24_2 + E25_2 + E26_2 + E27_2 + E28_2);
double A_4_6 = E34*(2*E00*E23 + 2*E03*E20 + 2*E01*E24 + 2*E04*E21 + 2*E02*E25 + 2*E05*E22) - E21*(2*E00*E30 + 2*E01*E31 + 2*E02*E32 + 2*E03*E33 + 2*E04*E34 + 2*E05*E35 + 2*E06*E36 + 2*E07*E37 + 2*E08*E38) - E01*(2*E20*E30 + 2*E21*E31 + 2*E22*E32 + 2*E23*E33 + 2*E24*E34 + 2*E25*E35 + 2*E26*E36 + 2*E27*E37 + 2*E28*E38) - E31*(2*E00*E20 + 2*E01*E21 + 2*E02*E22 + 2*E03*E23 + 2*E04*E24 + 2*E05*E25 + 2*E06*E26 + 2*E07*E27 + 2*E08*E28) + E37*(2*E00*E26 + 2*E06*E20 + 2*E01*E27 + 2*E07*E21 + 2*E02*E28 + 2*E08*E22) + E24*(2*E00*E33 + 2*E03*E30 + 2*E01*E34 + 2*E04*E31 + 2*E02*E35 + 2*E05*E32) + E27*(2*E00*E36 + 2*E06*E30 + 2*E01*E37 + 2*E07*E31 + 2*E02*E38 + 2*E08*E32) + E04*(2*E20*E33 + 2*E23*E30 + 2*E21*E34 + 2*E24*E31 + 2*E22*E35 + 2*E25*E32) + E07*(2*E20*E36 + 2*E26*E30 + 2*E21*E37 + 2*E27*E31 + 2*E22*E38 + 2*E28*E32) + E31*(4*E00*E20 + 4*E01*E21 + 4*E02*E22) + E21*(4*E00*E30 + 4*E01*E31 + 4*E02*E32) + E01*(4*E20*E30 + 4*E21*E31 + 4*E22*E32);
double A_4_3 = E01*(2*E30_2 + 2*E31_2 + 2*E32_2) - E31*(2*E00*E30 + 2*E01*E31 + 2*E02*E32 + 2*E03*E33 + 2*E04*E34 + 2*E05*E35 + 2*E06*E36 + 2*E07*E37 + 2*E08*E38) + E34*(2*E00*E33 + 2*E03*E30 + 2*E01*E34 + 2*E04*E31 + 2*E02*E35 + 2*E05*E32) + E37*(2*E00*E36 + 2*E06*E30 + 2*E01*E37 + 2*E07*E31 + 2*E02*E38 + 2*E08*E32) + E31*(4*E00*E30 + 4*E01*E31 + 4*E02*E32) + E04*(2*E30*E33 + 2*E31*E34 + 2*E32*E35) + E07*(2*E30*E36 + 2*E31*E37 + 2*E32*E38) - E01*(E30_2 + E31_2 + E32_2 + E33_2 + E34_2 + E35_2 + E36_2 + E37_2 + E38_2);
double A_4_16 = E11*(2*E10_2 + 2*E11_2 + 2*E12_2) + E14*(2*E10*E13 + 2*E11*E14 + 2*E12*E15) + E17*(2*E10*E16 + 2*E11*E17 + 2*E12*E18) - E11*(E10_2 + E11_2 + E12_2 + E13_2 + E14_2 + E15_2 + E16_2 + E17_2 + E18_2);
double A_4_13 = E21*(2*E10_2 + 2*E11_2 + 2*E12_2) - E11*(2*E10*E20 + 2*E11*E21 + 2*E12*E22 + 2*E13*E23 + 2*E14*E24 + 2*E15*E25 + 2*E16*E26 + 2*E17*E27 + 2*E18*E28) + E14*(2*E10*E23 + 2*E13*E20 + 2*E11*E24 + 2*E14*E21 + 2*E12*E25 + 2*E15*E22) + E17*(2*E10*E26 + 2*E16*E20 + 2*E11*E27 + 2*E17*E21 + 2*E12*E28 + 2*E18*E22) + E24*(2*E10*E13 + 2*E11*E14 + 2*E12*E15) + E27*(2*E10*E16 + 2*E11*E17 + 2*E12*E18) + E11*(4*E10*E20 + 4*E11*E21 + 4*E12*E22) - E21*(E10_2 + E11_2 + E12_2 + E13_2 + E14_2 + E15_2 + E16_2 + E17_2 + E18_2);
double A_4_7 = E31*(2*E10_2 + 2*E11_2 + 2*E12_2) - E11*(2*E10*E30 + 2*E11*E31 + 2*E12*E32 + 2*E13*E33 + 2*E14*E34 + 2*E15*E35 + 2*E16*E36 + 2*E17*E37 + 2*E18*E38) + E14*(2*E10*E33 + 2*E13*E30 + 2*E11*E34 + 2*E14*E31 + 2*E12*E35 + 2*E15*E32) + E17*(2*E10*E36 + 2*E16*E30 + 2*E11*E37 + 2*E17*E31 + 2*E12*E38 + 2*E18*E32) + E34*(2*E10*E13 + 2*E11*E14 + 2*E12*E15) + E37*(2*E10*E16 + 2*E11*E17 + 2*E12*E18) + E11*(4*E10*E30 + 4*E11*E31 + 4*E12*E32) - E31*(E10_2 + E11_2 + E12_2 + E13_2 + E14_2 + E15_2 + E16_2 + E17_2 + E18_2);
double A_4_11 = E11*(2*E20_2 + 2*E21_2 + 2*E22_2) - E21*(2*E10*E20 + 2*E11*E21 + 2*E12*E22 + 2*E13*E23 + 2*E14*E24 + 2*E15*E25 + 2*E16*E26 + 2*E17*E27 + 2*E18*E28) + E24*(2*E10*E23 + 2*E13*E20 + 2*E11*E24 + 2*E14*E21 + 2*E12*E25 + 2*E15*E22) + E27*(2*E10*E26 + 2*E16*E20 + 2*E11*E27 + 2*E17*E21 + 2*E12*E28 + 2*E18*E22) + E21*(4*E10*E20 + 4*E11*E21 + 4*E12*E22) + E14*(2*E20*E23 + 2*E21*E24 + 2*E22*E25) + E17*(2*E20*E26 + 2*E21*E27 + 2*E22*E28) - E11*(E20_2 + E21_2 + E22_2 + E23_2 + E24_2 + E25_2 + E26_2 + E27_2 + E28_2);
double A_4_5 = E34*(2*E10*E23 + 2*E13*E20 + 2*E11*E24 + 2*E14*E21 + 2*E12*E25 + 2*E15*E22) - E21*(2*E10*E30 + 2*E11*E31 + 2*E12*E32 + 2*E13*E33 + 2*E14*E34 + 2*E15*E35 + 2*E16*E36 + 2*E17*E37 + 2*E18*E38) - E11*(2*E20*E30 + 2*E21*E31 + 2*E22*E32 + 2*E23*E33 + 2*E24*E34 + 2*E25*E35 + 2*E26*E36 + 2*E27*E37 + 2*E28*E38) - E31*(2*E10*E20 + 2*E11*E21 + 2*E12*E22 + 2*E13*E23 + 2*E14*E24 + 2*E15*E25 + 2*E16*E26 + 2*E17*E27 + 2*E18*E28) + E37*(2*E10*E26 + 2*E16*E20 + 2*E11*E27 + 2*E17*E21 + 2*E12*E28 + 2*E18*E22) + E24*(2*E10*E33 + 2*E13*E30 + 2*E11*E34 + 2*E14*E31 + 2*E12*E35 + 2*E15*E32) + E27*(2*E10*E36 + 2*E16*E30 + 2*E11*E37 + 2*E17*E31 + 2*E12*E38 + 2*E18*E32) + E14*(2*E20*E33 + 2*E23*E30 + 2*E21*E34 + 2*E24*E31 + 2*E22*E35 + 2*E25*E32) + E17*(2*E20*E36 + 2*E26*E30 + 2*E21*E37 + 2*E27*E31 + 2*E22*E38 + 2*E28*E32) + E31*(4*E10*E20 + 4*E11*E21 + 4*E12*E22) + E21*(4*E10*E30 + 4*E11*E31 + 4*E12*E32) + E11*(4*E20*E30 + 4*E21*E31 + 4*E22*E32);
double A_4_2 = E11*(2*E30_2 + 2*E31_2 + 2*E32_2) - E31*(2*E10*E30 + 2*E11*E31 + 2*E12*E32 + 2*E13*E33 + 2*E14*E34 + 2*E15*E35 + 2*E16*E36 + 2*E17*E37 + 2*E18*E38) + E34*(2*E10*E33 + 2*E13*E30 + 2*E11*E34 + 2*E14*E31 + 2*E12*E35 + 2*E15*E32) + E37*(2*E10*E36 + 2*E16*E30 + 2*E11*E37 + 2*E17*E31 + 2*E12*E38 + 2*E18*E32) + E31*(4*E10*E30 + 4*E11*E31 + 4*E12*E32) + E14*(2*E30*E33 + 2*E31*E34 + 2*E32*E35) + E17*(2*E30*E36 + 2*E31*E37 + 2*E32*E38) - E11*(E30_2 + E31_2 + E32_2 + E33_2 + E34_2 + E35_2 + E36_2 + E37_2 + E38_2);
double A_4_10 = E21*(2*E20_2 + 2*E21_2 + 2*E22_2) + E24*(2*E20*E23 + 2*E21*E24 + 2*E22*E25) + E27*(2*E20*E26 + 2*E21*E27 + 2*E22*E28) - E21*(E20_2 + E21_2 + E22_2 + E23_2 + E24_2 + E25_2 + E26_2 + E27_2 + E28_2);
double A_4_4 = E31*(2*E20_2 + 2*E21_2 + 2*E22_2) - E21*(2*E20*E30 + 2*E21*E31 + 2*E22*E32 + 2*E23*E33 + 2*E24*E34 + 2*E25*E35 + 2*E26*E36 + 2*E27*E37 + 2*E28*E38) + E24*(2*E20*E33 + 2*E23*E30 + 2*E21*E34 + 2*E24*E31 + 2*E22*E35 + 2*E25*E32) + E27*(2*E20*E36 + 2*E26*E30 + 2*E21*E37 + 2*E27*E31 + 2*E22*E38 + 2*E28*E32) + E34*(2*E20*E23 + 2*E21*E24 + 2*E22*E25) + E37*(2*E20*E26 + 2*E21*E27 + 2*E22*E28) + E21*(4*E20*E30 + 4*E21*E31 + 4*E22*E32) - E31*(E20_2 + E21_2 + E22_2 + E23_2 + E24_2 + E25_2 + E26_2 + E27_2 + E28_2);
double A_4_1 = E21*(2*E30_2 + 2*E31_2 + 2*E32_2) - E31*(2*E20*E30 + 2*E21*E31 + 2*E22*E32 + 2*E23*E33 + 2*E24*E34 + 2*E25*E35 + 2*E26*E36 + 2*E27*E37 + 2*E28*E38) + E34*(2*E20*E33 + 2*E23*E30 + 2*E21*E34 + 2*E24*E31 + 2*E22*E35 + 2*E25*E32) + E37*(2*E20*E36 + 2*E26*E30 + 2*E21*E37 + 2*E27*E31 + 2*E22*E38 + 2*E28*E32) + E31*(4*E20*E30 + 4*E21*E31 + 4*E22*E32) + E24*(2*E30*E33 + 2*E31*E34 + 2*E32*E35) + E27*(2*E30*E36 + 2*E31*E37 + 2*E32*E38) - E21*(E30_2 + E31_2 + E32_2 + E33_2 + E34_2 + E35_2 + E36_2 + E37_2 + E38_2);
double A_4_0 = E31*(2*E30_2 + 2*E31_2 + 2*E32_2) + E34*(2*E30*E33 + 2*E31*E34 + 2*E32*E35) + E37*(2*E30*E36 + 2*E31*E37 + 2*E32*E38) - E31*(E30_2 + E31_2 + E32_2 + E33_2 + E34_2 + E35_2 + E36_2 + E37_2 + E38_2);
double A_5_19 = E04*(2*E03_2 + 2*E04_2 + 2*E05_2) + E01*(2*E00*E03 + 2*E01*E04 + 2*E02*E05) + E07*(2*E03*E06 + 2*E04*E07 + 2*E05*E08) - E04*(E00_2 + E01_2 + E02_2 + E03_2 + E04_2 + E05_2 + E06_2 + E07_2 + E08_2);
double A_5_18 = E14*(2*E03_2 + 2*E04_2 + 2*E05_2) - E04*(2*E00*E10 + 2*E01*E11 + 2*E02*E12 + 2*E03*E13 + 2*E04*E14 + 2*E05*E15 + 2*E06*E16 + 2*E07*E17 + 2*E08*E18) + E01*(2*E00*E13 + 2*E03*E10 + 2*E01*E14 + 2*E04*E11 + 2*E02*E15 + 2*E05*E12) + E07*(2*E03*E16 + 2*E06*E13 + 2*E04*E17 + 2*E07*E14 + 2*E05*E18 + 2*E08*E15) + E11*(2*E00*E03 + 2*E01*E04 + 2*E02*E05) + E17*(2*E03*E06 + 2*E04*E07 + 2*E05*E08) + E04*(4*E03*E13 + 4*E04*E14 + 4*E05*E15) - E14*(E00_2 + E01_2 + E02_2 + E03_2 + E04_2 + E05_2 + E06_2 + E07_2 + E08_2);
double A_5_15 = E24*(2*E03_2 + 2*E04_2 + 2*E05_2) - E04*(2*E00*E20 + 2*E01*E21 + 2*E02*E22 + 2*E03*E23 + 2*E04*E24 + 2*E05*E25 + 2*E06*E26 + 2*E07*E27 + 2*E08*E28) + E01*(2*E00*E23 + 2*E03*E20 + 2*E01*E24 + 2*E04*E21 + 2*E02*E25 + 2*E05*E22) + E07*(2*E03*E26 + 2*E06*E23 + 2*E04*E27 + 2*E07*E24 + 2*E05*E28 + 2*E08*E25) + E21*(2*E00*E03 + 2*E01*E04 + 2*E02*E05) + E27*(2*E03*E06 + 2*E04*E07 + 2*E05*E08) + E04*(4*E03*E23 + 4*E04*E24 + 4*E05*E25) - E24*(E00_2 + E01_2 + E02_2 + E03_2 + E04_2 + E05_2 + E06_2 + E07_2 + E08_2);
double A_5_9 = E34*(2*E03_2 + 2*E04_2 + 2*E05_2) - E04*(2*E00*E30 + 2*E01*E31 + 2*E02*E32 + 2*E03*E33 + 2*E04*E34 + 2*E05*E35 + 2*E06*E36 + 2*E07*E37 + 2*E08*E38) + E01*(2*E00*E33 + 2*E03*E30 + 2*E01*E34 + 2*E04*E31 + 2*E02*E35 + 2*E05*E32) + E07*(2*E03*E36 + 2*E06*E33 + 2*E04*E37 + 2*E07*E34 + 2*E05*E38 + 2*E08*E35) + E31*(2*E00*E03 + 2*E01*E04 + 2*E02*E05) + E37*(2*E03*E06 + 2*E04*E07 + 2*E05*E08) + E04*(4*E03*E33 + 4*E04*E34 + 4*E05*E35) - E34*(E00_2 + E01_2 + E02_2 + E03_2 + E04_2 + E05_2 + E06_2 + E07_2 + E08_2);
double A_5_17 = E04*(2*E13_2 + 2*E14_2 + 2*E15_2) - E14*(2*E00*E10 + 2*E01*E11 + 2*E02*E12 + 2*E03*E13 + 2*E04*E14 + 2*E05*E15 + 2*E06*E16 + 2*E07*E17 + 2*E08*E18) + E11*(2*E00*E13 + 2*E03*E10 + 2*E01*E14 + 2*E04*E11 + 2*E02*E15 + 2*E05*E12) + E17*(2*E03*E16 + 2*E06*E13 + 2*E04*E17 + 2*E07*E14 + 2*E05*E18 + 2*E08*E15) + E14*(4*E03*E13 + 4*E04*E14 + 4*E05*E15) + E01*(2*E10*E13 + 2*E11*E14 + 2*E12*E15) + E07*(2*E13*E16 + 2*E14*E17 + 2*E15*E18) - E04*(E10_2 + E11_2 + E12_2 + E13_2 + E14_2 + E15_2 + E16_2 + E17_2 + E18_2);
double A_5_14 = E21*(2*E00*E13 + 2*E03*E10 + 2*E01*E14 + 2*E04*E11 + 2*E02*E15 + 2*E05*E12) - E14*(2*E00*E20 + 2*E01*E21 + 2*E02*E22 + 2*E03*E23 + 2*E04*E24 + 2*E05*E25 + 2*E06*E26 + 2*E07*E27 + 2*E08*E28) - E04*(2*E10*E20 + 2*E11*E21 + 2*E12*E22 + 2*E13*E23 + 2*E14*E24 + 2*E15*E25 + 2*E16*E26 + 2*E17*E27 + 2*E18*E28) - E24*(2*E00*E10 + 2*E01*E11 + 2*E02*E12 + 2*E03*E13 + 2*E04*E14 + 2*E05*E15 + 2*E06*E16 + 2*E07*E17 + 2*E08*E18) + E27*(2*E03*E16 + 2*E06*E13 + 2*E04*E17 + 2*E07*E14 + 2*E05*E18 + 2*E08*E15) + E11*(2*E00*E23 + 2*E03*E20 + 2*E01*E24 + 2*E04*E21 + 2*E02*E25 + 2*E05*E22) + E17*(2*E03*E26 + 2*E06*E23 + 2*E04*E27 + 2*E07*E24 + 2*E05*E28 + 2*E08*E25) + E01*(2*E10*E23 + 2*E13*E20 + 2*E11*E24 + 2*E14*E21 + 2*E12*E25 + 2*E15*E22) + E07*(2*E13*E26 + 2*E16*E23 + 2*E14*E27 + 2*E17*E24 + 2*E15*E28 + 2*E18*E25) + E24*(4*E03*E13 + 4*E04*E14 + 4*E05*E15) + E14*(4*E03*E23 + 4*E04*E24 + 4*E05*E25) + E04*(4*E13*E23 + 4*E14*E24 + 4*E15*E25);
double A_5_8 = E31*(2*E00*E13 + 2*E03*E10 + 2*E01*E14 + 2*E04*E11 + 2*E02*E15 + 2*E05*E12) - E14*(2*E00*E30 + 2*E01*E31 + 2*E02*E32 + 2*E03*E33 + 2*E04*E34 + 2*E05*E35 + 2*E06*E36 + 2*E07*E37 + 2*E08*E38) - E04*(2*E10*E30 + 2*E11*E31 + 2*E12*E32 + 2*E13*E33 + 2*E14*E34 + 2*E15*E35 + 2*E16*E36 + 2*E17*E37 + 2*E18*E38) - E34*(2*E00*E10 + 2*E01*E11 + 2*E02*E12 + 2*E03*E13 + 2*E04*E14 + 2*E05*E15 + 2*E06*E16 + 2*E07*E17 + 2*E08*E18) + E37*(2*E03*E16 + 2*E06*E13 + 2*E04*E17 + 2*E07*E14 + 2*E05*E18 + 2*E08*E15) + E11*(2*E00*E33 + 2*E03*E30 + 2*E01*E34 + 2*E04*E31 + 2*E02*E35 + 2*E05*E32) + E17*(2*E03*E36 + 2*E06*E33 + 2*E04*E37 + 2*E07*E34 + 2*E05*E38 + 2*E08*E35) + E01*(2*E10*E33 + 2*E13*E30 + 2*E11*E34 + 2*E14*E31 + 2*E12*E35 + 2*E15*E32) + E07*(2*E13*E36 + 2*E16*E33 + 2*E14*E37 + 2*E17*E34 + 2*E15*E38 + 2*E18*E35) + E34*(4*E03*E13 + 4*E04*E14 + 4*E05*E15) + E14*(4*E03*E33 + 4*E04*E34 + 4*E05*E35) + E04*(4*E13*E33 + 4*E14*E34 + 4*E15*E35);
double A_5_12 = E04*(2*E23_2 + 2*E24_2 + 2*E25_2) - E24*(2*E00*E20 + 2*E01*E21 + 2*E02*E22 + 2*E03*E23 + 2*E04*E24 + 2*E05*E25 + 2*E06*E26 + 2*E07*E27 + 2*E08*E28) + E21*(2*E00*E23 + 2*E03*E20 + 2*E01*E24 + 2*E04*E21 + 2*E02*E25 + 2*E05*E22) + E27*(2*E03*E26 + 2*E06*E23 + 2*E04*E27 + 2*E07*E24 + 2*E05*E28 + 2*E08*E25) + E24*(4*E03*E23 + 4*E04*E24 + 4*E05*E25) + E01*(2*E20*E23 + 2*E21*E24 + 2*E22*E25) + E07*(2*E23*E26 + 2*E24*E27 + 2*E25*E28) - E04*(E20_2 + E21_2 + E22_2 + E23_2 + E24_2 + E25_2 + E26_2 + E27_2 + E28_2);
double A_5_6 = E31*(2*E00*E23 + 2*E03*E20 + 2*E01*E24 + 2*E04*E21 + 2*E02*E25 + 2*E05*E22) - E24*(2*E00*E30 + 2*E01*E31 + 2*E02*E32 + 2*E03*E33 + 2*E04*E34 + 2*E05*E35 + 2*E06*E36 + 2*E07*E37 + 2*E08*E38) - E04*(2*E20*E30 + 2*E21*E31 + 2*E22*E32 + 2*E23*E33 + 2*E24*E34 + 2*E25*E35 + 2*E26*E36 + 2*E27*E37 + 2*E28*E38) - E34*(2*E00*E20 + 2*E01*E21 + 2*E02*E22 + 2*E03*E23 + 2*E04*E24 + 2*E05*E25 + 2*E06*E26 + 2*E07*E27 + 2*E08*E28) + E37*(2*E03*E26 + 2*E06*E23 + 2*E04*E27 + 2*E07*E24 + 2*E05*E28 + 2*E08*E25) + E21*(2*E00*E33 + 2*E03*E30 + 2*E01*E34 + 2*E04*E31 + 2*E02*E35 + 2*E05*E32) + E27*(2*E03*E36 + 2*E06*E33 + 2*E04*E37 + 2*E07*E34 + 2*E05*E38 + 2*E08*E35) + E01*(2*E20*E33 + 2*E23*E30 + 2*E21*E34 + 2*E24*E31 + 2*E22*E35 + 2*E25*E32) + E07*(2*E23*E36 + 2*E26*E33 + 2*E24*E37 + 2*E27*E34 + 2*E25*E38 + 2*E28*E35) + E34*(4*E03*E23 + 4*E04*E24 + 4*E05*E25) + E24*(4*E03*E33 + 4*E04*E34 + 4*E05*E35) + E04*(4*E23*E33 + 4*E24*E34 + 4*E25*E35);
double A_5_3 = E04*(2*E33_2 + 2*E34_2 + 2*E35_2) - E34*(2*E00*E30 + 2*E01*E31 + 2*E02*E32 + 2*E03*E33 + 2*E04*E34 + 2*E05*E35 + 2*E06*E36 + 2*E07*E37 + 2*E08*E38) + E31*(2*E00*E33 + 2*E03*E30 + 2*E01*E34 + 2*E04*E31 + 2*E02*E35 + 2*E05*E32) + E37*(2*E03*E36 + 2*E06*E33 + 2*E04*E37 + 2*E07*E34 + 2*E05*E38 + 2*E08*E35) + E34*(4*E03*E33 + 4*E04*E34 + 4*E05*E35) + E01*(2*E30*E33 + 2*E31*E34 + 2*E32*E35) + E07*(2*E33*E36 + 2*E34*E37 + 2*E35*E38) - E04*(E30_2 + E31_2 + E32_2 + E33_2 + E34_2 + E35_2 + E36_2 + E37_2 + E38_2);
double A_5_16 = E14*(2*E13_2 + 2*E14_2 + 2*E15_2) + E11*(2*E10*E13 + 2*E11*E14 + 2*E12*E15) + E17*(2*E13*E16 + 2*E14*E17 + 2*E15*E18) - E14*(E10_2 + E11_2 + E12_2 + E13_2 + E14_2 + E15_2 + E16_2 + E17_2 + E18_2);
double A_5_13 = E24*(2*E13_2 + 2*E14_2 + 2*E15_2) - E14*(2*E10*E20 + 2*E11*E21 + 2*E12*E22 + 2*E13*E23 + 2*E14*E24 + 2*E15*E25 + 2*E16*E26 + 2*E17*E27 + 2*E18*E28) + E11*(2*E10*E23 + 2*E13*E20 + 2*E11*E24 + 2*E14*E21 + 2*E12*E25 + 2*E15*E22) + E17*(2*E13*E26 + 2*E16*E23 + 2*E14*E27 + 2*E17*E24 + 2*E15*E28 + 2*E18*E25) + E21*(2*E10*E13 + 2*E11*E14 + 2*E12*E15) + E27*(2*E13*E16 + 2*E14*E17 + 2*E15*E18) + E14*(4*E13*E23 + 4*E14*E24 + 4*E15*E25) - E24*(E10_2 + E11_2 + E12_2 + E13_2 + E14_2 + E15_2 + E16_2 + E17_2 + E18_2);
double A_5_7 = E34*(2*E13_2 + 2*E14_2 + 2*E15_2) - E14*(2*E10*E30 + 2*E11*E31 + 2*E12*E32 + 2*E13*E33 + 2*E14*E34 + 2*E15*E35 + 2*E16*E36 + 2*E17*E37 + 2*E18*E38) + E11*(2*E10*E33 + 2*E13*E30 + 2*E11*E34 + 2*E14*E31 + 2*E12*E35 + 2*E15*E32) + E17*(2*E13*E36 + 2*E16*E33 + 2*E14*E37 + 2*E17*E34 + 2*E15*E38 + 2*E18*E35) + E31*(2*E10*E13 + 2*E11*E14 + 2*E12*E15) + E37*(2*E13*E16 + 2*E14*E17 + 2*E15*E18) + E14*(4*E13*E33 + 4*E14*E34 + 4*E15*E35) - E34*(E10_2 + E11_2 + E12_2 + E13_2 + E14_2 + E15_2 + E16_2 + E17_2 + E18_2);
double A_5_11 = E14*(2*E23_2 + 2*E24_2 + 2*E25_2) - E24*(2*E10*E20 + 2*E11*E21 + 2*E12*E22 + 2*E13*E23 + 2*E14*E24 + 2*E15*E25 + 2*E16*E26 + 2*E17*E27 + 2*E18*E28) + E21*(2*E10*E23 + 2*E13*E20 + 2*E11*E24 + 2*E14*E21 + 2*E12*E25 + 2*E15*E22) + E27*(2*E13*E26 + 2*E16*E23 + 2*E14*E27 + 2*E17*E24 + 2*E15*E28 + 2*E18*E25) + E24*(4*E13*E23 + 4*E14*E24 + 4*E15*E25) + E11*(2*E20*E23 + 2*E21*E24 + 2*E22*E25) + E17*(2*E23*E26 + 2*E24*E27 + 2*E25*E28) - E14*(E20_2 + E21_2 + E22_2 + E23_2 + E24_2 + E25_2 + E26_2 + E27_2 + E28_2);
double A_5_5 = E31*(2*E10*E23 + 2*E13*E20 + 2*E11*E24 + 2*E14*E21 + 2*E12*E25 + 2*E15*E22) - E24*(2*E10*E30 + 2*E11*E31 + 2*E12*E32 + 2*E13*E33 + 2*E14*E34 + 2*E15*E35 + 2*E16*E36 + 2*E17*E37 + 2*E18*E38) - E14*(2*E20*E30 + 2*E21*E31 + 2*E22*E32 + 2*E23*E33 + 2*E24*E34 + 2*E25*E35 + 2*E26*E36 + 2*E27*E37 + 2*E28*E38) - E34*(2*E10*E20 + 2*E11*E21 + 2*E12*E22 + 2*E13*E23 + 2*E14*E24 + 2*E15*E25 + 2*E16*E26 + 2*E17*E27 + 2*E18*E28) + E37*(2*E13*E26 + 2*E16*E23 + 2*E14*E27 + 2*E17*E24 + 2*E15*E28 + 2*E18*E25) + E21*(2*E10*E33 + 2*E13*E30 + 2*E11*E34 + 2*E14*E31 + 2*E12*E35 + 2*E15*E32) + E27*(2*E13*E36 + 2*E16*E33 + 2*E14*E37 + 2*E17*E34 + 2*E15*E38 + 2*E18*E35) + E11*(2*E20*E33 + 2*E23*E30 + 2*E21*E34 + 2*E24*E31 + 2*E22*E35 + 2*E25*E32) + E17*(2*E23*E36 + 2*E26*E33 + 2*E24*E37 + 2*E27*E34 + 2*E25*E38 + 2*E28*E35) + E34*(4*E13*E23 + 4*E14*E24 + 4*E15*E25) + E24*(4*E13*E33 + 4*E14*E34 + 4*E15*E35) + E14*(4*E23*E33 + 4*E24*E34 + 4*E25*E35);
double A_5_2 = E14*(2*E33_2 + 2*E34_2 + 2*E35_2) - E34*(2*E10*E30 + 2*E11*E31 + 2*E12*E32 + 2*E13*E33 + 2*E14*E34 + 2*E15*E35 + 2*E16*E36 + 2*E17*E37 + 2*E18*E38) + E31*(2*E10*E33 + 2*E13*E30 + 2*E11*E34 + 2*E14*E31 + 2*E12*E35 + 2*E15*E32) + E37*(2*E13*E36 + 2*E16*E33 + 2*E14*E37 + 2*E17*E34 + 2*E15*E38 + 2*E18*E35) + E34*(4*E13*E33 + 4*E14*E34 + 4*E15*E35) + E11*(2*E30*E33 + 2*E31*E34 + 2*E32*E35) + E17*(2*E33*E36 + 2*E34*E37 + 2*E35*E38) - E14*(E30_2 + E31_2 + E32_2 + E33_2 + E34_2 + E35_2 + E36_2 + E37_2 + E38_2);
double A_5_10 = E24*(2*E23_2 + 2*E24_2 + 2*E25_2) + E21*(2*E20*E23 + 2*E21*E24 + 2*E22*E25) + E27*(2*E23*E26 + 2*E24*E27 + 2*E25*E28) - E24*(E20_2 + E21_2 + E22_2 + E23_2 + E24_2 + E25_2 + E26_2 + E27_2 + E28_2);
double A_5_4 = E34*(2*E23_2 + 2*E24_2 + 2*E25_2) - E24*(2*E20*E30 + 2*E21*E31 + 2*E22*E32 + 2*E23*E33 + 2*E24*E34 + 2*E25*E35 + 2*E26*E36 + 2*E27*E37 + 2*E28*E38) + E21*(2*E20*E33 + 2*E23*E30 + 2*E21*E34 + 2*E24*E31 + 2*E22*E35 + 2*E25*E32) + E27*(2*E23*E36 + 2*E26*E33 + 2*E24*E37 + 2*E27*E34 + 2*E25*E38 + 2*E28*E35) + E31*(2*E20*E23 + 2*E21*E24 + 2*E22*E25) + E37*(2*E23*E26 + 2*E24*E27 + 2*E25*E28) + E24*(4*E23*E33 + 4*E24*E34 + 4*E25*E35) - E34*(E20_2 + E21_2 + E22_2 + E23_2 + E24_2 + E25_2 + E26_2 + E27_2 + E28_2);
double A_5_1 = E24*(2*E33_2 + 2*E34_2 + 2*E35_2) - E34*(2*E20*E30 + 2*E21*E31 + 2*E22*E32 + 2*E23*E33 + 2*E24*E34 + 2*E25*E35 + 2*E26*E36 + 2*E27*E37 + 2*E28*E38) + E31*(2*E20*E33 + 2*E23*E30 + 2*E21*E34 + 2*E24*E31 + 2*E22*E35 + 2*E25*E32) + E37*(2*E23*E36 + 2*E26*E33 + 2*E24*E37 + 2*E27*E34 + 2*E25*E38 + 2*E28*E35) + E34*(4*E23*E33 + 4*E24*E34 + 4*E25*E35) + E21*(2*E30*E33 + 2*E31*E34 + 2*E32*E35) + E27*(2*E33*E36 + 2*E34*E37 + 2*E35*E38) - E24*(E30_2 + E31_2 + E32_2 + E33_2 + E34_2 + E35_2 + E36_2 + E37_2 + E38_2);
double A_5_0 = E34*(2*E33_2 + 2*E34_2 + 2*E35_2) + E31*(2*E30*E33 + 2*E31*E34 + 2*E32*E35) + E37*(2*E33*E36 + 2*E34*E37 + 2*E35*E38) - E34*(E30_2 + E31_2 + E32_2 + E33_2 + E34_2 + E35_2 + E36_2 + E37_2 + E38_2);
double A_6_19 = E07*(2*E06_2 + 2*E07_2 + 2*E08_2) + E01*(2*E00*E06 + 2*E01*E07 + 2*E02*E08) + E04*(2*E03*E06 + 2*E04*E07 + 2*E05*E08) - E07*(E00_2 + E01_2 + E02_2 + E03_2 + E04_2 + E05_2 + E06_2 + E07_2 + E08_2);
double A_6_18 = E17*(2*E06_2 + 2*E07_2 + 2*E08_2) - E07*(2*E00*E10 + 2*E01*E11 + 2*E02*E12 + 2*E03*E13 + 2*E04*E14 + 2*E05*E15 + 2*E06*E16 + 2*E07*E17 + 2*E08*E18) + E01*(2*E00*E16 + 2*E06*E10 + 2*E01*E17 + 2*E07*E11 + 2*E02*E18 + 2*E08*E12) + E04*(2*E03*E16 + 2*E06*E13 + 2*E04*E17 + 2*E07*E14 + 2*E05*E18 + 2*E08*E15) + E11*(2*E00*E06 + 2*E01*E07 + 2*E02*E08) + E14*(2*E03*E06 + 2*E04*E07 + 2*E05*E08) + E07*(4*E06*E16 + 4*E07*E17 + 4*E08*E18) - E17*(E00_2 + E01_2 + E02_2 + E03_2 + E04_2 + E05_2 + E06_2 + E07_2 + E08_2);
double A_6_15 = E27*(2*E06_2 + 2*E07_2 + 2*E08_2) - E07*(2*E00*E20 + 2*E01*E21 + 2*E02*E22 + 2*E03*E23 + 2*E04*E24 + 2*E05*E25 + 2*E06*E26 + 2*E07*E27 + 2*E08*E28) + E01*(2*E00*E26 + 2*E06*E20 + 2*E01*E27 + 2*E07*E21 + 2*E02*E28 + 2*E08*E22) + E04*(2*E03*E26 + 2*E06*E23 + 2*E04*E27 + 2*E07*E24 + 2*E05*E28 + 2*E08*E25) + E21*(2*E00*E06 + 2*E01*E07 + 2*E02*E08) + E24*(2*E03*E06 + 2*E04*E07 + 2*E05*E08) + E07*(4*E06*E26 + 4*E07*E27 + 4*E08*E28) - E27*(E00_2 + E01_2 + E02_2 + E03_2 + E04_2 + E05_2 + E06_2 + E07_2 + E08_2);
double A_6_9 = E37*(2*E06_2 + 2*E07_2 + 2*E08_2) - E07*(2*E00*E30 + 2*E01*E31 + 2*E02*E32 + 2*E03*E33 + 2*E04*E34 + 2*E05*E35 + 2*E06*E36 + 2*E07*E37 + 2*E08*E38) + E01*(2*E00*E36 + 2*E06*E30 + 2*E01*E37 + 2*E07*E31 + 2*E02*E38 + 2*E08*E32) + E04*(2*E03*E36 + 2*E06*E33 + 2*E04*E37 + 2*E07*E34 + 2*E05*E38 + 2*E08*E35) + E31*(2*E00*E06 + 2*E01*E07 + 2*E02*E08) + E34*(2*E03*E06 + 2*E04*E07 + 2*E05*E08) + E07*(4*E06*E36 + 4*E07*E37 + 4*E08*E38) - E37*(E00_2 + E01_2 + E02_2 + E03_2 + E04_2 + E05_2 + E06_2 + E07_2 + E08_2);
double A_6_17 = E07*(2*E16_2 + 2*E17_2 + 2*E18_2) - E17*(2*E00*E10 + 2*E01*E11 + 2*E02*E12 + 2*E03*E13 + 2*E04*E14 + 2*E05*E15 + 2*E06*E16 + 2*E07*E17 + 2*E08*E18) + E11*(2*E00*E16 + 2*E06*E10 + 2*E01*E17 + 2*E07*E11 + 2*E02*E18 + 2*E08*E12) + E14*(2*E03*E16 + 2*E06*E13 + 2*E04*E17 + 2*E07*E14 + 2*E05*E18 + 2*E08*E15) + E17*(4*E06*E16 + 4*E07*E17 + 4*E08*E18) + E01*(2*E10*E16 + 2*E11*E17 + 2*E12*E18) + E04*(2*E13*E16 + 2*E14*E17 + 2*E15*E18) - E07*(E10_2 + E11_2 + E12_2 + E13_2 + E14_2 + E15_2 + E16_2 + E17_2 + E18_2);
double A_6_14 = E21*(2*E00*E16 + 2*E06*E10 + 2*E01*E17 + 2*E07*E11 + 2*E02*E18 + 2*E08*E12) - E17*(2*E00*E20 + 2*E01*E21 + 2*E02*E22 + 2*E03*E23 + 2*E04*E24 + 2*E05*E25 + 2*E06*E26 + 2*E07*E27 + 2*E08*E28) - E07*(2*E10*E20 + 2*E11*E21 + 2*E12*E22 + 2*E13*E23 + 2*E14*E24 + 2*E15*E25 + 2*E16*E26 + 2*E17*E27 + 2*E18*E28) - E27*(2*E00*E10 + 2*E01*E11 + 2*E02*E12 + 2*E03*E13 + 2*E04*E14 + 2*E05*E15 + 2*E06*E16 + 2*E07*E17 + 2*E08*E18) + E24*(2*E03*E16 + 2*E06*E13 + 2*E04*E17 + 2*E07*E14 + 2*E05*E18 + 2*E08*E15) + E11*(2*E00*E26 + 2*E06*E20 + 2*E01*E27 + 2*E07*E21 + 2*E02*E28 + 2*E08*E22) + E14*(2*E03*E26 + 2*E06*E23 + 2*E04*E27 + 2*E07*E24 + 2*E05*E28 + 2*E08*E25) + E01*(2*E10*E26 + 2*E16*E20 + 2*E11*E27 + 2*E17*E21 + 2*E12*E28 + 2*E18*E22) + E04*(2*E13*E26 + 2*E16*E23 + 2*E14*E27 + 2*E17*E24 + 2*E15*E28 + 2*E18*E25) + E27*(4*E06*E16 + 4*E07*E17 + 4*E08*E18) + E17*(4*E06*E26 + 4*E07*E27 + 4*E08*E28) + E07*(4*E16*E26 + 4*E17*E27 + 4*E18*E28);
double A_6_8 = E31*(2*E00*E16 + 2*E06*E10 + 2*E01*E17 + 2*E07*E11 + 2*E02*E18 + 2*E08*E12) - E17*(2*E00*E30 + 2*E01*E31 + 2*E02*E32 + 2*E03*E33 + 2*E04*E34 + 2*E05*E35 + 2*E06*E36 + 2*E07*E37 + 2*E08*E38) - E07*(2*E10*E30 + 2*E11*E31 + 2*E12*E32 + 2*E13*E33 + 2*E14*E34 + 2*E15*E35 + 2*E16*E36 + 2*E17*E37 + 2*E18*E38) - E37*(2*E00*E10 + 2*E01*E11 + 2*E02*E12 + 2*E03*E13 + 2*E04*E14 + 2*E05*E15 + 2*E06*E16 + 2*E07*E17 + 2*E08*E18) + E34*(2*E03*E16 + 2*E06*E13 + 2*E04*E17 + 2*E07*E14 + 2*E05*E18 + 2*E08*E15) + E11*(2*E00*E36 + 2*E06*E30 + 2*E01*E37 + 2*E07*E31 + 2*E02*E38 + 2*E08*E32) + E14*(2*E03*E36 + 2*E06*E33 + 2*E04*E37 + 2*E07*E34 + 2*E05*E38 + 2*E08*E35) + E01*(2*E10*E36 + 2*E16*E30 + 2*E11*E37 + 2*E17*E31 + 2*E12*E38 + 2*E18*E32) + E04*(2*E13*E36 + 2*E16*E33 + 2*E14*E37 + 2*E17*E34 + 2*E15*E38 + 2*E18*E35) + E37*(4*E06*E16 + 4*E07*E17 + 4*E08*E18) + E17*(4*E06*E36 + 4*E07*E37 + 4*E08*E38) + E07*(4*E16*E36 + 4*E17*E37 + 4*E18*E38);
double A_6_12 = E07*(2*E26_2 + 2*E27_2 + 2*E28_2) - E27*(2*E00*E20 + 2*E01*E21 + 2*E02*E22 + 2*E03*E23 + 2*E04*E24 + 2*E05*E25 + 2*E06*E26 + 2*E07*E27 + 2*E08*E28) + E21*(2*E00*E26 + 2*E06*E20 + 2*E01*E27 + 2*E07*E21 + 2*E02*E28 + 2*E08*E22) + E24*(2*E03*E26 + 2*E06*E23 + 2*E04*E27 + 2*E07*E24 + 2*E05*E28 + 2*E08*E25) + E27*(4*E06*E26 + 4*E07*E27 + 4*E08*E28) + E01*(2*E20*E26 + 2*E21*E27 + 2*E22*E28) + E04*(2*E23*E26 + 2*E24*E27 + 2*E25*E28) - E07*(E20_2 + E21_2 + E22_2 + E23_2 + E24_2 + E25_2 + E26_2 + E27_2 + E28_2);
double A_6_6 = E31*(2*E00*E26 + 2*E06*E20 + 2*E01*E27 + 2*E07*E21 + 2*E02*E28 + 2*E08*E22) - E27*(2*E00*E30 + 2*E01*E31 + 2*E02*E32 + 2*E03*E33 + 2*E04*E34 + 2*E05*E35 + 2*E06*E36 + 2*E07*E37 + 2*E08*E38) - E07*(2*E20*E30 + 2*E21*E31 + 2*E22*E32 + 2*E23*E33 + 2*E24*E34 + 2*E25*E35 + 2*E26*E36 + 2*E27*E37 + 2*E28*E38) - E37*(2*E00*E20 + 2*E01*E21 + 2*E02*E22 + 2*E03*E23 + 2*E04*E24 + 2*E05*E25 + 2*E06*E26 + 2*E07*E27 + 2*E08*E28) + E34*(2*E03*E26 + 2*E06*E23 + 2*E04*E27 + 2*E07*E24 + 2*E05*E28 + 2*E08*E25) + E21*(2*E00*E36 + 2*E06*E30 + 2*E01*E37 + 2*E07*E31 + 2*E02*E38 + 2*E08*E32) + E24*(2*E03*E36 + 2*E06*E33 + 2*E04*E37 + 2*E07*E34 + 2*E05*E38 + 2*E08*E35) + E01*(2*E20*E36 + 2*E26*E30 + 2*E21*E37 + 2*E27*E31 + 2*E22*E38 + 2*E28*E32) + E04*(2*E23*E36 + 2*E26*E33 + 2*E24*E37 + 2*E27*E34 + 2*E25*E38 + 2*E28*E35) + E37*(4*E06*E26 + 4*E07*E27 + 4*E08*E28) + E27*(4*E06*E36 + 4*E07*E37 + 4*E08*E38) + E07*(4*E26*E36 + 4*E27*E37 + 4*E28*E38);
double A_6_3 = E07*(2*E36_2 + 2*E37_2 + 2*E38_2) - E37*(2*E00*E30 + 2*E01*E31 + 2*E02*E32 + 2*E03*E33 + 2*E04*E34 + 2*E05*E35 + 2*E06*E36 + 2*E07*E37 + 2*E08*E38) + E31*(2*E00*E36 + 2*E06*E30 + 2*E01*E37 + 2*E07*E31 + 2*E02*E38 + 2*E08*E32) + E34*(2*E03*E36 + 2*E06*E33 + 2*E04*E37 + 2*E07*E34 + 2*E05*E38 + 2*E08*E35) + E37*(4*E06*E36 + 4*E07*E37 + 4*E08*E38) + E01*(2*E30*E36 + 2*E31*E37 + 2*E32*E38) + E04*(2*E33*E36 + 2*E34*E37 + 2*E35*E38) - E07*(E30_2 + E31_2 + E32_2 + E33_2 + E34_2 + E35_2 + E36_2 + E37_2 + E38_2);
double A_6_16 = E17*(2*E16_2 + 2*E17_2 + 2*E18_2) + E11*(2*E10*E16 + 2*E11*E17 + 2*E12*E18) + E14*(2*E13*E16 + 2*E14*E17 + 2*E15*E18) - E17*(E10_2 + E11_2 + E12_2 + E13_2 + E14_2 + E15_2 + E16_2 + E17_2 + E18_2);
double A_6_13 = E27*(2*E16_2 + 2*E17_2 + 2*E18_2) - E17*(2*E10*E20 + 2*E11*E21 + 2*E12*E22 + 2*E13*E23 + 2*E14*E24 + 2*E15*E25 + 2*E16*E26 + 2*E17*E27 + 2*E18*E28) + E11*(2*E10*E26 + 2*E16*E20 + 2*E11*E27 + 2*E17*E21 + 2*E12*E28 + 2*E18*E22) + E14*(2*E13*E26 + 2*E16*E23 + 2*E14*E27 + 2*E17*E24 + 2*E15*E28 + 2*E18*E25) + E21*(2*E10*E16 + 2*E11*E17 + 2*E12*E18) + E24*(2*E13*E16 + 2*E14*E17 + 2*E15*E18) + E17*(4*E16*E26 + 4*E17*E27 + 4*E18*E28) - E27*(E10_2 + E11_2 + E12_2 + E13_2 + E14_2 + E15_2 + E16_2 + E17_2 + E18_2);
double A_6_7 = E37*(2*E16_2 + 2*E17_2 + 2*E18_2) - E17*(2*E10*E30 + 2*E11*E31 + 2*E12*E32 + 2*E13*E33 + 2*E14*E34 + 2*E15*E35 + 2*E16*E36 + 2*E17*E37 + 2*E18*E38) + E11*(2*E10*E36 + 2*E16*E30 + 2*E11*E37 + 2*E17*E31 + 2*E12*E38 + 2*E18*E32) + E14*(2*E13*E36 + 2*E16*E33 + 2*E14*E37 + 2*E17*E34 + 2*E15*E38 + 2*E18*E35) + E31*(2*E10*E16 + 2*E11*E17 + 2*E12*E18) + E34*(2*E13*E16 + 2*E14*E17 + 2*E15*E18) + E17*(4*E16*E36 + 4*E17*E37 + 4*E18*E38) - E37*(E10_2 + E11_2 + E12_2 + E13_2 + E14_2 + E15_2 + E16_2 + E17_2 + E18_2);
double A_6_11 = E17*(2*E26_2 + 2*E27_2 + 2*E28_2) - E27*(2*E10*E20 + 2*E11*E21 + 2*E12*E22 + 2*E13*E23 + 2*E14*E24 + 2*E15*E25 + 2*E16*E26 + 2*E17*E27 + 2*E18*E28) + E21*(2*E10*E26 + 2*E16*E20 + 2*E11*E27 + 2*E17*E21 + 2*E12*E28 + 2*E18*E22) + E24*(2*E13*E26 + 2*E16*E23 + 2*E14*E27 + 2*E17*E24 + 2*E15*E28 + 2*E18*E25) + E27*(4*E16*E26 + 4*E17*E27 + 4*E18*E28) + E11*(2*E20*E26 + 2*E21*E27 + 2*E22*E28) + E14*(2*E23*E26 + 2*E24*E27 + 2*E25*E28) - E17*(E20_2 + E21_2 + E22_2 + E23_2 + E24_2 + E25_2 + E26_2 + E27_2 + E28_2);
double A_6_5 = E31*(2*E10*E26 + 2*E16*E20 + 2*E11*E27 + 2*E17*E21 + 2*E12*E28 + 2*E18*E22) - E27*(2*E10*E30 + 2*E11*E31 + 2*E12*E32 + 2*E13*E33 + 2*E14*E34 + 2*E15*E35 + 2*E16*E36 + 2*E17*E37 + 2*E18*E38) - E17*(2*E20*E30 + 2*E21*E31 + 2*E22*E32 + 2*E23*E33 + 2*E24*E34 + 2*E25*E35 + 2*E26*E36 + 2*E27*E37 + 2*E28*E38) - E37*(2*E10*E20 + 2*E11*E21 + 2*E12*E22 + 2*E13*E23 + 2*E14*E24 + 2*E15*E25 + 2*E16*E26 + 2*E17*E27 + 2*E18*E28) + E34*(2*E13*E26 + 2*E16*E23 + 2*E14*E27 + 2*E17*E24 + 2*E15*E28 + 2*E18*E25) + E21*(2*E10*E36 + 2*E16*E30 + 2*E11*E37 + 2*E17*E31 + 2*E12*E38 + 2*E18*E32) + E24*(2*E13*E36 + 2*E16*E33 + 2*E14*E37 + 2*E17*E34 + 2*E15*E38 + 2*E18*E35) + E11*(2*E20*E36 + 2*E26*E30 + 2*E21*E37 + 2*E27*E31 + 2*E22*E38 + 2*E28*E32) + E14*(2*E23*E36 + 2*E26*E33 + 2*E24*E37 + 2*E27*E34 + 2*E25*E38 + 2*E28*E35) + E37*(4*E16*E26 + 4*E17*E27 + 4*E18*E28) + E27*(4*E16*E36 + 4*E17*E37 + 4*E18*E38) + E17*(4*E26*E36 + 4*E27*E37 + 4*E28*E38);
double A_6_2 = E17*(2*E36_2 + 2*E37_2 + 2*E38_2) - E37*(2*E10*E30 + 2*E11*E31 + 2*E12*E32 + 2*E13*E33 + 2*E14*E34 + 2*E15*E35 + 2*E16*E36 + 2*E17*E37 + 2*E18*E38) + E31*(2*E10*E36 + 2*E16*E30 + 2*E11*E37 + 2*E17*E31 + 2*E12*E38 + 2*E18*E32) + E34*(2*E13*E36 + 2*E16*E33 + 2*E14*E37 + 2*E17*E34 + 2*E15*E38 + 2*E18*E35) + E37*(4*E16*E36 + 4*E17*E37 + 4*E18*E38) + E11*(2*E30*E36 + 2*E31*E37 + 2*E32*E38) + E14*(2*E33*E36 + 2*E34*E37 + 2*E35*E38) - E17*(E30_2 + E31_2 + E32_2 + E33_2 + E34_2 + E35_2 + E36_2 + E37_2 + E38_2);
double A_6_10 = E27*(2*E26_2 + 2*E27_2 + 2*E28_2) + E21*(2*E20*E26 + 2*E21*E27 + 2*E22*E28) + E24*(2*E23*E26 + 2*E24*E27 + 2*E25*E28) - E27*(E20_2 + E21_2 + E22_2 + E23_2 + E24_2 + E25_2 + E26_2 + E27_2 + E28_2);
double A_6_4 = E37*(2*E26_2 + 2*E27_2 + 2*E28_2) - E27*(2*E20*E30 + 2*E21*E31 + 2*E22*E32 + 2*E23*E33 + 2*E24*E34 + 2*E25*E35 + 2*E26*E36 + 2*E27*E37 + 2*E28*E38) + E21*(2*E20*E36 + 2*E26*E30 + 2*E21*E37 + 2*E27*E31 + 2*E22*E38 + 2*E28*E32) + E24*(2*E23*E36 + 2*E26*E33 + 2*E24*E37 + 2*E27*E34 + 2*E25*E38 + 2*E28*E35) + E31*(2*E20*E26 + 2*E21*E27 + 2*E22*E28) + E34*(2*E23*E26 + 2*E24*E27 + 2*E25*E28) + E27*(4*E26*E36 + 4*E27*E37 + 4*E28*E38) - E37*(E20_2 + E21_2 + E22_2 + E23_2 + E24_2 + E25_2 + E26_2 + E27_2 + E28_2);
double A_6_1 = E27*(2*E36_2 + 2*E37_2 + 2*E38_2) - E37*(2*E20*E30 + 2*E21*E31 + 2*E22*E32 + 2*E23*E33 + 2*E24*E34 + 2*E25*E35 + 2*E26*E36 + 2*E27*E37 + 2*E28*E38) + E31*(2*E20*E36 + 2*E26*E30 + 2*E21*E37 + 2*E27*E31 + 2*E22*E38 + 2*E28*E32) + E34*(2*E23*E36 + 2*E26*E33 + 2*E24*E37 + 2*E27*E34 + 2*E25*E38 + 2*E28*E35) + E37*(4*E26*E36 + 4*E27*E37 + 4*E28*E38) + E21*(2*E30*E36 + 2*E31*E37 + 2*E32*E38) + E24*(2*E33*E36 + 2*E34*E37 + 2*E35*E38) - E27*(E30_2 + E31_2 + E32_2 + E33_2 + E34_2 + E35_2 + E36_2 + E37_2 + E38_2);
double A_6_0 = E37*(2*E36_2 + 2*E37_2 + 2*E38_2) + E31*(2*E30*E36 + 2*E31*E37 + 2*E32*E38) + E34*(2*E33*E36 + 2*E34*E37 + 2*E35*E38) - E37*(E30_2 + E31_2 + E32_2 + E33_2 + E34_2 + E35_2 + E36_2 + E37_2 + E38_2);
double A_7_19 = E02*(2*E00_2 + 2*E01_2 + 2*E02_2) + E05*(2*E00*E03 + 2*E01*E04 + 2*E02*E05) + E08*(2*E00*E06 + 2*E01*E07 + 2*E02*E08) - E02*(E00_2 + E01_2 + E02_2 + E03_2 + E04_2 + E05_2 + E06_2 + E07_2 + E08_2);
double A_7_18 = E12*(2*E00_2 + 2*E01_2 + 2*E02_2) - E02*(2*E00*E10 + 2*E01*E11 + 2*E02*E12 + 2*E03*E13 + 2*E04*E14 + 2*E05*E15 + 2*E06*E16 + 2*E07*E17 + 2*E08*E18) + E05*(2*E00*E13 + 2*E03*E10 + 2*E01*E14 + 2*E04*E11 + 2*E02*E15 + 2*E05*E12) + E08*(2*E00*E16 + 2*E06*E10 + 2*E01*E17 + 2*E07*E11 + 2*E02*E18 + 2*E08*E12) + E15*(2*E00*E03 + 2*E01*E04 + 2*E02*E05) + E18*(2*E00*E06 + 2*E01*E07 + 2*E02*E08) + E02*(4*E00*E10 + 4*E01*E11 + 4*E02*E12) - E12*(E00_2 + E01_2 + E02_2 + E03_2 + E04_2 + E05_2 + E06_2 + E07_2 + E08_2);
double A_7_15 = E22*(2*E00_2 + 2*E01_2 + 2*E02_2) - E02*(2*E00*E20 + 2*E01*E21 + 2*E02*E22 + 2*E03*E23 + 2*E04*E24 + 2*E05*E25 + 2*E06*E26 + 2*E07*E27 + 2*E08*E28) + E05*(2*E00*E23 + 2*E03*E20 + 2*E01*E24 + 2*E04*E21 + 2*E02*E25 + 2*E05*E22) + E08*(2*E00*E26 + 2*E06*E20 + 2*E01*E27 + 2*E07*E21 + 2*E02*E28 + 2*E08*E22) + E25*(2*E00*E03 + 2*E01*E04 + 2*E02*E05) + E28*(2*E00*E06 + 2*E01*E07 + 2*E02*E08) + E02*(4*E00*E20 + 4*E01*E21 + 4*E02*E22) - E22*(E00_2 + E01_2 + E02_2 + E03_2 + E04_2 + E05_2 + E06_2 + E07_2 + E08_2);
double A_7_9 = E32*(2*E00_2 + 2*E01_2 + 2*E02_2) - E02*(2*E00*E30 + 2*E01*E31 + 2*E02*E32 + 2*E03*E33 + 2*E04*E34 + 2*E05*E35 + 2*E06*E36 + 2*E07*E37 + 2*E08*E38) + E05*(2*E00*E33 + 2*E03*E30 + 2*E01*E34 + 2*E04*E31 + 2*E02*E35 + 2*E05*E32) + E08*(2*E00*E36 + 2*E06*E30 + 2*E01*E37 + 2*E07*E31 + 2*E02*E38 + 2*E08*E32) + E35*(2*E00*E03 + 2*E01*E04 + 2*E02*E05) + E38*(2*E00*E06 + 2*E01*E07 + 2*E02*E08) + E02*(4*E00*E30 + 4*E01*E31 + 4*E02*E32) - E32*(E00_2 + E01_2 + E02_2 + E03_2 + E04_2 + E05_2 + E06_2 + E07_2 + E08_2);
double A_7_17 = E02*(2*E10_2 + 2*E11_2 + 2*E12_2) - E12*(2*E00*E10 + 2*E01*E11 + 2*E02*E12 + 2*E03*E13 + 2*E04*E14 + 2*E05*E15 + 2*E06*E16 + 2*E07*E17 + 2*E08*E18) + E15*(2*E00*E13 + 2*E03*E10 + 2*E01*E14 + 2*E04*E11 + 2*E02*E15 + 2*E05*E12) + E18*(2*E00*E16 + 2*E06*E10 + 2*E01*E17 + 2*E07*E11 + 2*E02*E18 + 2*E08*E12) + E12*(4*E00*E10 + 4*E01*E11 + 4*E02*E12) + E05*(2*E10*E13 + 2*E11*E14 + 2*E12*E15) + E08*(2*E10*E16 + 2*E11*E17 + 2*E12*E18) - E02*(E10_2 + E11_2 + E12_2 + E13_2 + E14_2 + E15_2 + E16_2 + E17_2 + E18_2);
double A_7_14 = E25*(2*E00*E13 + 2*E03*E10 + 2*E01*E14 + 2*E04*E11 + 2*E02*E15 + 2*E05*E12) - E12*(2*E00*E20 + 2*E01*E21 + 2*E02*E22 + 2*E03*E23 + 2*E04*E24 + 2*E05*E25 + 2*E06*E26 + 2*E07*E27 + 2*E08*E28) - E02*(2*E10*E20 + 2*E11*E21 + 2*E12*E22 + 2*E13*E23 + 2*E14*E24 + 2*E15*E25 + 2*E16*E26 + 2*E17*E27 + 2*E18*E28) - E22*(2*E00*E10 + 2*E01*E11 + 2*E02*E12 + 2*E03*E13 + 2*E04*E14 + 2*E05*E15 + 2*E06*E16 + 2*E07*E17 + 2*E08*E18) + E28*(2*E00*E16 + 2*E06*E10 + 2*E01*E17 + 2*E07*E11 + 2*E02*E18 + 2*E08*E12) + E15*(2*E00*E23 + 2*E03*E20 + 2*E01*E24 + 2*E04*E21 + 2*E02*E25 + 2*E05*E22) + E18*(2*E00*E26 + 2*E06*E20 + 2*E01*E27 + 2*E07*E21 + 2*E02*E28 + 2*E08*E22) + E05*(2*E10*E23 + 2*E13*E20 + 2*E11*E24 + 2*E14*E21 + 2*E12*E25 + 2*E15*E22) + E08*(2*E10*E26 + 2*E16*E20 + 2*E11*E27 + 2*E17*E21 + 2*E12*E28 + 2*E18*E22) + E22*(4*E00*E10 + 4*E01*E11 + 4*E02*E12) + E12*(4*E00*E20 + 4*E01*E21 + 4*E02*E22) + E02*(4*E10*E20 + 4*E11*E21 + 4*E12*E22);
double A_7_8 = E35*(2*E00*E13 + 2*E03*E10 + 2*E01*E14 + 2*E04*E11 + 2*E02*E15 + 2*E05*E12) - E12*(2*E00*E30 + 2*E01*E31 + 2*E02*E32 + 2*E03*E33 + 2*E04*E34 + 2*E05*E35 + 2*E06*E36 + 2*E07*E37 + 2*E08*E38) - E02*(2*E10*E30 + 2*E11*E31 + 2*E12*E32 + 2*E13*E33 + 2*E14*E34 + 2*E15*E35 + 2*E16*E36 + 2*E17*E37 + 2*E18*E38) - E32*(2*E00*E10 + 2*E01*E11 + 2*E02*E12 + 2*E03*E13 + 2*E04*E14 + 2*E05*E15 + 2*E06*E16 + 2*E07*E17 + 2*E08*E18) + E38*(2*E00*E16 + 2*E06*E10 + 2*E01*E17 + 2*E07*E11 + 2*E02*E18 + 2*E08*E12) + E15*(2*E00*E33 + 2*E03*E30 + 2*E01*E34 + 2*E04*E31 + 2*E02*E35 + 2*E05*E32) + E18*(2*E00*E36 + 2*E06*E30 + 2*E01*E37 + 2*E07*E31 + 2*E02*E38 + 2*E08*E32) + E05*(2*E10*E33 + 2*E13*E30 + 2*E11*E34 + 2*E14*E31 + 2*E12*E35 + 2*E15*E32) + E08*(2*E10*E36 + 2*E16*E30 + 2*E11*E37 + 2*E17*E31 + 2*E12*E38 + 2*E18*E32) + E32*(4*E00*E10 + 4*E01*E11 + 4*E02*E12) + E12*(4*E00*E30 + 4*E01*E31 + 4*E02*E32) + E02*(4*E10*E30 + 4*E11*E31 + 4*E12*E32);
double A_7_12 = E02*(2*E20_2 + 2*E21_2 + 2*E22_2) - E22*(2*E00*E20 + 2*E01*E21 + 2*E02*E22 + 2*E03*E23 + 2*E04*E24 + 2*E05*E25 + 2*E06*E26 + 2*E07*E27 + 2*E08*E28) + E25*(2*E00*E23 + 2*E03*E20 + 2*E01*E24 + 2*E04*E21 + 2*E02*E25 + 2*E05*E22) + E28*(2*E00*E26 + 2*E06*E20 + 2*E01*E27 + 2*E07*E21 + 2*E02*E28 + 2*E08*E22) + E22*(4*E00*E20 + 4*E01*E21 + 4*E02*E22) + E05*(2*E20*E23 + 2*E21*E24 + 2*E22*E25) + E08*(2*E20*E26 + 2*E21*E27 + 2*E22*E28) - E02*(E20_2 + E21_2 + E22_2 + E23_2 + E24_2 + E25_2 + E26_2 + E27_2 + E28_2);
double A_7_6 = E35*(2*E00*E23 + 2*E03*E20 + 2*E01*E24 + 2*E04*E21 + 2*E02*E25 + 2*E05*E22) - E22*(2*E00*E30 + 2*E01*E31 + 2*E02*E32 + 2*E03*E33 + 2*E04*E34 + 2*E05*E35 + 2*E06*E36 + 2*E07*E37 + 2*E08*E38) - E02*(2*E20*E30 + 2*E21*E31 + 2*E22*E32 + 2*E23*E33 + 2*E24*E34 + 2*E25*E35 + 2*E26*E36 + 2*E27*E37 + 2*E28*E38) - E32*(2*E00*E20 + 2*E01*E21 + 2*E02*E22 + 2*E03*E23 + 2*E04*E24 + 2*E05*E25 + 2*E06*E26 + 2*E07*E27 + 2*E08*E28) + E38*(2*E00*E26 + 2*E06*E20 + 2*E01*E27 + 2*E07*E21 + 2*E02*E28 + 2*E08*E22) + E25*(2*E00*E33 + 2*E03*E30 + 2*E01*E34 + 2*E04*E31 + 2*E02*E35 + 2*E05*E32) + E28*(2*E00*E36 + 2*E06*E30 + 2*E01*E37 + 2*E07*E31 + 2*E02*E38 + 2*E08*E32) + E05*(2*E20*E33 + 2*E23*E30 + 2*E21*E34 + 2*E24*E31 + 2*E22*E35 + 2*E25*E32) + E08*(2*E20*E36 + 2*E26*E30 + 2*E21*E37 + 2*E27*E31 + 2*E22*E38 + 2*E28*E32) + E32*(4*E00*E20 + 4*E01*E21 + 4*E02*E22) + E22*(4*E00*E30 + 4*E01*E31 + 4*E02*E32) + E02*(4*E20*E30 + 4*E21*E31 + 4*E22*E32);
double A_7_3 = E02*(2*E30_2 + 2*E31_2 + 2*E32_2) - E32*(2*E00*E30 + 2*E01*E31 + 2*E02*E32 + 2*E03*E33 + 2*E04*E34 + 2*E05*E35 + 2*E06*E36 + 2*E07*E37 + 2*E08*E38) + E35*(2*E00*E33 + 2*E03*E30 + 2*E01*E34 + 2*E04*E31 + 2*E02*E35 + 2*E05*E32) + E38*(2*E00*E36 + 2*E06*E30 + 2*E01*E37 + 2*E07*E31 + 2*E02*E38 + 2*E08*E32) + E32*(4*E00*E30 + 4*E01*E31 + 4*E02*E32) + E05*(2*E30*E33 + 2*E31*E34 + 2*E32*E35) + E08*(2*E30*E36 + 2*E31*E37 + 2*E32*E38) - E02*(E30_2 + E31_2 + E32_2 + E33_2 + E34_2 + E35_2 + E36_2 + E37_2 + E38_2);
double A_7_16 = E12*(2*E10_2 + 2*E11_2 + 2*E12_2) + E15*(2*E10*E13 + 2*E11*E14 + 2*E12*E15) + E18*(2*E10*E16 + 2*E11*E17 + 2*E12*E18) - E12*(E10_2 + E11_2 + E12_2 + E13_2 + E14_2 + E15_2 + E16_2 + E17_2 + E18_2);
double A_7_13 = E22*(2*E10_2 + 2*E11_2 + 2*E12_2) - E12*(2*E10*E20 + 2*E11*E21 + 2*E12*E22 + 2*E13*E23 + 2*E14*E24 + 2*E15*E25 + 2*E16*E26 + 2*E17*E27 + 2*E18*E28) + E15*(2*E10*E23 + 2*E13*E20 + 2*E11*E24 + 2*E14*E21 + 2*E12*E25 + 2*E15*E22) + E18*(2*E10*E26 + 2*E16*E20 + 2*E11*E27 + 2*E17*E21 + 2*E12*E28 + 2*E18*E22) + E25*(2*E10*E13 + 2*E11*E14 + 2*E12*E15) + E28*(2*E10*E16 + 2*E11*E17 + 2*E12*E18) + E12*(4*E10*E20 + 4*E11*E21 + 4*E12*E22) - E22*(E10_2 + E11_2 + E12_2 + E13_2 + E14_2 + E15_2 + E16_2 + E17_2 + E18_2);
double A_7_7 = E32*(2*E10_2 + 2*E11_2 + 2*E12_2) - E12*(2*E10*E30 + 2*E11*E31 + 2*E12*E32 + 2*E13*E33 + 2*E14*E34 + 2*E15*E35 + 2*E16*E36 + 2*E17*E37 + 2*E18*E38) + E15*(2*E10*E33 + 2*E13*E30 + 2*E11*E34 + 2*E14*E31 + 2*E12*E35 + 2*E15*E32) + E18*(2*E10*E36 + 2*E16*E30 + 2*E11*E37 + 2*E17*E31 + 2*E12*E38 + 2*E18*E32) + E35*(2*E10*E13 + 2*E11*E14 + 2*E12*E15) + E38*(2*E10*E16 + 2*E11*E17 + 2*E12*E18) + E12*(4*E10*E30 + 4*E11*E31 + 4*E12*E32) - E32*(E10_2 + E11_2 + E12_2 + E13_2 + E14_2 + E15_2 + E16_2 + E17_2 + E18_2);
double A_7_11 = E12*(2*E20_2 + 2*E21_2 + 2*E22_2) - E22*(2*E10*E20 + 2*E11*E21 + 2*E12*E22 + 2*E13*E23 + 2*E14*E24 + 2*E15*E25 + 2*E16*E26 + 2*E17*E27 + 2*E18*E28) + E25*(2*E10*E23 + 2*E13*E20 + 2*E11*E24 + 2*E14*E21 + 2*E12*E25 + 2*E15*E22) + E28*(2*E10*E26 + 2*E16*E20 + 2*E11*E27 + 2*E17*E21 + 2*E12*E28 + 2*E18*E22) + E22*(4*E10*E20 + 4*E11*E21 + 4*E12*E22) + E15*(2*E20*E23 + 2*E21*E24 + 2*E22*E25) + E18*(2*E20*E26 + 2*E21*E27 + 2*E22*E28) - E12*(E20_2 + E21_2 + E22_2 + E23_2 + E24_2 + E25_2 + E26_2 + E27_2 + E28_2);
double A_7_5 = E35*(2*E10*E23 + 2*E13*E20 + 2*E11*E24 + 2*E14*E21 + 2*E12*E25 + 2*E15*E22) - E22*(2*E10*E30 + 2*E11*E31 + 2*E12*E32 + 2*E13*E33 + 2*E14*E34 + 2*E15*E35 + 2*E16*E36 + 2*E17*E37 + 2*E18*E38) - E12*(2*E20*E30 + 2*E21*E31 + 2*E22*E32 + 2*E23*E33 + 2*E24*E34 + 2*E25*E35 + 2*E26*E36 + 2*E27*E37 + 2*E28*E38) - E32*(2*E10*E20 + 2*E11*E21 + 2*E12*E22 + 2*E13*E23 + 2*E14*E24 + 2*E15*E25 + 2*E16*E26 + 2*E17*E27 + 2*E18*E28) + E38*(2*E10*E26 + 2*E16*E20 + 2*E11*E27 + 2*E17*E21 + 2*E12*E28 + 2*E18*E22) + E25*(2*E10*E33 + 2*E13*E30 + 2*E11*E34 + 2*E14*E31 + 2*E12*E35 + 2*E15*E32) + E28*(2*E10*E36 + 2*E16*E30 + 2*E11*E37 + 2*E17*E31 + 2*E12*E38 + 2*E18*E32) + E15*(2*E20*E33 + 2*E23*E30 + 2*E21*E34 + 2*E24*E31 + 2*E22*E35 + 2*E25*E32) + E18*(2*E20*E36 + 2*E26*E30 + 2*E21*E37 + 2*E27*E31 + 2*E22*E38 + 2*E28*E32) + E32*(4*E10*E20 + 4*E11*E21 + 4*E12*E22) + E22*(4*E10*E30 + 4*E11*E31 + 4*E12*E32) + E12*(4*E20*E30 + 4*E21*E31 + 4*E22*E32);
double A_7_2 = E12*(2*E30_2 + 2*E31_2 + 2*E32_2) - E32*(2*E10*E30 + 2*E11*E31 + 2*E12*E32 + 2*E13*E33 + 2*E14*E34 + 2*E15*E35 + 2*E16*E36 + 2*E17*E37 + 2*E18*E38) + E35*(2*E10*E33 + 2*E13*E30 + 2*E11*E34 + 2*E14*E31 + 2*E12*E35 + 2*E15*E32) + E38*(2*E10*E36 + 2*E16*E30 + 2*E11*E37 + 2*E17*E31 + 2*E12*E38 + 2*E18*E32) + E32*(4*E10*E30 + 4*E11*E31 + 4*E12*E32) + E15*(2*E30*E33 + 2*E31*E34 + 2*E32*E35) + E18*(2*E30*E36 + 2*E31*E37 + 2*E32*E38) - E12*(E30_2 + E31_2 + E32_2 + E33_2 + E34_2 + E35_2 + E36_2 + E37_2 + E38_2);
double A_7_10 = E22*(2*E20_2 + 2*E21_2 + 2*E22_2) + E25*(2*E20*E23 + 2*E21*E24 + 2*E22*E25) + E28*(2*E20*E26 + 2*E21*E27 + 2*E22*E28) - E22*(E20_2 + E21_2 + E22_2 + E23_2 + E24_2 + E25_2 + E26_2 + E27_2 + E28_2);
double A_7_4 = E32*(2*E20_2 + 2*E21_2 + 2*E22_2) - E22*(2*E20*E30 + 2*E21*E31 + 2*E22*E32 + 2*E23*E33 + 2*E24*E34 + 2*E25*E35 + 2*E26*E36 + 2*E27*E37 + 2*E28*E38) + E25*(2*E20*E33 + 2*E23*E30 + 2*E21*E34 + 2*E24*E31 + 2*E22*E35 + 2*E25*E32) + E28*(2*E20*E36 + 2*E26*E30 + 2*E21*E37 + 2*E27*E31 + 2*E22*E38 + 2*E28*E32) + E35*(2*E20*E23 + 2*E21*E24 + 2*E22*E25) + E38*(2*E20*E26 + 2*E21*E27 + 2*E22*E28) + E22*(4*E20*E30 + 4*E21*E31 + 4*E22*E32) - E32*(E20_2 + E21_2 + E22_2 + E23_2 + E24_2 + E25_2 + E26_2 + E27_2 + E28_2);
double A_7_1 = E22*(2*E30_2 + 2*E31_2 + 2*E32_2) - E32*(2*E20*E30 + 2*E21*E31 + 2*E22*E32 + 2*E23*E33 + 2*E24*E34 + 2*E25*E35 + 2*E26*E36 + 2*E27*E37 + 2*E28*E38) + E35*(2*E20*E33 + 2*E23*E30 + 2*E21*E34 + 2*E24*E31 + 2*E22*E35 + 2*E25*E32) + E38*(2*E20*E36 + 2*E26*E30 + 2*E21*E37 + 2*E27*E31 + 2*E22*E38 + 2*E28*E32) + E32*(4*E20*E30 + 4*E21*E31 + 4*E22*E32) + E25*(2*E30*E33 + 2*E31*E34 + 2*E32*E35) + E28*(2*E30*E36 + 2*E31*E37 + 2*E32*E38) - E22*(E30_2 + E31_2 + E32_2 + E33_2 + E34_2 + E35_2 + E36_2 + E37_2 + E38_2);
double A_7_0 = E32*(2*E30_2 + 2*E31_2 + 2*E32_2) + E35*(2*E30*E33 + 2*E31*E34 + 2*E32*E35) + E38*(2*E30*E36 + 2*E31*E37 + 2*E32*E38) - E32*(E30_2 + E31_2 + E32_2 + E33_2 + E34_2 + E35_2 + E36_2 + E37_2 + E38_2);
double A_8_19 = E05*(2*E03_2 + 2*E04_2 + 2*E05_2) + E02*(2*E00*E03 + 2*E01*E04 + 2*E02*E05) + E08*(2*E03*E06 + 2*E04*E07 + 2*E05*E08) - E05*(E00_2 + E01_2 + E02_2 + E03_2 + E04_2 + E05_2 + E06_2 + E07_2 + E08_2);
double A_8_18 = E15*(2*E03_2 + 2*E04_2 + 2*E05_2) - E05*(2*E00*E10 + 2*E01*E11 + 2*E02*E12 + 2*E03*E13 + 2*E04*E14 + 2*E05*E15 + 2*E06*E16 + 2*E07*E17 + 2*E08*E18) + E02*(2*E00*E13 + 2*E03*E10 + 2*E01*E14 + 2*E04*E11 + 2*E02*E15 + 2*E05*E12) + E08*(2*E03*E16 + 2*E06*E13 + 2*E04*E17 + 2*E07*E14 + 2*E05*E18 + 2*E08*E15) + E12*(2*E00*E03 + 2*E01*E04 + 2*E02*E05) + E18*(2*E03*E06 + 2*E04*E07 + 2*E05*E08) + E05*(4*E03*E13 + 4*E04*E14 + 4*E05*E15) - E15*(E00_2 + E01_2 + E02_2 + E03_2 + E04_2 + E05_2 + E06_2 + E07_2 + E08_2);
double A_8_15 = E25*(2*E03_2 + 2*E04_2 + 2*E05_2) - E05*(2*E00*E20 + 2*E01*E21 + 2*E02*E22 + 2*E03*E23 + 2*E04*E24 + 2*E05*E25 + 2*E06*E26 + 2*E07*E27 + 2*E08*E28) + E02*(2*E00*E23 + 2*E03*E20 + 2*E01*E24 + 2*E04*E21 + 2*E02*E25 + 2*E05*E22) + E08*(2*E03*E26 + 2*E06*E23 + 2*E04*E27 + 2*E07*E24 + 2*E05*E28 + 2*E08*E25) + E22*(2*E00*E03 + 2*E01*E04 + 2*E02*E05) + E28*(2*E03*E06 + 2*E04*E07 + 2*E05*E08) + E05*(4*E03*E23 + 4*E04*E24 + 4*E05*E25) - E25*(E00_2 + E01_2 + E02_2 + E03_2 + E04_2 + E05_2 + E06_2 + E07_2 + E08_2);
double A_8_9 = E35*(2*E03_2 + 2*E04_2 + 2*E05_2) - E05*(2*E00*E30 + 2*E01*E31 + 2*E02*E32 + 2*E03*E33 + 2*E04*E34 + 2*E05*E35 + 2*E06*E36 + 2*E07*E37 + 2*E08*E38) + E02*(2*E00*E33 + 2*E03*E30 + 2*E01*E34 + 2*E04*E31 + 2*E02*E35 + 2*E05*E32) + E08*(2*E03*E36 + 2*E06*E33 + 2*E04*E37 + 2*E07*E34 + 2*E05*E38 + 2*E08*E35) + E32*(2*E00*E03 + 2*E01*E04 + 2*E02*E05) + E38*(2*E03*E06 + 2*E04*E07 + 2*E05*E08) + E05*(4*E03*E33 + 4*E04*E34 + 4*E05*E35) - E35*(E00_2 + E01_2 + E02_2 + E03_2 + E04_2 + E05_2 + E06_2 + E07_2 + E08_2);
double A_8_17 = E05*(2*E13_2 + 2*E14_2 + 2*E15_2) - E15*(2*E00*E10 + 2*E01*E11 + 2*E02*E12 + 2*E03*E13 + 2*E04*E14 + 2*E05*E15 + 2*E06*E16 + 2*E07*E17 + 2*E08*E18) + E12*(2*E00*E13 + 2*E03*E10 + 2*E01*E14 + 2*E04*E11 + 2*E02*E15 + 2*E05*E12) + E18*(2*E03*E16 + 2*E06*E13 + 2*E04*E17 + 2*E07*E14 + 2*E05*E18 + 2*E08*E15) + E15*(4*E03*E13 + 4*E04*E14 + 4*E05*E15) + E02*(2*E10*E13 + 2*E11*E14 + 2*E12*E15) + E08*(2*E13*E16 + 2*E14*E17 + 2*E15*E18) - E05*(E10_2 + E11_2 + E12_2 + E13_2 + E14_2 + E15_2 + E16_2 + E17_2 + E18_2);
double A_8_14 = E22*(2*E00*E13 + 2*E03*E10 + 2*E01*E14 + 2*E04*E11 + 2*E02*E15 + 2*E05*E12) - E15*(2*E00*E20 + 2*E01*E21 + 2*E02*E22 + 2*E03*E23 + 2*E04*E24 + 2*E05*E25 + 2*E06*E26 + 2*E07*E27 + 2*E08*E28) - E05*(2*E10*E20 + 2*E11*E21 + 2*E12*E22 + 2*E13*E23 + 2*E14*E24 + 2*E15*E25 + 2*E16*E26 + 2*E17*E27 + 2*E18*E28) - E25*(2*E00*E10 + 2*E01*E11 + 2*E02*E12 + 2*E03*E13 + 2*E04*E14 + 2*E05*E15 + 2*E06*E16 + 2*E07*E17 + 2*E08*E18) + E28*(2*E03*E16 + 2*E06*E13 + 2*E04*E17 + 2*E07*E14 + 2*E05*E18 + 2*E08*E15) + E12*(2*E00*E23 + 2*E03*E20 + 2*E01*E24 + 2*E04*E21 + 2*E02*E25 + 2*E05*E22) + E18*(2*E03*E26 + 2*E06*E23 + 2*E04*E27 + 2*E07*E24 + 2*E05*E28 + 2*E08*E25) + E02*(2*E10*E23 + 2*E13*E20 + 2*E11*E24 + 2*E14*E21 + 2*E12*E25 + 2*E15*E22) + E08*(2*E13*E26 + 2*E16*E23 + 2*E14*E27 + 2*E17*E24 + 2*E15*E28 + 2*E18*E25) + E25*(4*E03*E13 + 4*E04*E14 + 4*E05*E15) + E15*(4*E03*E23 + 4*E04*E24 + 4*E05*E25) + E05*(4*E13*E23 + 4*E14*E24 + 4*E15*E25);
double A_8_8 = E32*(2*E00*E13 + 2*E03*E10 + 2*E01*E14 + 2*E04*E11 + 2*E02*E15 + 2*E05*E12) - E15*(2*E00*E30 + 2*E01*E31 + 2*E02*E32 + 2*E03*E33 + 2*E04*E34 + 2*E05*E35 + 2*E06*E36 + 2*E07*E37 + 2*E08*E38) - E05*(2*E10*E30 + 2*E11*E31 + 2*E12*E32 + 2*E13*E33 + 2*E14*E34 + 2*E15*E35 + 2*E16*E36 + 2*E17*E37 + 2*E18*E38) - E35*(2*E00*E10 + 2*E01*E11 + 2*E02*E12 + 2*E03*E13 + 2*E04*E14 + 2*E05*E15 + 2*E06*E16 + 2*E07*E17 + 2*E08*E18) + E38*(2*E03*E16 + 2*E06*E13 + 2*E04*E17 + 2*E07*E14 + 2*E05*E18 + 2*E08*E15) + E12*(2*E00*E33 + 2*E03*E30 + 2*E01*E34 + 2*E04*E31 + 2*E02*E35 + 2*E05*E32) + E18*(2*E03*E36 + 2*E06*E33 + 2*E04*E37 + 2*E07*E34 + 2*E05*E38 + 2*E08*E35) + E02*(2*E10*E33 + 2*E13*E30 + 2*E11*E34 + 2*E14*E31 + 2*E12*E35 + 2*E15*E32) + E08*(2*E13*E36 + 2*E16*E33 + 2*E14*E37 + 2*E17*E34 + 2*E15*E38 + 2*E18*E35) + E35*(4*E03*E13 + 4*E04*E14 + 4*E05*E15) + E15*(4*E03*E33 + 4*E04*E34 + 4*E05*E35) + E05*(4*E13*E33 + 4*E14*E34 + 4*E15*E35);
double A_8_12 = E05*(2*E23_2 + 2*E24_2 + 2*E25_2) - E25*(2*E00*E20 + 2*E01*E21 + 2*E02*E22 + 2*E03*E23 + 2*E04*E24 + 2*E05*E25 + 2*E06*E26 + 2*E07*E27 + 2*E08*E28) + E22*(2*E00*E23 + 2*E03*E20 + 2*E01*E24 + 2*E04*E21 + 2*E02*E25 + 2*E05*E22) + E28*(2*E03*E26 + 2*E06*E23 + 2*E04*E27 + 2*E07*E24 + 2*E05*E28 + 2*E08*E25) + E25*(4*E03*E23 + 4*E04*E24 + 4*E05*E25) + E02*(2*E20*E23 + 2*E21*E24 + 2*E22*E25) + E08*(2*E23*E26 + 2*E24*E27 + 2*E25*E28) - E05*(E20_2 + E21_2 + E22_2 + E23_2 + E24_2 + E25_2 + E26_2 + E27_2 + E28_2);
double A_8_6 = E32*(2*E00*E23 + 2*E03*E20 + 2*E01*E24 + 2*E04*E21 + 2*E02*E25 + 2*E05*E22) - E25*(2*E00*E30 + 2*E01*E31 + 2*E02*E32 + 2*E03*E33 + 2*E04*E34 + 2*E05*E35 + 2*E06*E36 + 2*E07*E37 + 2*E08*E38) - E05*(2*E20*E30 + 2*E21*E31 + 2*E22*E32 + 2*E23*E33 + 2*E24*E34 + 2*E25*E35 + 2*E26*E36 + 2*E27*E37 + 2*E28*E38) - E35*(2*E00*E20 + 2*E01*E21 + 2*E02*E22 + 2*E03*E23 + 2*E04*E24 + 2*E05*E25 + 2*E06*E26 + 2*E07*E27 + 2*E08*E28) + E38*(2*E03*E26 + 2*E06*E23 + 2*E04*E27 + 2*E07*E24 + 2*E05*E28 + 2*E08*E25) + E22*(2*E00*E33 + 2*E03*E30 + 2*E01*E34 + 2*E04*E31 + 2*E02*E35 + 2*E05*E32) + E28*(2*E03*E36 + 2*E06*E33 + 2*E04*E37 + 2*E07*E34 + 2*E05*E38 + 2*E08*E35) + E02*(2*E20*E33 + 2*E23*E30 + 2*E21*E34 + 2*E24*E31 + 2*E22*E35 + 2*E25*E32) + E08*(2*E23*E36 + 2*E26*E33 + 2*E24*E37 + 2*E27*E34 + 2*E25*E38 + 2*E28*E35) + E35*(4*E03*E23 + 4*E04*E24 + 4*E05*E25) + E25*(4*E03*E33 + 4*E04*E34 + 4*E05*E35) + E05*(4*E23*E33 + 4*E24*E34 + 4*E25*E35);
double A_8_3 = E05*(2*E33_2 + 2*E34_2 + 2*E35_2) - E35*(2*E00*E30 + 2*E01*E31 + 2*E02*E32 + 2*E03*E33 + 2*E04*E34 + 2*E05*E35 + 2*E06*E36 + 2*E07*E37 + 2*E08*E38) + E32*(2*E00*E33 + 2*E03*E30 + 2*E01*E34 + 2*E04*E31 + 2*E02*E35 + 2*E05*E32) + E38*(2*E03*E36 + 2*E06*E33 + 2*E04*E37 + 2*E07*E34 + 2*E05*E38 + 2*E08*E35) + E35*(4*E03*E33 + 4*E04*E34 + 4*E05*E35) + E02*(2*E30*E33 + 2*E31*E34 + 2*E32*E35) + E08*(2*E33*E36 + 2*E34*E37 + 2*E35*E38) - E05*(E30_2 + E31_2 + E32_2 + E33_2 + E34_2 + E35_2 + E36_2 + E37_2 + E38_2);
double A_8_16 = E15*(2*E13_2 + 2*E14_2 + 2*E15_2) + E12*(2*E10*E13 + 2*E11*E14 + 2*E12*E15) + E18*(2*E13*E16 + 2*E14*E17 + 2*E15*E18) - E15*(E10_2 + E11_2 + E12_2 + E13_2 + E14_2 + E15_2 + E16_2 + E17_2 + E18_2);
double A_8_13 = E25*(2*E13_2 + 2*E14_2 + 2*E15_2) - E15*(2*E10*E20 + 2*E11*E21 + 2*E12*E22 + 2*E13*E23 + 2*E14*E24 + 2*E15*E25 + 2*E16*E26 + 2*E17*E27 + 2*E18*E28) + E12*(2*E10*E23 + 2*E13*E20 + 2*E11*E24 + 2*E14*E21 + 2*E12*E25 + 2*E15*E22) + E18*(2*E13*E26 + 2*E16*E23 + 2*E14*E27 + 2*E17*E24 + 2*E15*E28 + 2*E18*E25) + E22*(2*E10*E13 + 2*E11*E14 + 2*E12*E15) + E28*(2*E13*E16 + 2*E14*E17 + 2*E15*E18) + E15*(4*E13*E23 + 4*E14*E24 + 4*E15*E25) - E25*(E10_2 + E11_2 + E12_2 + E13_2 + E14_2 + E15_2 + E16_2 + E17_2 + E18_2);
double A_8_7 = E35*(2*E13_2 + 2*E14_2 + 2*E15_2) - E15*(2*E10*E30 + 2*E11*E31 + 2*E12*E32 + 2*E13*E33 + 2*E14*E34 + 2*E15*E35 + 2*E16*E36 + 2*E17*E37 + 2*E18*E38) + E12*(2*E10*E33 + 2*E13*E30 + 2*E11*E34 + 2*E14*E31 + 2*E12*E35 + 2*E15*E32) + E18*(2*E13*E36 + 2*E16*E33 + 2*E14*E37 + 2*E17*E34 + 2*E15*E38 + 2*E18*E35) + E32*(2*E10*E13 + 2*E11*E14 + 2*E12*E15) + E38*(2*E13*E16 + 2*E14*E17 + 2*E15*E18) + E15*(4*E13*E33 + 4*E14*E34 + 4*E15*E35) - E35*(E10_2 + E11_2 + E12_2 + E13_2 + E14_2 + E15_2 + E16_2 + E17_2 + E18_2);
double A_8_11 = E15*(2*E23_2 + 2*E24_2 + 2*E25_2) - E25*(2*E10*E20 + 2*E11*E21 + 2*E12*E22 + 2*E13*E23 + 2*E14*E24 + 2*E15*E25 + 2*E16*E26 + 2*E17*E27 + 2*E18*E28) + E22*(2*E10*E23 + 2*E13*E20 + 2*E11*E24 + 2*E14*E21 + 2*E12*E25 + 2*E15*E22) + E28*(2*E13*E26 + 2*E16*E23 + 2*E14*E27 + 2*E17*E24 + 2*E15*E28 + 2*E18*E25) + E25*(4*E13*E23 + 4*E14*E24 + 4*E15*E25) + E12*(2*E20*E23 + 2*E21*E24 + 2*E22*E25) + E18*(2*E23*E26 + 2*E24*E27 + 2*E25*E28) - E15*(E20_2 + E21_2 + E22_2 + E23_2 + E24_2 + E25_2 + E26_2 + E27_2 + E28_2);
double A_8_5 = E32*(2*E10*E23 + 2*E13*E20 + 2*E11*E24 + 2*E14*E21 + 2*E12*E25 + 2*E15*E22) - E25*(2*E10*E30 + 2*E11*E31 + 2*E12*E32 + 2*E13*E33 + 2*E14*E34 + 2*E15*E35 + 2*E16*E36 + 2*E17*E37 + 2*E18*E38) - E15*(2*E20*E30 + 2*E21*E31 + 2*E22*E32 + 2*E23*E33 + 2*E24*E34 + 2*E25*E35 + 2*E26*E36 + 2*E27*E37 + 2*E28*E38) - E35*(2*E10*E20 + 2*E11*E21 + 2*E12*E22 + 2*E13*E23 + 2*E14*E24 + 2*E15*E25 + 2*E16*E26 + 2*E17*E27 + 2*E18*E28) + E38*(2*E13*E26 + 2*E16*E23 + 2*E14*E27 + 2*E17*E24 + 2*E15*E28 + 2*E18*E25) + E22*(2*E10*E33 + 2*E13*E30 + 2*E11*E34 + 2*E14*E31 + 2*E12*E35 + 2*E15*E32) + E28*(2*E13*E36 + 2*E16*E33 + 2*E14*E37 + 2*E17*E34 + 2*E15*E38 + 2*E18*E35) + E12*(2*E20*E33 + 2*E23*E30 + 2*E21*E34 + 2*E24*E31 + 2*E22*E35 + 2*E25*E32) + E18*(2*E23*E36 + 2*E26*E33 + 2*E24*E37 + 2*E27*E34 + 2*E25*E38 + 2*E28*E35) + E35*(4*E13*E23 + 4*E14*E24 + 4*E15*E25) + E25*(4*E13*E33 + 4*E14*E34 + 4*E15*E35) + E15*(4*E23*E33 + 4*E24*E34 + 4*E25*E35);
double A_8_2 = E15*(2*E33_2 + 2*E34_2 + 2*E35_2) - E35*(2*E10*E30 + 2*E11*E31 + 2*E12*E32 + 2*E13*E33 + 2*E14*E34 + 2*E15*E35 + 2*E16*E36 + 2*E17*E37 + 2*E18*E38) + E32*(2*E10*E33 + 2*E13*E30 + 2*E11*E34 + 2*E14*E31 + 2*E12*E35 + 2*E15*E32) + E38*(2*E13*E36 + 2*E16*E33 + 2*E14*E37 + 2*E17*E34 + 2*E15*E38 + 2*E18*E35) + E35*(4*E13*E33 + 4*E14*E34 + 4*E15*E35) + E12*(2*E30*E33 + 2*E31*E34 + 2*E32*E35) + E18*(2*E33*E36 + 2*E34*E37 + 2*E35*E38) - E15*(E30_2 + E31_2 + E32_2 + E33_2 + E34_2 + E35_2 + E36_2 + E37_2 + E38_2);
double A_8_10 = E25*(2*E23_2 + 2*E24_2 + 2*E25_2) + E22*(2*E20*E23 + 2*E21*E24 + 2*E22*E25) + E28*(2*E23*E26 + 2*E24*E27 + 2*E25*E28) - E25*(E20_2 + E21_2 + E22_2 + E23_2 + E24_2 + E25_2 + E26_2 + E27_2 + E28_2);
double A_8_4 = E35*(2*E23_2 + 2*E24_2 + 2*E25_2) - E25*(2*E20*E30 + 2*E21*E31 + 2*E22*E32 + 2*E23*E33 + 2*E24*E34 + 2*E25*E35 + 2*E26*E36 + 2*E27*E37 + 2*E28*E38) + E22*(2*E20*E33 + 2*E23*E30 + 2*E21*E34 + 2*E24*E31 + 2*E22*E35 + 2*E25*E32) + E28*(2*E23*E36 + 2*E26*E33 + 2*E24*E37 + 2*E27*E34 + 2*E25*E38 + 2*E28*E35) + E32*(2*E20*E23 + 2*E21*E24 + 2*E22*E25) + E38*(2*E23*E26 + 2*E24*E27 + 2*E25*E28) + E25*(4*E23*E33 + 4*E24*E34 + 4*E25*E35) - E35*(E20_2 + E21_2 + E22_2 + E23_2 + E24_2 + E25_2 + E26_2 + E27_2 + E28_2);
double A_8_1 = E25*(2*E33_2 + 2*E34_2 + 2*E35_2) - E35*(2*E20*E30 + 2*E21*E31 + 2*E22*E32 + 2*E23*E33 + 2*E24*E34 + 2*E25*E35 + 2*E26*E36 + 2*E27*E37 + 2*E28*E38) + E32*(2*E20*E33 + 2*E23*E30 + 2*E21*E34 + 2*E24*E31 + 2*E22*E35 + 2*E25*E32) + E38*(2*E23*E36 + 2*E26*E33 + 2*E24*E37 + 2*E27*E34 + 2*E25*E38 + 2*E28*E35) + E35*(4*E23*E33 + 4*E24*E34 + 4*E25*E35) + E22*(2*E30*E33 + 2*E31*E34 + 2*E32*E35) + E28*(2*E33*E36 + 2*E34*E37 + 2*E35*E38) - E25*(E30_2 + E31_2 + E32_2 + E33_2 + E34_2 + E35_2 + E36_2 + E37_2 + E38_2);
double A_8_0 = E35*(2*E33_2 + 2*E34_2 + 2*E35_2) + E32*(2*E30*E33 + 2*E31*E34 + 2*E32*E35) + E38*(2*E33*E36 + 2*E34*E37 + 2*E35*E38) - E35*(E30_2 + E31_2 + E32_2 + E33_2 + E34_2 + E35_2 + E36_2 + E37_2 + E38_2);
double A_9_19 = E08*(2*E06_2 + 2*E07_2 + 2*E08_2) + E02*(2*E00*E06 + 2*E01*E07 + 2*E02*E08) + E05*(2*E03*E06 + 2*E04*E07 + 2*E05*E08) - E08*(E00_2 + E01_2 + E02_2 + E03_2 + E04_2 + E05_2 + E06_2 + E07_2 + E08_2);
double A_9_18 = E18*(2*E06_2 + 2*E07_2 + 2*E08_2) - E08*(2*E00*E10 + 2*E01*E11 + 2*E02*E12 + 2*E03*E13 + 2*E04*E14 + 2*E05*E15 + 2*E06*E16 + 2*E07*E17 + 2*E08*E18) + E02*(2*E00*E16 + 2*E06*E10 + 2*E01*E17 + 2*E07*E11 + 2*E02*E18 + 2*E08*E12) + E05*(2*E03*E16 + 2*E06*E13 + 2*E04*E17 + 2*E07*E14 + 2*E05*E18 + 2*E08*E15) + E12*(2*E00*E06 + 2*E01*E07 + 2*E02*E08) + E15*(2*E03*E06 + 2*E04*E07 + 2*E05*E08) + E08*(4*E06*E16 + 4*E07*E17 + 4*E08*E18) - E18*(E00_2 + E01_2 + E02_2 + E03_2 + E04_2 + E05_2 + E06_2 + E07_2 + E08_2);
double A_9_15 = E28*(2*E06_2 + 2*E07_2 + 2*E08_2) - E08*(2*E00*E20 + 2*E01*E21 + 2*E02*E22 + 2*E03*E23 + 2*E04*E24 + 2*E05*E25 + 2*E06*E26 + 2*E07*E27 + 2*E08*E28) + E02*(2*E00*E26 + 2*E06*E20 + 2*E01*E27 + 2*E07*E21 + 2*E02*E28 + 2*E08*E22) + E05*(2*E03*E26 + 2*E06*E23 + 2*E04*E27 + 2*E07*E24 + 2*E05*E28 + 2*E08*E25) + E22*(2*E00*E06 + 2*E01*E07 + 2*E02*E08) + E25*(2*E03*E06 + 2*E04*E07 + 2*E05*E08) + E08*(4*E06*E26 + 4*E07*E27 + 4*E08*E28) - E28*(E00_2 + E01_2 + E02_2 + E03_2 + E04_2 + E05_2 + E06_2 + E07_2 + E08_2);
double A_9_9 = E38*(2*E06_2 + 2*E07_2 + 2*E08_2) - E08*(2*E00*E30 + 2*E01*E31 + 2*E02*E32 + 2*E03*E33 + 2*E04*E34 + 2*E05*E35 + 2*E06*E36 + 2*E07*E37 + 2*E08*E38) + E02*(2*E00*E36 + 2*E06*E30 + 2*E01*E37 + 2*E07*E31 + 2*E02*E38 + 2*E08*E32) + E05*(2*E03*E36 + 2*E06*E33 + 2*E04*E37 + 2*E07*E34 + 2*E05*E38 + 2*E08*E35) + E32*(2*E00*E06 + 2*E01*E07 + 2*E02*E08) + E35*(2*E03*E06 + 2*E04*E07 + 2*E05*E08) + E08*(4*E06*E36 + 4*E07*E37 + 4*E08*E38) - E38*(E00_2 + E01_2 + E02_2 + E03_2 + E04_2 + E05_2 + E06_2 + E07_2 + E08_2);
double A_9_17 = E08*(2*E16_2 + 2*E17_2 + 2*E18_2) - E18*(2*E00*E10 + 2*E01*E11 + 2*E02*E12 + 2*E03*E13 + 2*E04*E14 + 2*E05*E15 + 2*E06*E16 + 2*E07*E17 + 2*E08*E18) + E12*(2*E00*E16 + 2*E06*E10 + 2*E01*E17 + 2*E07*E11 + 2*E02*E18 + 2*E08*E12) + E15*(2*E03*E16 + 2*E06*E13 + 2*E04*E17 + 2*E07*E14 + 2*E05*E18 + 2*E08*E15) + E18*(4*E06*E16 + 4*E07*E17 + 4*E08*E18) + E02*(2*E10*E16 + 2*E11*E17 + 2*E12*E18) + E05*(2*E13*E16 + 2*E14*E17 + 2*E15*E18) - E08*(E10_2 + E11_2 + E12_2 + E13_2 + E14_2 + E15_2 + E16_2 + E17_2 + E18_2);
double A_9_14 = E22*(2*E00*E16 + 2*E06*E10 + 2*E01*E17 + 2*E07*E11 + 2*E02*E18 + 2*E08*E12) - E18*(2*E00*E20 + 2*E01*E21 + 2*E02*E22 + 2*E03*E23 + 2*E04*E24 + 2*E05*E25 + 2*E06*E26 + 2*E07*E27 + 2*E08*E28) - E08*(2*E10*E20 + 2*E11*E21 + 2*E12*E22 + 2*E13*E23 + 2*E14*E24 + 2*E15*E25 + 2*E16*E26 + 2*E17*E27 + 2*E18*E28) - E28*(2*E00*E10 + 2*E01*E11 + 2*E02*E12 + 2*E03*E13 + 2*E04*E14 + 2*E05*E15 + 2*E06*E16 + 2*E07*E17 + 2*E08*E18) + E25*(2*E03*E16 + 2*E06*E13 + 2*E04*E17 + 2*E07*E14 + 2*E05*E18 + 2*E08*E15) + E12*(2*E00*E26 + 2*E06*E20 + 2*E01*E27 + 2*E07*E21 + 2*E02*E28 + 2*E08*E22) + E15*(2*E03*E26 + 2*E06*E23 + 2*E04*E27 + 2*E07*E24 + 2*E05*E28 + 2*E08*E25) + E02*(2*E10*E26 + 2*E16*E20 + 2*E11*E27 + 2*E17*E21 + 2*E12*E28 + 2*E18*E22) + E05*(2*E13*E26 + 2*E16*E23 + 2*E14*E27 + 2*E17*E24 + 2*E15*E28 + 2*E18*E25) + E28*(4*E06*E16 + 4*E07*E17 + 4*E08*E18) + E18*(4*E06*E26 + 4*E07*E27 + 4*E08*E28) + E08*(4*E16*E26 + 4*E17*E27 + 4*E18*E28);
double A_9_8 = E32*(2*E00*E16 + 2*E06*E10 + 2*E01*E17 + 2*E07*E11 + 2*E02*E18 + 2*E08*E12) - E18*(2*E00*E30 + 2*E01*E31 + 2*E02*E32 + 2*E03*E33 + 2*E04*E34 + 2*E05*E35 + 2*E06*E36 + 2*E07*E37 + 2*E08*E38) - E08*(2*E10*E30 + 2*E11*E31 + 2*E12*E32 + 2*E13*E33 + 2*E14*E34 + 2*E15*E35 + 2*E16*E36 + 2*E17*E37 + 2*E18*E38) - E38*(2*E00*E10 + 2*E01*E11 + 2*E02*E12 + 2*E03*E13 + 2*E04*E14 + 2*E05*E15 + 2*E06*E16 + 2*E07*E17 + 2*E08*E18) + E35*(2*E03*E16 + 2*E06*E13 + 2*E04*E17 + 2*E07*E14 + 2*E05*E18 + 2*E08*E15) + E12*(2*E00*E36 + 2*E06*E30 + 2*E01*E37 + 2*E07*E31 + 2*E02*E38 + 2*E08*E32) + E15*(2*E03*E36 + 2*E06*E33 + 2*E04*E37 + 2*E07*E34 + 2*E05*E38 + 2*E08*E35) + E02*(2*E10*E36 + 2*E16*E30 + 2*E11*E37 + 2*E17*E31 + 2*E12*E38 + 2*E18*E32) + E05*(2*E13*E36 + 2*E16*E33 + 2*E14*E37 + 2*E17*E34 + 2*E15*E38 + 2*E18*E35) + E38*(4*E06*E16 + 4*E07*E17 + 4*E08*E18) + E18*(4*E06*E36 + 4*E07*E37 + 4*E08*E38) + E08*(4*E16*E36 + 4*E17*E37 + 4*E18*E38);
double A_9_12 = E08*(2*E26_2 + 2*E27_2 + 2*E28_2) - E28*(2*E00*E20 + 2*E01*E21 + 2*E02*E22 + 2*E03*E23 + 2*E04*E24 + 2*E05*E25 + 2*E06*E26 + 2*E07*E27 + 2*E08*E28) + E22*(2*E00*E26 + 2*E06*E20 + 2*E01*E27 + 2*E07*E21 + 2*E02*E28 + 2*E08*E22) + E25*(2*E03*E26 + 2*E06*E23 + 2*E04*E27 + 2*E07*E24 + 2*E05*E28 + 2*E08*E25) + E28*(4*E06*E26 + 4*E07*E27 + 4*E08*E28) + E02*(2*E20*E26 + 2*E21*E27 + 2*E22*E28) + E05*(2*E23*E26 + 2*E24*E27 + 2*E25*E28) - E08*(E20_2 + E21_2 + E22_2 + E23_2 + E24_2 + E25_2 + E26_2 + E27_2 + E28_2);
double A_9_6 = E32*(2*E00*E26 + 2*E06*E20 + 2*E01*E27 + 2*E07*E21 + 2*E02*E28 + 2*E08*E22) - E28*(2*E00*E30 + 2*E01*E31 + 2*E02*E32 + 2*E03*E33 + 2*E04*E34 + 2*E05*E35 + 2*E06*E36 + 2*E07*E37 + 2*E08*E38) - E08*(2*E20*E30 + 2*E21*E31 + 2*E22*E32 + 2*E23*E33 + 2*E24*E34 + 2*E25*E35 + 2*E26*E36 + 2*E27*E37 + 2*E28*E38) - E38*(2*E00*E20 + 2*E01*E21 + 2*E02*E22 + 2*E03*E23 + 2*E04*E24 + 2*E05*E25 + 2*E06*E26 + 2*E07*E27 + 2*E08*E28) + E35*(2*E03*E26 + 2*E06*E23 + 2*E04*E27 + 2*E07*E24 + 2*E05*E28 + 2*E08*E25) + E22*(2*E00*E36 + 2*E06*E30 + 2*E01*E37 + 2*E07*E31 + 2*E02*E38 + 2*E08*E32) + E25*(2*E03*E36 + 2*E06*E33 + 2*E04*E37 + 2*E07*E34 + 2*E05*E38 + 2*E08*E35) + E02*(2*E20*E36 + 2*E26*E30 + 2*E21*E37 + 2*E27*E31 + 2*E22*E38 + 2*E28*E32) + E05*(2*E23*E36 + 2*E26*E33 + 2*E24*E37 + 2*E27*E34 + 2*E25*E38 + 2*E28*E35) + E38*(4*E06*E26 + 4*E07*E27 + 4*E08*E28) + E28*(4*E06*E36 + 4*E07*E37 + 4*E08*E38) + E08*(4*E26*E36 + 4*E27*E37 + 4*E28*E38);
double A_9_3 = E08*(2*E36_2 + 2*E37_2 + 2*E38_2) - E38*(2*E00*E30 + 2*E01*E31 + 2*E02*E32 + 2*E03*E33 + 2*E04*E34 + 2*E05*E35 + 2*E06*E36 + 2*E07*E37 + 2*E08*E38) + E32*(2*E00*E36 + 2*E06*E30 + 2*E01*E37 + 2*E07*E31 + 2*E02*E38 + 2*E08*E32) + E35*(2*E03*E36 + 2*E06*E33 + 2*E04*E37 + 2*E07*E34 + 2*E05*E38 + 2*E08*E35) + E38*(4*E06*E36 + 4*E07*E37 + 4*E08*E38) + E02*(2*E30*E36 + 2*E31*E37 + 2*E32*E38) + E05*(2*E33*E36 + 2*E34*E37 + 2*E35*E38) - E08*(E30_2 + E31_2 + E32_2 + E33_2 + E34_2 + E35_2 + E36_2 + E37_2 + E38_2);
double A_9_16 = E18*(2*E16_2 + 2*E17_2 + 2*E18_2) + E12*(2*E10*E16 + 2*E11*E17 + 2*E12*E18) + E15*(2*E13*E16 + 2*E14*E17 + 2*E15*E18) - E18*(E10_2 + E11_2 + E12_2 + E13_2 + E14_2 + E15_2 + E16_2 + E17_2 + E18_2);
double A_9_13 = E28*(2*E16_2 + 2*E17_2 + 2*E18_2) - E18*(2*E10*E20 + 2*E11*E21 + 2*E12*E22 + 2*E13*E23 + 2*E14*E24 + 2*E15*E25 + 2*E16*E26 + 2*E17*E27 + 2*E18*E28) + E12*(2*E10*E26 + 2*E16*E20 + 2*E11*E27 + 2*E17*E21 + 2*E12*E28 + 2*E18*E22) + E15*(2*E13*E26 + 2*E16*E23 + 2*E14*E27 + 2*E17*E24 + 2*E15*E28 + 2*E18*E25) + E22*(2*E10*E16 + 2*E11*E17 + 2*E12*E18) + E25*(2*E13*E16 + 2*E14*E17 + 2*E15*E18) + E18*(4*E16*E26 + 4*E17*E27 + 4*E18*E28) - E28*(E10_2 + E11_2 + E12_2 + E13_2 + E14_2 + E15_2 + E16_2 + E17_2 + E18_2);
double A_9_7 = E38*(2*E16_2 + 2*E17_2 + 2*E18_2) - E18*(2*E10*E30 + 2*E11*E31 + 2*E12*E32 + 2*E13*E33 + 2*E14*E34 + 2*E15*E35 + 2*E16*E36 + 2*E17*E37 + 2*E18*E38) + E12*(2*E10*E36 + 2*E16*E30 + 2*E11*E37 + 2*E17*E31 + 2*E12*E38 + 2*E18*E32) + E15*(2*E13*E36 + 2*E16*E33 + 2*E14*E37 + 2*E17*E34 + 2*E15*E38 + 2*E18*E35) + E32*(2*E10*E16 + 2*E11*E17 + 2*E12*E18) + E35*(2*E13*E16 + 2*E14*E17 + 2*E15*E18) + E18*(4*E16*E36 + 4*E17*E37 + 4*E18*E38) - E38*(E10_2 + E11_2 + E12_2 + E13_2 + E14_2 + E15_2 + E16_2 + E17_2 + E18_2);
double A_9_11 = E18*(2*E26_2 + 2*E27_2 + 2*E28_2) - E28*(2*E10*E20 + 2*E11*E21 + 2*E12*E22 + 2*E13*E23 + 2*E14*E24 + 2*E15*E25 + 2*E16*E26 + 2*E17*E27 + 2*E18*E28) + E22*(2*E10*E26 + 2*E16*E20 + 2*E11*E27 + 2*E17*E21 + 2*E12*E28 + 2*E18*E22) + E25*(2*E13*E26 + 2*E16*E23 + 2*E14*E27 + 2*E17*E24 + 2*E15*E28 + 2*E18*E25) + E28*(4*E16*E26 + 4*E17*E27 + 4*E18*E28) + E12*(2*E20*E26 + 2*E21*E27 + 2*E22*E28) + E15*(2*E23*E26 + 2*E24*E27 + 2*E25*E28) - E18*(E20_2 + E21_2 + E22_2 + E23_2 + E24_2 + E25_2 + E26_2 + E27_2 + E28_2);
double A_9_5 = E32*(2*E10*E26 + 2*E16*E20 + 2*E11*E27 + 2*E17*E21 + 2*E12*E28 + 2*E18*E22) - E28*(2*E10*E30 + 2*E11*E31 + 2*E12*E32 + 2*E13*E33 + 2*E14*E34 + 2*E15*E35 + 2*E16*E36 + 2*E17*E37 + 2*E18*E38) - E18*(2*E20*E30 + 2*E21*E31 + 2*E22*E32 + 2*E23*E33 + 2*E24*E34 + 2*E25*E35 + 2*E26*E36 + 2*E27*E37 + 2*E28*E38) - E38*(2*E10*E20 + 2*E11*E21 + 2*E12*E22 + 2*E13*E23 + 2*E14*E24 + 2*E15*E25 + 2*E16*E26 + 2*E17*E27 + 2*E18*E28) + E35*(2*E13*E26 + 2*E16*E23 + 2*E14*E27 + 2*E17*E24 + 2*E15*E28 + 2*E18*E25) + E22*(2*E10*E36 + 2*E16*E30 + 2*E11*E37 + 2*E17*E31 + 2*E12*E38 + 2*E18*E32) + E25*(2*E13*E36 + 2*E16*E33 + 2*E14*E37 + 2*E17*E34 + 2*E15*E38 + 2*E18*E35) + E12*(2*E20*E36 + 2*E26*E30 + 2*E21*E37 + 2*E27*E31 + 2*E22*E38 + 2*E28*E32) + E15*(2*E23*E36 + 2*E26*E33 + 2*E24*E37 + 2*E27*E34 + 2*E25*E38 + 2*E28*E35) + E38*(4*E16*E26 + 4*E17*E27 + 4*E18*E28) + E28*(4*E16*E36 + 4*E17*E37 + 4*E18*E38) + E18*(4*E26*E36 + 4*E27*E37 + 4*E28*E38);
double A_9_2 = E18*(2*E36_2 + 2*E37_2 + 2*E38_2) - E38*(2*E10*E30 + 2*E11*E31 + 2*E12*E32 + 2*E13*E33 + 2*E14*E34 + 2*E15*E35 + 2*E16*E36 + 2*E17*E37 + 2*E18*E38) + E32*(2*E10*E36 + 2*E16*E30 + 2*E11*E37 + 2*E17*E31 + 2*E12*E38 + 2*E18*E32) + E35*(2*E13*E36 + 2*E16*E33 + 2*E14*E37 + 2*E17*E34 + 2*E15*E38 + 2*E18*E35) + E38*(4*E16*E36 + 4*E17*E37 + 4*E18*E38) + E12*(2*E30*E36 + 2*E31*E37 + 2*E32*E38) + E15*(2*E33*E36 + 2*E34*E37 + 2*E35*E38) - E18*(E30_2 + E31_2 + E32_2 + E33_2 + E34_2 + E35_2 + E36_2 + E37_2 + E38_2);
double A_9_10 = E28*(2*E26_2 + 2*E27_2 + 2*E28_2) + E22*(2*E20*E26 + 2*E21*E27 + 2*E22*E28) + E25*(2*E23*E26 + 2*E24*E27 + 2*E25*E28) - E28*(E20_2 + E21_2 + E22_2 + E23_2 + E24_2 + E25_2 + E26_2 + E27_2 + E28_2);
double A_9_4 = E38*(2*E26_2 + 2*E27_2 + 2*E28_2) - E28*(2*E20*E30 + 2*E21*E31 + 2*E22*E32 + 2*E23*E33 + 2*E24*E34 + 2*E25*E35 + 2*E26*E36 + 2*E27*E37 + 2*E28*E38) + E22*(2*E20*E36 + 2*E26*E30 + 2*E21*E37 + 2*E27*E31 + 2*E22*E38 + 2*E28*E32) + E25*(2*E23*E36 + 2*E26*E33 + 2*E24*E37 + 2*E27*E34 + 2*E25*E38 + 2*E28*E35) + E32*(2*E20*E26 + 2*E21*E27 + 2*E22*E28) + E35*(2*E23*E26 + 2*E24*E27 + 2*E25*E28) + E28*(4*E26*E36 + 4*E27*E37 + 4*E28*E38) - E38*(E20_2 + E21_2 + E22_2 + E23_2 + E24_2 + E25_2 + E26_2 + E27_2 + E28_2);
double A_9_1 = E28*(2*E36_2 + 2*E37_2 + 2*E38_2) - E38*(2*E20*E30 + 2*E21*E31 + 2*E22*E32 + 2*E23*E33 + 2*E24*E34 + 2*E25*E35 + 2*E26*E36 + 2*E27*E37 + 2*E28*E38) + E32*(2*E20*E36 + 2*E26*E30 + 2*E21*E37 + 2*E27*E31 + 2*E22*E38 + 2*E28*E32) + E35*(2*E23*E36 + 2*E26*E33 + 2*E24*E37 + 2*E27*E34 + 2*E25*E38 + 2*E28*E35) + E38*(4*E26*E36 + 4*E27*E37 + 4*E28*E38) + E22*(2*E30*E36 + 2*E31*E37 + 2*E32*E38) + E25*(2*E33*E36 + 2*E34*E37 + 2*E35*E38) - E28*(E30_2 + E31_2 + E32_2 + E33_2 + E34_2 + E35_2 + E36_2 + E37_2 + E38_2);
double A_9_0 = E38*(2*E36_2 + 2*E37_2 + 2*E38_2) + E32*(2*E30*E36 + 2*E31*E37 + 2*E32*E38) + E35*(2*E33*E36 + 2*E34*E37 + 2*E35*E38) - E38*(E30_2 + E31_2 + E32_2 + E33_2 + E34_2 + E35_2 + E36_2 + E37_2 + E38_2);
double B_0_0 = A_1_18 - (A_0_18*A_1_19)/A_0_19;
double B_1_0 = A_2_18 - (A_0_18*A_2_19)/A_0_19;
double B_2_0 = A_3_18 - (A_0_18*A_3_19)/A_0_19;
double B_3_0 = A_4_18 - (A_0_18*A_4_19)/A_0_19;
double B_4_0 = A_5_18 - (A_0_18*A_5_19)/A_0_19;
double B_5_0 = A_6_18 - (A_0_18*A_6_19)/A_0_19;
double B_6_0 = A_7_18 - (A_0_18*A_7_19)/A_0_19;
double B_7_0 = A_8_18 - (A_0_18*A_8_19)/A_0_19;
double B_8_0 = A_9_18 - (A_0_18*A_9_19)/A_0_19;
double B_0_1 = A_1_17 - (A_0_17*A_1_19)/A_0_19;
double B_1_1 = A_2_17 - (A_0_17*A_2_19)/A_0_19;
double B_2_1 = A_3_17 - (A_0_17*A_3_19)/A_0_19;
double B_3_1 = A_4_17 - (A_0_17*A_4_19)/A_0_19;
double B_4_1 = A_5_17 - (A_0_17*A_5_19)/A_0_19;
double B_5_1 = A_6_17 - (A_0_17*A_6_19)/A_0_19;
double B_6_1 = A_7_17 - (A_0_17*A_7_19)/A_0_19;
double B_7_1 = A_8_17 - (A_0_17*A_8_19)/A_0_19;
double B_8_1 = A_9_17 - (A_0_17*A_9_19)/A_0_19;
double B_0_2 = A_1_16 - (A_0_16*A_1_19)/A_0_19;
double B_1_2 = A_2_16 - (A_0_16*A_2_19)/A_0_19;
double B_2_2 = A_3_16 - (A_0_16*A_3_19)/A_0_19;
double B_3_2 = A_4_16 - (A_0_16*A_4_19)/A_0_19;
double B_4_2 = A_5_16 - (A_0_16*A_5_19)/A_0_19;
double B_5_2 = A_6_16 - (A_0_16*A_6_19)/A_0_19;
double B_6_2 = A_7_16 - (A_0_16*A_7_19)/A_0_19;
double B_7_2 = A_8_16 - (A_0_16*A_8_19)/A_0_19;
double B_8_2 = A_9_16 - (A_0_16*A_9_19)/A_0_19;
double B_0_3 = A_1_15 - (A_0_15*A_1_19)/A_0_19;
double B_1_3 = A_2_15 - (A_0_15*A_2_19)/A_0_19;
double B_2_3 = A_3_15 - (A_0_15*A_3_19)/A_0_19;
double B_3_3 = A_4_15 - (A_0_15*A_4_19)/A_0_19;
double B_4_3 = A_5_15 - (A_0_15*A_5_19)/A_0_19;
double B_5_3 = A_6_15 - (A_0_15*A_6_19)/A_0_19;
double B_6_3 = A_7_15 - (A_0_15*A_7_19)/A_0_19;
double B_7_3 = A_8_15 - (A_0_15*A_8_19)/A_0_19;
double B_8_3 = A_9_15 - (A_0_15*A_9_19)/A_0_19;
double B_0_4 = A_1_14 - (A_0_14*A_1_19)/A_0_19;
double B_1_4 = A_2_14 - (A_0_14*A_2_19)/A_0_19;
double B_2_4 = A_3_14 - (A_0_14*A_3_19)/A_0_19;
double B_3_4 = A_4_14 - (A_0_14*A_4_19)/A_0_19;
double B_4_4 = A_5_14 - (A_0_14*A_5_19)/A_0_19;
double B_5_4 = A_6_14 - (A_0_14*A_6_19)/A_0_19;
double B_6_4 = A_7_14 - (A_0_14*A_7_19)/A_0_19;
double B_7_4 = A_8_14 - (A_0_14*A_8_19)/A_0_19;
double B_8_4 = A_9_14 - (A_0_14*A_9_19)/A_0_19;
double B_0_5 = A_1_13 - (A_0_13*A_1_19)/A_0_19;
double B_1_5 = A_2_13 - (A_0_13*A_2_19)/A_0_19;
double B_2_5 = A_3_13 - (A_0_13*A_3_19)/A_0_19;
double B_3_5 = A_4_13 - (A_0_13*A_4_19)/A_0_19;
double B_4_5 = A_5_13 - (A_0_13*A_5_19)/A_0_19;
double B_5_5 = A_6_13 - (A_0_13*A_6_19)/A_0_19;
double B_6_5 = A_7_13 - (A_0_13*A_7_19)/A_0_19;
double B_7_5 = A_8_13 - (A_0_13*A_8_19)/A_0_19;
double B_8_5 = A_9_13 - (A_0_13*A_9_19)/A_0_19;
double B_0_6 = A_1_12 - (A_0_12*A_1_19)/A_0_19;
double B_1_6 = A_2_12 - (A_0_12*A_2_19)/A_0_19;
double B_2_6 = A_3_12 - (A_0_12*A_3_19)/A_0_19;
double B_3_6 = A_4_12 - (A_0_12*A_4_19)/A_0_19;
double B_4_6 = A_5_12 - (A_0_12*A_5_19)/A_0_19;
double B_5_6 = A_6_12 - (A_0_12*A_6_19)/A_0_19;
double B_6_6 = A_7_12 - (A_0_12*A_7_19)/A_0_19;
double B_7_6 = A_8_12 - (A_0_12*A_8_19)/A_0_19;
double B_8_6 = A_9_12 - (A_0_12*A_9_19)/A_0_19;
double B_0_7 = A_1_11 - (A_0_11*A_1_19)/A_0_19;
double B_1_7 = A_2_11 - (A_0_11*A_2_19)/A_0_19;
double B_2_7 = A_3_11 - (A_0_11*A_3_19)/A_0_19;
double B_3_7 = A_4_11 - (A_0_11*A_4_19)/A_0_19;
double B_4_7 = A_5_11 - (A_0_11*A_5_19)/A_0_19;
double B_5_7 = A_6_11 - (A_0_11*A_6_19)/A_0_19;
double B_6_7 = A_7_11 - (A_0_11*A_7_19)/A_0_19;
double B_7_7 = A_8_11 - (A_0_11*A_8_19)/A_0_19;
double B_8_7 = A_9_11 - (A_0_11*A_9_19)/A_0_19;
double B_0_8 = A_1_10 - (A_0_10*A_1_19)/A_0_19;
double B_1_8 = A_2_10 - (A_0_10*A_2_19)/A_0_19;
double B_2_8 = A_3_10 - (A_0_10*A_3_19)/A_0_19;
double B_3_8 = A_4_10 - (A_0_10*A_4_19)/A_0_19;
double B_4_8 = A_5_10 - (A_0_10*A_5_19)/A_0_19;
double B_5_8 = A_6_10 - (A_0_10*A_6_19)/A_0_19;
double B_6_8 = A_7_10 - (A_0_10*A_7_19)/A_0_19;
double B_7_8 = A_8_10 - (A_0_10*A_8_19)/A_0_19;
double B_8_8 = A_9_10 - (A_0_10*A_9_19)/A_0_19;
double B_0_9 = A_1_9 - (A_0_9*A_1_19)/A_0_19;
double B_1_9 = A_2_9 - (A_0_9*A_2_19)/A_0_19;
double B_2_9 = A_3_9 - (A_0_9*A_3_19)/A_0_19;
double B_3_9 = A_4_9 - (A_0_9*A_4_19)/A_0_19;
double B_4_9 = A_5_9 - (A_0_9*A_5_19)/A_0_19;
double B_5_9 = A_6_9 - (A_0_9*A_6_19)/A_0_19;
double B_6_9 = A_7_9 - (A_0_9*A_7_19)/A_0_19;
double B_7_9 = A_8_9 - (A_0_9*A_8_19)/A_0_19;
double B_8_9 = A_9_9 - (A_0_9*A_9_19)/A_0_19;
double B_0_10 = A_1_8 - (A_0_8*A_1_19)/A_0_19;
double B_1_10 = A_2_8 - (A_0_8*A_2_19)/A_0_19;
double B_2_10 = A_3_8 - (A_0_8*A_3_19)/A_0_19;
double B_3_10 = A_4_8 - (A_0_8*A_4_19)/A_0_19;
double B_4_10 = A_5_8 - (A_0_8*A_5_19)/A_0_19;
double B_5_10 = A_6_8 - (A_0_8*A_6_19)/A_0_19;
double B_6_10 = A_7_8 - (A_0_8*A_7_19)/A_0_19;
double B_7_10 = A_8_8 - (A_0_8*A_8_19)/A_0_19;
double B_8_10 = A_9_8 - (A_0_8*A_9_19)/A_0_19;
double B_0_11 = A_1_7 - (A_0_7*A_1_19)/A_0_19;
double B_1_11 = A_2_7 - (A_0_7*A_2_19)/A_0_19;
double B_2_11 = A_3_7 - (A_0_7*A_3_19)/A_0_19;
double B_3_11 = A_4_7 - (A_0_7*A_4_19)/A_0_19;
double B_4_11 = A_5_7 - (A_0_7*A_5_19)/A_0_19;
double B_5_11 = A_6_7 - (A_0_7*A_6_19)/A_0_19;
double B_6_11 = A_7_7 - (A_0_7*A_7_19)/A_0_19;
double B_7_11 = A_8_7 - (A_0_7*A_8_19)/A_0_19;
double B_8_11 = A_9_7 - (A_0_7*A_9_19)/A_0_19;
double B_0_12 = A_1_6 - (A_0_6*A_1_19)/A_0_19;
double B_1_12 = A_2_6 - (A_0_6*A_2_19)/A_0_19;
double B_2_12 = A_3_6 - (A_0_6*A_3_19)/A_0_19;
double B_3_12 = A_4_6 - (A_0_6*A_4_19)/A_0_19;
double B_4_12 = A_5_6 - (A_0_6*A_5_19)/A_0_19;
double B_5_12 = A_6_6 - (A_0_6*A_6_19)/A_0_19;
double B_6_12 = A_7_6 - (A_0_6*A_7_19)/A_0_19;
double B_7_12 = A_8_6 - (A_0_6*A_8_19)/A_0_19;
double B_8_12 = A_9_6 - (A_0_6*A_9_19)/A_0_19;
double B_0_13 = A_1_5 - (A_0_5*A_1_19)/A_0_19;
double B_1_13 = A_2_5 - (A_0_5*A_2_19)/A_0_19;
double B_2_13 = A_3_5 - (A_0_5*A_3_19)/A_0_19;
double B_3_13 = A_4_5 - (A_0_5*A_4_19)/A_0_19;
double B_4_13 = A_5_5 - (A_0_5*A_5_19)/A_0_19;
double B_5_13 = A_6_5 - (A_0_5*A_6_19)/A_0_19;
double B_6_13 = A_7_5 - (A_0_5*A_7_19)/A_0_19;
double B_7_13 = A_8_5 - (A_0_5*A_8_19)/A_0_19;
double B_8_13 = A_9_5 - (A_0_5*A_9_19)/A_0_19;
double B_0_14 = A_1_4 - (A_0_4*A_1_19)/A_0_19;
double B_1_14 = A_2_4 - (A_0_4*A_2_19)/A_0_19;
double B_2_14 = A_3_4 - (A_0_4*A_3_19)/A_0_19;
double B_3_14 = A_4_4 - (A_0_4*A_4_19)/A_0_19;
double B_4_14 = A_5_4 - (A_0_4*A_5_19)/A_0_19;
double B_5_14 = A_6_4 - (A_0_4*A_6_19)/A_0_19;
double B_6_14 = A_7_4 - (A_0_4*A_7_19)/A_0_19;
double B_7_14 = A_8_4 - (A_0_4*A_8_19)/A_0_19;
double B_8_14 = A_9_4 - (A_0_4*A_9_19)/A_0_19;
double B_0_15 = A_1_3 - (A_0_3*A_1_19)/A_0_19;
double B_1_15 = A_2_3 - (A_0_3*A_2_19)/A_0_19;
double B_2_15 = A_3_3 - (A_0_3*A_3_19)/A_0_19;
double B_3_15 = A_4_3 - (A_0_3*A_4_19)/A_0_19;
double B_4_15 = A_5_3 - (A_0_3*A_5_19)/A_0_19;
double B_5_15 = A_6_3 - (A_0_3*A_6_19)/A_0_19;
double B_6_15 = A_7_3 - (A_0_3*A_7_19)/A_0_19;
double B_7_15 = A_8_3 - (A_0_3*A_8_19)/A_0_19;
double B_8_15 = A_9_3 - (A_0_3*A_9_19)/A_0_19;
double B_0_16 = A_1_2 - (A_0_2*A_1_19)/A_0_19;
double B_1_16 = A_2_2 - (A_0_2*A_2_19)/A_0_19;
double B_2_16 = A_3_2 - (A_0_2*A_3_19)/A_0_19;
double B_3_16 = A_4_2 - (A_0_2*A_4_19)/A_0_19;
double B_4_16 = A_5_2 - (A_0_2*A_5_19)/A_0_19;
double B_5_16 = A_6_2 - (A_0_2*A_6_19)/A_0_19;
double B_6_16 = A_7_2 - (A_0_2*A_7_19)/A_0_19;
double B_7_16 = A_8_2 - (A_0_2*A_8_19)/A_0_19;
double B_8_16 = A_9_2 - (A_0_2*A_9_19)/A_0_19;
double B_0_17 = A_1_1 - (A_0_1*A_1_19)/A_0_19;
double B_1_17 = A_2_1 - (A_0_1*A_2_19)/A_0_19;
double B_2_17 = A_3_1 - (A_0_1*A_3_19)/A_0_19;
double B_3_17 = A_4_1 - (A_0_1*A_4_19)/A_0_19;
double B_4_17 = A_5_1 - (A_0_1*A_5_19)/A_0_19;
double B_5_17 = A_6_1 - (A_0_1*A_6_19)/A_0_19;
double B_6_17 = A_7_1 - (A_0_1*A_7_19)/A_0_19;
double B_7_17 = A_8_1 - (A_0_1*A_8_19)/A_0_19;
double B_8_17 = A_9_1 - (A_0_1*A_9_19)/A_0_19;
double B_0_18 = A_1_0 - (A_0_0*A_1_19)/A_0_19;
double B_1_18 = A_2_0 - (A_0_0*A_2_19)/A_0_19;
double B_2_18 = A_3_0 - (A_0_0*A_3_19)/A_0_19;
double B_3_18 = A_4_0 - (A_0_0*A_4_19)/A_0_19;
double B_4_18 = A_5_0 - (A_0_0*A_5_19)/A_0_19;
double B_5_18 = A_6_0 - (A_0_0*A_6_19)/A_0_19;
double B_6_18 = A_7_0 - (A_0_0*A_7_19)/A_0_19;
double B_7_18 = A_8_0 - (A_0_0*A_8_19)/A_0_19;
double B_8_18 = A_9_0 - (A_0_0*A_9_19)/A_0_19;
C[0][0] = B_0_0;
C[1][0] = B_1_0;
C[2][0] = B_2_0;
C[3][0] = B_3_0;
C[4][0] = B_4_0;
C[5][0] = B_5_0;
C[6][0] = B_6_0;
C[7][0] = B_7_0;
C[8][0] = B_8_0;
C[0][1] = B_0_1;
C[1][1] = B_1_1;
C[2][1] = B_2_1;
C[3][1] = B_3_1;
C[4][1] = B_4_1;
C[5][1] = B_5_1;
C[6][1] = B_6_1;
C[7][1] = B_7_1;
C[8][1] = B_8_1;
C[0][2] = B_0_2;
C[1][2] = B_1_2;
C[2][2] = B_2_2;
C[3][2] = B_3_2;
C[4][2] = B_4_2;
C[5][2] = B_5_2;
C[6][2] = B_6_2;
C[7][2] = B_7_2;
C[8][2] = B_8_2;
C[0][3] = B_0_9;
C[1][3] = B_1_9;
C[2][3] = B_2_9;
C[3][3] = B_3_9;
C[4][3] = B_4_9;
C[5][3] = B_5_9;
C[6][3] = B_6_9;
C[7][3] = B_7_9;
C[8][3] = B_8_9;
C[0][4] = B_0_3;
C[1][4] = B_1_3;
C[2][4] = B_2_3;
C[3][4] = B_3_3;
C[4][4] = B_4_3;
C[5][4] = B_5_3;
C[6][4] = B_6_3;
C[7][4] = B_7_3;
C[8][4] = B_8_3;
C[0][5] = B_0_10;
C[1][5] = B_1_10;
C[2][5] = B_2_10;
C[3][5] = B_3_10;
C[4][5] = B_4_10;
C[5][5] = B_5_10;
C[6][5] = B_6_10;
C[7][5] = B_7_10;
C[8][5] = B_8_10;
C[0][6] = B_0_4;
C[1][6] = B_1_4;
C[2][6] = B_2_4;
C[3][6] = B_3_4;
C[4][6] = B_4_4;
C[5][6] = B_5_4;
C[6][6] = B_6_4;
C[7][6] = B_7_4;
C[8][6] = B_8_4;
C[0][7] = B_0_11;
C[1][7] = B_1_11;
C[2][7] = B_2_11;
C[3][7] = B_3_11;
C[4][7] = B_4_11;
C[5][7] = B_5_11;
C[6][7] = B_6_11;
C[7][7] = B_7_11;
C[8][7] = B_8_11;
C[0][8] = B_0_5;
C[1][8] = B_1_5;
C[2][8] = B_2_5;
C[3][8] = B_3_5;
C[4][8] = B_4_5;
C[5][8] = B_5_5;
C[6][8] = B_6_5;
C[7][8] = B_7_5;
C[8][8] = B_8_5;
C[0][9] = B_0_15;
C[1][9] = B_1_15;
C[2][9] = B_2_15;
C[3][9] = B_3_15;
C[4][9] = B_4_15;
C[5][9] = B_5_15;
C[6][9] = B_6_15;
C[7][9] = B_7_15;
C[8][9] = B_8_15;
C[0][10] = B_0_12;
C[1][10] = B_1_12;
C[2][10] = B_2_12;
C[3][10] = B_3_12;
C[4][10] = B_4_12;
C[5][10] = B_5_12;
C[6][10] = B_6_12;
C[7][10] = B_7_12;
C[8][10] = B_8_12;
C[0][11] = B_0_6;
C[1][11] = B_1_6;
C[2][11] = B_2_6;
C[3][11] = B_3_6;
C[4][11] = B_4_6;
C[5][11] = B_5_6;
C[6][11] = B_6_6;
C[7][11] = B_7_6;
C[8][11] = B_8_6;
C[0][12] = B_0_16;
C[1][12] = B_1_16;
C[2][12] = B_2_16;
C[3][12] = B_3_16;
C[4][12] = B_4_16;
C[5][12] = B_5_16;
C[6][12] = B_6_16;
C[7][12] = B_7_16;
C[8][12] = B_8_16;
C[0][13] = B_0_13;
C[1][13] = B_1_13;
C[2][13] = B_2_13;
C[3][13] = B_3_13;
C[4][13] = B_4_13;
C[5][13] = B_5_13;
C[6][13] = B_6_13;
C[7][13] = B_7_13;
C[8][13] = B_8_13;
C[0][14] = B_0_7;
C[1][14] = B_1_7;
C[2][14] = B_2_7;
C[3][14] = B_3_7;
C[4][14] = B_4_7;
C[5][14] = B_5_7;
C[6][14] = B_6_7;
C[7][14] = B_7_7;
C[8][14] = B_8_7;
C[0][15] = B_0_18;
C[1][15] = B_1_18;
C[2][15] = B_2_18;
C[3][15] = B_3_18;
C[4][15] = B_4_18;
C[5][15] = B_5_18;
C[6][15] = B_6_18;
C[7][15] = B_7_18;
C[8][15] = B_8_18;
C[0][16] = B_0_17;
C[1][16] = B_1_17;
C[2][16] = B_2_17;
C[3][16] = B_3_17;
C[4][16] = B_4_17;
C[5][16] = B_5_17;
C[6][16] = B_6_17;
C[7][16] = B_7_17;
C[8][16] = B_8_17;
C[0][17] = B_0_14;
C[1][17] = B_1_14;
C[2][17] = B_2_14;
C[3][17] = B_3_14;
C[4][17] = B_4_14;
C[5][17] = B_5_14;
C[6][17] = B_6_14;
C[7][17] = B_7_14;
C[8][17] = B_8_14;
C[0][18] = B_0_8;
C[1][18] = B_1_8;
C[2][18] = B_2_8;
C[3][18] = B_3_8;
C[4][18] = B_4_8;
C[5][18] = B_5_8;
C[6][18] = B_6_8;
C[7][18] = B_7_8;
C[8][18] = B_8_8;
int rank = rref<9, 19>(C);
double D_0_9 = C[0][9];
double D_1_9 = C[1][9];
double D_2_9 = C[2][9];
double D_3_9 = C[3][9];
double D_4_9 = C[4][9];
double D_5_9 = C[5][9];
double D_6_9 = C[6][9];
double D_7_9 = C[7][9];
double D_8_9 = C[8][9];
double D_0_10 = C[0][10];
double D_1_10 = C[1][10];
double D_2_10 = C[2][10];
double D_3_10 = C[3][10];
double D_4_10 = C[4][10];
double D_5_10 = C[5][10];
double D_6_10 = C[6][10];
double D_7_10 = C[7][10];
double D_8_10 = C[8][10];
double D_0_11 = C[0][11];
double D_1_11 = C[1][11];
double D_2_11 = C[2][11];
double D_3_11 = C[3][11];
double D_4_11 = C[4][11];
double D_5_11 = C[5][11];
double D_6_11 = C[6][11];
double D_7_11 = C[7][11];
double D_8_11 = C[8][11];
double D_0_12 = C[0][12];
double D_1_12 = C[1][12];
double D_2_12 = C[2][12];
double D_3_12 = C[3][12];
double D_4_12 = C[4][12];
double D_5_12 = C[5][12];
double D_6_12 = C[6][12];
double D_7_12 = C[7][12];
double D_8_12 = C[8][12];
double D_0_13 = C[0][13];
double D_1_13 = C[1][13];
double D_2_13 = C[2][13];
double D_3_13 = C[3][13];
double D_4_13 = C[4][13];
double D_5_13 = C[5][13];
double D_6_13 = C[6][13];
double D_7_13 = C[7][13];
double D_8_13 = C[8][13];
double D_0_14 = C[0][14];
double D_1_14 = C[1][14];
double D_2_14 = C[2][14];
double D_3_14 = C[3][14];
double D_4_14 = C[4][14];
double D_5_14 = C[5][14];
double D_6_14 = C[6][14];
double D_7_14 = C[7][14];
double D_8_14 = C[8][14];
double D_0_15 = C[0][15];
double D_1_15 = C[1][15];
double D_2_15 = C[2][15];
double D_3_15 = C[3][15];
double D_4_15 = C[4][15];
double D_5_15 = C[5][15];
double D_6_15 = C[6][15];
double D_7_15 = C[7][15];
double D_8_15 = C[8][15];
double D_0_16 = C[0][16];
double D_1_16 = C[1][16];
double D_2_16 = C[2][16];
double D_3_16 = C[3][16];
double D_4_16 = C[4][16];
double D_5_16 = C[5][16];
double D_6_16 = C[6][16];
double D_7_16 = C[7][16];
double D_8_16 = C[8][16];
double D_0_17 = C[0][17];
double D_1_17 = C[1][17];
double D_2_17 = C[2][17];
double D_3_17 = C[3][17];
double D_4_17 = C[4][17];
double D_5_17 = C[5][17];
double D_6_17 = C[6][17];
double D_7_17 = C[7][17];
double D_8_17 = C[8][17];
double D_0_18 = C[0][18];
double D_1_18 = C[1][18];
double D_2_18 = C[2][18];
double D_3_18 = C[3][18];
double D_4_18 = C[4][18];
double D_5_18 = C[5][18];
double D_6_18 = C[6][18];
double D_7_18 = C[7][18];
double D_8_18 = C[8][18];
double W000 = -D_4_15;
double W100 = -D_6_15;
double W200 = -D_8_15;
double W010 = -D_4_9;
double W110 = -D_6_9;
double W210 = -D_8_9;
double W020 = -D_4_12;
double W120 = -D_6_12;
double W220 = -D_8_12;
double W001 = D_3_15 - D_4_16;
double W101 = D_5_15 - D_6_16;
double W201 = D_7_15 - D_8_16;
double W011 = D_3_9 - D_4_10;
double W111 = D_5_9 - D_6_10;
double W211 = D_7_9 - D_8_10;
double W021 = D_3_12 - D_4_13;
double W121 = D_5_12 - D_6_13;
double W221 = D_7_12 - D_8_13;
double W002 = D_3_16 - D_4_17;
double W102 = D_5_16 - D_6_17;
double W202 = D_7_16 - D_8_17;
double W012 = D_3_10 - D_4_11;
double W112 = D_5_10 - D_6_11;
double W212 = D_7_10 - D_8_11;
double W022 = D_3_13 - D_4_14;
double W122 = D_5_13 - D_6_14;
double W222 = D_7_13 - D_8_14;
double W003 = D_3_17 - D_4_18;
double W103 = D_5_17 - D_6_18;
double W203 = D_7_17 - D_8_18;
double W013 = D_3_11;
double W113 = D_5_11;
double W213 = D_7_11;
double W023 = D_3_14;
double W123 = D_5_14;
double W223 = D_7_14;
double W004 = D_3_18;
double W104 = D_5_18;
double W204 = D_7_18;
Z[10] = W004*W113*W223 - W004*W123*W213 - W013*W104*W223 + W013*W123*W204 + W023*W104*W213 - W023*W113*W204;
Z[9] = W003*W113*W223 - W003*W123*W213 + W004*W112*W223 + W004*W113*W222 - W004*W122*W213 - W004*W123*W212 - W012*W104*W223 + W012*W123*W204 - W013*W103*W223 - W013*W104*W222 + W013*W122*W204 + W013*W123*W203 + W022*W104*W213 - W022*W113*W204 + W023*W103*W213 + W023*W104*W212 - W023*W112*W204 - W023*W113*W203;
Z[8] = W002*W113*W223 - W002*W123*W213 + W003*W112*W223 + W003*W113*W222 - W003*W122*W213 - W003*W123*W212 + W004*W111*W223 + W004*W112*W222 + W004*W113*W221 - W004*W121*W213 - W004*W122*W212 - W004*W123*W211 - W011*W104*W223 + W011*W123*W204 - W012*W103*W223 - W012*W104*W222 + W012*W122*W204 + W012*W123*W203 - W013*W102*W223 - W013*W103*W222 - W013*W104*W221 + W013*W121*W204 + W013*W122*W203 + W013*W123*W202 + W021*W104*W213 - W021*W113*W204 + W022*W103*W213 + W022*W104*W212 - W022*W112*W204 - W022*W113*W203 + W023*W102*W213 + W023*W103*W212 + W023*W104*W211 - W023*W111*W204 - W023*W112*W203 - W023*W113*W202;
Z[7] = W001*W113*W223 - W001*W123*W213 + W002*W112*W223 + W002*W113*W222 - W002*W122*W213 - W002*W123*W212 + W003*W111*W223 + W003*W112*W222 + W003*W113*W221 - W003*W121*W213 - W003*W122*W212 - W003*W123*W211 + W004*W110*W223 + W004*W111*W222 + W004*W112*W221 + W004*W113*W220 - W004*W120*W213 - W004*W121*W212 - W004*W122*W211 - W004*W123*W210 - W010*W104*W223 + W010*W123*W204 - W011*W103*W223 - W011*W104*W222 + W011*W122*W204 + W011*W123*W203 - W012*W102*W223 - W012*W103*W222 - W012*W104*W221 + W012*W121*W204 + W012*W122*W203 + W012*W123*W202 - W013*W101*W223 - W013*W102*W222 - W013*W103*W221 - W013*W104*W220 + W013*W120*W204 + W013*W121*W203 + W013*W122*W202 + W013*W123*W201 + W020*W104*W213 - W020*W113*W204 + W021*W103*W213 + W021*W104*W212 - W021*W112*W204 - W021*W113*W203 + W022*W102*W213 + W022*W103*W212 + W022*W104*W211 - W022*W111*W204 - W022*W112*W203 - W022*W113*W202 + W023*W101*W213 + W023*W102*W212 + W023*W103*W211 + W023*W104*W210 - W023*W110*W204 - W023*W111*W203 - W023*W112*W202 - W023*W113*W201;
Z[6] = W000*W113*W223 - W000*W123*W213 + W001*W112*W223 + W001*W113*W222 - W001*W122*W213 - W001*W123*W212 + W002*W111*W223 + W002*W112*W222 + W002*W113*W221 - W002*W121*W213 - W002*W122*W212 - W002*W123*W211 + W003*W110*W223 + W003*W111*W222 + W003*W112*W221 + W003*W113*W220 - W003*W120*W213 - W003*W121*W212 - W003*W122*W211 - W003*W123*W210 + W004*W110*W222 + W004*W111*W221 + W004*W112*W220 - W004*W120*W212 - W004*W121*W211 - W004*W122*W210 - W010*W103*W223 - W010*W104*W222 + W010*W122*W204 + W010*W123*W203 - W011*W102*W223 - W011*W103*W222 - W011*W104*W221 + W011*W121*W204 + W011*W122*W203 + W011*W123*W202 - W012*W101*W223 - W012*W102*W222 - W012*W103*W221 - W012*W104*W220 + W012*W120*W204 + W012*W121*W203 + W012*W122*W202 + W012*W123*W201 - W013*W100*W223 - W013*W101*W222 - W013*W102*W221 - W013*W103*W220 + W013*W120*W203 + W013*W121*W202 + W013*W122*W201 + W013*W123*W200 + W020*W103*W213 + W020*W104*W212 - W020*W112*W204 - W020*W113*W203 + W021*W102*W213 + W021*W103*W212 + W021*W104*W211 - W021*W111*W204 - W021*W112*W203 - W021*W113*W202 + W022*W101*W213 + W022*W102*W212 + W022*W103*W211 + W022*W104*W210 - W022*W110*W204 - W022*W111*W203 - W022*W112*W202 - W022*W113*W201 + W023*W100*W213 + W023*W101*W212 + W023*W102*W211 + W023*W103*W210 - W023*W110*W203 - W023*W111*W202 - W023*W112*W201 - W023*W113*W200;
Z[5] = W000*W112*W223 + W000*W113*W222 - W000*W122*W213 - W000*W123*W212 + W001*W111*W223 + W001*W112*W222 + W001*W113*W221 - W001*W121*W213 - W001*W122*W212 - W001*W123*W211 + W002*W110*W223 + W002*W111*W222 + W002*W112*W221 + W002*W113*W220 - W002*W120*W213 - W002*W121*W212 - W002*W122*W211 - W002*W123*W210 + W003*W110*W222 + W003*W111*W221 + W003*W112*W220 - W003*W120*W212 - W003*W121*W211 - W003*W122*W210 + W004*W110*W221 + W004*W111*W220 - W004*W120*W211 - W004*W121*W210 - W010*W102*W223 - W010*W103*W222 - W010*W104*W221 + W010*W121*W204 + W010*W122*W203 + W010*W123*W202 - W011*W101*W223 - W011*W102*W222 - W011*W103*W221 - W011*W104*W220 + W011*W120*W204 + W011*W121*W203 + W011*W122*W202 + W011*W123*W201 - W012*W100*W223 - W012*W101*W222 - W012*W102*W221 - W012*W103*W220 + W012*W120*W203 + W012*W121*W202 + W012*W122*W201 + W012*W123*W200 - W013*W100*W222 - W013*W101*W221 - W013*W102*W220 + W013*W120*W202 + W013*W121*W201 + W013*W122*W200 + W020*W102*W213 + W020*W103*W212 + W020*W104*W211 - W020*W111*W204 - W020*W112*W203 - W020*W113*W202 + W021*W101*W213 + W021*W102*W212 + W021*W103*W211 + W021*W104*W210 - W021*W110*W204 - W021*W111*W203 - W021*W112*W202 - W021*W113*W201 + W022*W100*W213 + W022*W101*W212 + W022*W102*W211 + W022*W103*W210 - W022*W110*W203 - W022*W111*W202 - W022*W112*W201 - W022*W113*W200 + W023*W100*W212 + W023*W101*W211 + W023*W102*W210 - W023*W110*W202 - W023*W111*W201 - W023*W112*W200;
Z[4] = W000*W111*W223 + W000*W112*W222 + W000*W113*W221 - W000*W121*W213 - W000*W122*W212 - W000*W123*W211 + W001*W110*W223 + W001*W111*W222 + W001*W112*W221 + W001*W113*W220 - W001*W120*W213 - W001*W121*W212 - W001*W122*W211 - W001*W123*W210 + W002*W110*W222 + W002*W111*W221 + W002*W112*W220 - W002*W120*W212 - W002*W121*W211 - W002*W122*W210 + W003*W110*W221 + W003*W111*W220 - W003*W120*W211 - W003*W121*W210 + W004*W110*W220 - W004*W120*W210 - W010*W101*W223 - W010*W102*W222 - W010*W103*W221 - W010*W104*W220 + W010*W120*W204 + W010*W121*W203 + W010*W122*W202 + W010*W123*W201 - W011*W100*W223 - W011*W101*W222 - W011*W102*W221 - W011*W103*W220 + W011*W120*W203 + W011*W121*W202 + W011*W122*W201 + W011*W123*W200 - W012*W100*W222 - W012*W101*W221 - W012*W102*W220 + W012*W120*W202 + W012*W121*W201 + W012*W122*W200 - W013*W100*W221 - W013*W101*W220 + W013*W120*W201 + W013*W121*W200 + W020*W101*W213 + W020*W102*W212 + W020*W103*W211 + W020*W104*W210 - W020*W110*W204 - W020*W111*W203 - W020*W112*W202 - W020*W113*W201 + W021*W100*W213 + W021*W101*W212 + W021*W102*W211 + W021*W103*W210 - W021*W110*W203 - W021*W111*W202 - W021*W112*W201 - W021*W113*W200 + W022*W100*W212 + W022*W101*W211 + W022*W102*W210 - W022*W110*W202 - W022*W111*W201 - W022*W112*W200 + W023*W100*W211 + W023*W101*W210 - W023*W110*W201 - W023*W111*W200;
Z[3] = W000*W110*W223 + W000*W111*W222 + W000*W112*W221 + W000*W113*W220 - W000*W120*W213 - W000*W121*W212 - W000*W122*W211 - W000*W123*W210 + W001*W110*W222 + W001*W111*W221 + W001*W112*W220 - W001*W120*W212 - W001*W121*W211 - W001*W122*W210 + W002*W110*W221 + W002*W111*W220 - W002*W120*W211 - W002*W121*W210 + W003*W110*W220 - W003*W120*W210 - W010*W100*W223 - W010*W101*W222 - W010*W102*W221 - W010*W103*W220 + W010*W120*W203 + W010*W121*W202 + W010*W122*W201 + W010*W123*W200 - W011*W100*W222 - W011*W101*W221 - W011*W102*W220 + W011*W120*W202 + W011*W121*W201 + W011*W122*W200 - W012*W100*W221 - W012*W101*W220 + W012*W120*W201 + W012*W121*W200 - W013*W100*W220 + W013*W120*W200 + W020*W100*W213 + W020*W101*W212 + W020*W102*W211 + W020*W103*W210 - W020*W110*W203 - W020*W111*W202 - W020*W112*W201 - W020*W113*W200 + W021*W100*W212 + W021*W101*W211 + W021*W102*W210 - W021*W110*W202 - W021*W111*W201 - W021*W112*W200 + W022*W100*W211 + W022*W101*W210 - W022*W110*W201 - W022*W111*W200 + W023*W100*W210 - W023*W110*W200;
Z[2] = W000*W110*W222 + W000*W111*W221 + W000*W112*W220 - W000*W120*W212 - W000*W121*W211 - W000*W122*W210 + W001*W110*W221 + W001*W111*W220 - W001*W120*W211 - W001*W121*W210 + W002*W110*W220 - W002*W120*W210 - W010*W100*W222 - W010*W101*W221 - W010*W102*W220 + W010*W120*W202 + W010*W121*W201 + W010*W122*W200 - W011*W100*W221 - W011*W101*W220 + W011*W120*W201 + W011*W121*W200 - W012*W100*W220 + W012*W120*W200 + W020*W100*W212 + W020*W101*W211 + W020*W102*W210 - W020*W110*W202 - W020*W111*W201 - W020*W112*W200 + W021*W100*W211 + W021*W101*W210 - W021*W110*W201 - W021*W111*W200 + W022*W100*W210 - W022*W110*W200;
Z[1] = W000*W110*W221 + W000*W111*W220 - W000*W120*W211 - W000*W121*W210 + W001*W110*W220 - W001*W120*W210 - W010*W100*W221 - W010*W101*W220 + W010*W120*W201 + W010*W121*W200 - W011*W100*W220 + W011*W120*W200 + W020*W100*W211 + W020*W101*W210 - W020*W110*W201 - W020*W111*W200 + W021*W100*W210 - W021*W110*W200;
Z[0] = W000*W110*W220 - W000*W120*W210 - W010*W100*W220 + W010*W120*W200 + W020*W100*W210 - W020*W110*W200;
}
void finalize(double C[9][19], double w3, double Y[3][3])
{
double D_0_9 = C[0][9];
double D_1_9 = C[1][9];
double D_2_9 = C[2][9];
double D_3_9 = C[3][9];
double D_4_9 = C[4][9];
double D_5_9 = C[5][9];
double D_6_9 = C[6][9];
double D_7_9 = C[7][9];
double D_8_9 = C[8][9];
double D_0_10 = C[0][10];
double D_1_10 = C[1][10];
double D_2_10 = C[2][10];
double D_3_10 = C[3][10];
double D_4_10 = C[4][10];
double D_5_10 = C[5][10];
double D_6_10 = C[6][10];
double D_7_10 = C[7][10];
double D_8_10 = C[8][10];
double D_0_11 = C[0][11];
double D_1_11 = C[1][11];
double D_2_11 = C[2][11];
double D_3_11 = C[3][11];
double D_4_11 = C[4][11];
double D_5_11 = C[5][11];
double D_6_11 = C[6][11];
double D_7_11 = C[7][11];
double D_8_11 = C[8][11];
double D_0_12 = C[0][12];
double D_1_12 = C[1][12];
double D_2_12 = C[2][12];
double D_3_12 = C[3][12];
double D_4_12 = C[4][12];
double D_5_12 = C[5][12];
double D_6_12 = C[6][12];
double D_7_12 = C[7][12];
double D_8_12 = C[8][12];
double D_0_13 = C[0][13];
double D_1_13 = C[1][13];
double D_2_13 = C[2][13];
double D_3_13 = C[3][13];
double D_4_13 = C[4][13];
double D_5_13 = C[5][13];
double D_6_13 = C[6][13];
double D_7_13 = C[7][13];
double D_8_13 = C[8][13];
double D_0_14 = C[0][14];
double D_1_14 = C[1][14];
double D_2_14 = C[2][14];
double D_3_14 = C[3][14];
double D_4_14 = C[4][14];
double D_5_14 = C[5][14];
double D_6_14 = C[6][14];
double D_7_14 = C[7][14];
double D_8_14 = C[8][14];
double D_0_15 = C[0][15];
double D_1_15 = C[1][15];
double D_2_15 = C[2][15];
double D_3_15 = C[3][15];
double D_4_15 = C[4][15];
double D_5_15 = C[5][15];
double D_6_15 = C[6][15];
double D_7_15 = C[7][15];
double D_8_15 = C[8][15];
double D_0_16 = C[0][16];
double D_1_16 = C[1][16];
double D_2_16 = C[2][16];
double D_3_16 = C[3][16];
double D_4_16 = C[4][16];
double D_5_16 = C[5][16];
double D_6_16 = C[6][16];
double D_7_16 = C[7][16];
double D_8_16 = C[8][16];
double D_0_17 = C[0][17];
double D_1_17 = C[1][17];
double D_2_17 = C[2][17];
double D_3_17 = C[3][17];
double D_4_17 = C[4][17];
double D_5_17 = C[5][17];
double D_6_17 = C[6][17];
double D_7_17 = C[7][17];
double D_8_17 = C[8][17];
double D_0_18 = C[0][18];
double D_1_18 = C[1][18];
double D_2_18 = C[2][18];
double D_3_18 = C[3][18];
double D_4_18 = C[4][18];
double D_5_18 = C[5][18];
double D_6_18 = C[6][18];
double D_7_18 = C[7][18];
double D_8_18 = C[8][18];
double w3_2 = w3*w3;
double w3_3 = w3*w3_2;
double w3_4 = w3*w3_3;
double W000 = -D_4_15;
double W100 = -D_6_15;
double W200 = -D_8_15;
double W010 = -D_4_9;
double W110 = -D_6_9;
double W210 = -D_8_9;
double W020 = -D_4_12;
double W120 = -D_6_12;
double W220 = -D_8_12;
double W001 = D_3_15 - D_4_16;
double W101 = D_5_15 - D_6_16;
double W201 = D_7_15 - D_8_16;
double W011 = D_3_9 - D_4_10;
double W111 = D_5_9 - D_6_10;
double W211 = D_7_9 - D_8_10;
double W021 = D_3_12 - D_4_13;
double W121 = D_5_12 - D_6_13;
double W221 = D_7_12 - D_8_13;
double W002 = D_3_16 - D_4_17;
double W102 = D_5_16 - D_6_17;
double W202 = D_7_16 - D_8_17;
double W012 = D_3_10 - D_4_11;
double W112 = D_5_10 - D_6_11;
double W212 = D_7_10 - D_8_11;
double W022 = D_3_13 - D_4_14;
double W122 = D_5_13 - D_6_14;
double W222 = D_7_13 - D_8_14;
double W003 = D_3_17 - D_4_18;
double W103 = D_5_17 - D_6_18;
double W203 = D_7_17 - D_8_18;
double W013 = D_3_11;
double W113 = D_5_11;
double W213 = D_7_11;
double W023 = D_3_14;
double W123 = D_5_14;
double W223 = D_7_14;
double W004 = D_3_18;
double W104 = D_5_18;
double W204 = D_7_18;
Y[0][0] = W000 + W001*w3 + W002*w3_2 + W003*w3_3 + W004*w3_4;
Y[1][0] = W100 + W101*w3 + W102*w3_2 + W103*w3_3 + W104*w3_4;
Y[2][0] = W200 + W201*w3 + W202*w3_2 + W203*w3_3 + W204*w3_4;
Y[0][1] = W010 + W011*w3 + W012*w3_2 + W013*w3_3;
Y[1][1] = W110 + W111*w3 + W112*w3_2 + W113*w3_3;
Y[2][1] = W210 + W211*w3 + W212*w3_2 + W213*w3_3;
Y[0][2] = W020 + W021*w3 + W022*w3_2 + W023*w3_3;
Y[1][2] = W120 + W121*w3 + W122*w3_2 + W123*w3_3;
Y[2][2] = W220 + W221*w3 + W222*w3_2 + W223*w3_3;
}

void nulle(const double x[NVIEWS][SAMPLE],
        const double y[NVIEWS][SAMPLE], const double z[NVIEWS][SAMPLE],
        double EE[4][9])
{
    double Q[5][9];
    for (int si = 0; si < SAMPLE; ++si)
    {
        Q[si][0] = x[0][si] * x[1][si];
        Q[si][1] = y[0][si] * x[1][si];
        Q[si][2] = z[0][si] * x[1][si];
        Q[si][3] = x[0][si] * y[1][si];
        Q[si][4] = y[0][si] * y[1][si];
        Q[si][5] = z[0][si] * y[1][si];
        Q[si][6] = x[0][si] * z[1][si];
        Q[si][7] = y[0][si] * z[1][si];
        Q[si][8] = z[0][si] * z[1][si];
    }
    std::fill(Q[4], Q[4] + 9, 0.0);
    Q[4][0] = Q[4][4] = Q[4][8] = 1.0;

    nullQR<5, 9>(Q, EE);
}

using namespace cv;

class PC4PST0NullEEstimatorCallback CV_FINAL : public RelativePoseEstimatorCallback
{
    int runKernel( InputArray _m1, InputArray _m2, OutputArray _model ) const CV_OVERRIDE
    {
        Mat3d q1 = _m1.getMat(), q2 = _m2.getMat();
        CV_Assert(q1.cols == 1 && q2.cols == 1);

        double x[NVIEWS][SAMPLE], y[NVIEWS][SAMPLE], z[NVIEWS][SAMPLE];
        for (int si = 0; si < SAMPLE; ++si)
        {
            x[0][si] = q1(si, 0)[0];
            y[0][si] = q1(si, 0)[1];
            z[0][si] = q1(si, 0)[2];
            x[1][si] = q2(si, 0)[0];
            y[1][si] = q2(si, 0)[1];
            z[1][si] = q2(si, 0)[2];
        }

        // std::cerr << "Q" << std::endl;
        // for (int si = 0; si < SAMPLE; ++si)
        //     std::cerr << x[0][si] << " " << y[0][si] << " " << z[0][si] << " " << std::endl;

        // for (int si = 0; si < SAMPLE; ++si)
        //     std::cerr << x[1][si] << " " << y[1][si] << " " << z[1][si] << " " << std::endl;

        double EE[4][9], Z[11], C[9][19];
        std::fill_n(&C[0][0], 9 * 19, 0.0);
        nulle(x, y, z, EE);

        helper(EE, C, Z);
        
        double w2[DEG], w[1][3];
        int ns = realRoots(Z, w2);
        Mat1d models, Evec(4, 9, &EE[0][0]);
        for (int i = 0; i < ns; ++i)
        {
            double Y[3][3];
            finalize(C, w2[i], Y);

            nullQR<2, 3>(Y, w);
            double w1 = w[0][2] / w[0][0], w0 = w[0][1] / w[0][0];
            Mat1d xyz1(1, 4);
            xyz1 << w0, w1, w2[i], 1;
            Mat E = xyz1 * Evec;
            E = E.reshape(1, 3);

            models.push_back(E);
        }

        _model.assign(models);

        return models.rows / 3;
    }
};

} // namespace pc_4pst0_nulle_poly

namespace cv
{
int RANSACUpdateNumIters_4pst0( double p, double ep, int modelPoints, int maxIters )
{
    if( modelPoints <= 0 )
        CV_Error( Error::StsOutOfRange, "the number of model points should be positive" );

    p = MAX(p, 0.);
    p = MIN(p, 1.);
    ep = MAX(ep, 0.);
    ep = MIN(ep, 1.);

    // avoid inf's & nan's
    double num = MAX(1. - p, DBL_MIN);
    double denom = 1. - std::pow(1. - ep, modelPoints);
    if( denom < DBL_MIN )
        return 0;

    num = std::log(num);
    denom = std::log(denom);

    return denom >= 0 || -num >= maxIters*(-denom) ? maxIters : cvRound(num/denom);
}
class RANSACPointSetRegistrator_4pst0 : public PointSetRegistrator
{
public:
    RANSACPointSetRegistrator_4pst0(const Ptr<PointSetRegistrator::Callback>& _cb=Ptr<PointSetRegistrator::Callback>(),
                              int _modelPoints=0, double _threshold=0, double _confidence=0.99, int _maxIters=1000)
      : cb(_cb), modelPoints(_modelPoints), threshold(_threshold), confidence(_confidence), maxIters(_maxIters) {}

    int findInliers( const Mat& m1, const Mat& m2, const Mat& model, Mat& err, Mat& mask, double thresh ) const
    {
        cb->computeError( m1, m2, model, err );
        mask.create(err.size(), CV_8U);

        CV_Assert( err.isContinuous() && err.type() == CV_32F && mask.isContinuous() && mask.type() == CV_8U);
        const float* errptr = err.ptr<float>();
        uchar* maskptr = mask.ptr<uchar>();
        float t = (float)(thresh*thresh);
        int i, n = (int)err.total(), nz = 0;
        for( i = 0; i < n; i++ )
        {
            int f = errptr[i] <= t;
            maskptr[i] = (uchar)f;
            nz += f;
        }

        // {
        //     Mat E = model;
        //     Mat R1, R2, t;
        //     decomposeEssentialMat(E, R1, R2, t);
        //     t *= (t.at<double>(2) > 0 ? 1 : -1);
        //     std::cerr << "---------------" << std::endl;
        //     if (trace(R1)[0] > trace(R2)[0])
        //         std::cerr << "R = " << R1 << std::endl;
        //     else std::cerr << "R = " << R2 << std::endl;
        //     std::cerr << "t = " << t.t() << " " << trace(R1)[0] << " " << trace(R2)[0] << " " << nz << std::endl;
        //     std::cerr << "err = " << err << std::endl;
        // }
        return nz;
    }

    bool getSubset( const Mat& m1, const Mat& m2,
                    Mat& ms1, Mat& ms2, RNG& rng,
                    int maxAttempts=1000 ) const
    {
        cv::AutoBuffer<int> _idx(modelPoints);
        int* idx = _idx.data();
        int i = 0, j, k, iters = 0;
        int d1 = m1.channels() > 1 ? m1.channels() : m1.cols;
        int d2 = m2.channels() > 1 ? m2.channels() : m2.cols;
        int esz1 = (int)m1.elemSize1()*d1, esz2 = (int)m2.elemSize1()*d2;
        int count = m1.checkVector(d1), count2 = m2.checkVector(d2);
        const int *m1ptr = m1.ptr<int>(), *m2ptr = m2.ptr<int>();

        ms1.create(modelPoints, 1, CV_MAKETYPE(m1.depth(), d1));
        ms2.create(modelPoints, 1, CV_MAKETYPE(m2.depth(), d2));

        int *ms1ptr = ms1.ptr<int>(), *ms2ptr = ms2.ptr<int>();

        CV_Assert( count >= modelPoints && count == count2 );
        CV_Assert( (esz1 % sizeof(int)) == 0 && (esz2 % sizeof(int)) == 0 );
        esz1 /= sizeof(int);
        esz2 /= sizeof(int);

        for(; iters < maxAttempts; iters++)
        {
            for( i = 0; i < modelPoints && iters < maxAttempts; )
            {
                int idx_i = 0;
                for(;;)
                {
                    idx_i = idx[i] = rng.uniform(0, count);
                    for( j = 0; j < i; j++ )
                        if( idx_i == idx[j] )
                            break;
                    if( j == i )
                        break;
                }
                for( k = 0; k < esz1; k++ )
                    ms1ptr[i*esz1 + k] = m1ptr[idx_i*esz1 + k];
                for( k = 0; k < esz2; k++ )
                    ms2ptr[i*esz2 + k] = m2ptr[idx_i*esz2 + k];
                i++;
            }
            if( i == modelPoints && !cb->checkSubset(ms1, ms2, i) )
                continue;
            break;
        }

        return i == modelPoints && iters < maxAttempts;
    }

    bool run(InputArray _m1, InputArray _m2, OutputArray _model, OutputArray _mask) const CV_OVERRIDE
    {
        auto start = std::chrono::system_clock::now();

        bool result = false;
        Mat m1 = _m1.getMat(), m2 = _m2.getMat();
        Mat err, mask, model, bestModel, ms1, ms2;

        int iter, niters = MAX(maxIters, 1);
        int d1 = m1.channels() > 1 ? m1.channels() : m1.cols;
        int d2 = m2.channels() > 1 ? m2.channels() : m2.cols;
        int count = m1.checkVector(d1), count2 = m2.checkVector(d2), maxGoodCount = 0;

        RNG rng((uint64)-1);

        CV_Assert( cb );
        CV_Assert( confidence > 0 && confidence < 1 );

        CV_Assert( count >= 0 && count2 == count );
        if( count < modelPoints )
            return false;

        Mat bestMask0, bestMask;

        if( _mask.needed() )
        {
            _mask.create(count, 1, CV_8U, -1, true);
            bestMask0 = bestMask = _mask.getMat();
            CV_Assert( (bestMask.cols == 1 || bestMask.rows == 1) && (int)bestMask.total() == count );
        }
        else
        {
            bestMask.create(count, 1, CV_8U);
            bestMask0 = bestMask;
        }

        if( count == modelPoints )
        {
            if( cb->runKernel(m1, m2, bestModel) <= 0 )
                return false;
            bestModel.copyTo(_model);
            bestMask.setTo(Scalar::all(1));
            return true;
        }

        for( iter = 0; iter < niters; iter++ )
        {
            int i, nmodels;
            if( count > modelPoints )
            {
                bool found = getSubset( m1, m2, ms1, ms2, rng, 10000 );
                if( !found )
                {
                    if( iter == 0 )
                        return false;
                    break;
                }
            }

            { auto start = std::chrono::system_clock::now();
            nmodels = cb->runKernel( ms1, ms2, model );
            auto end = std::chrono::system_clock::now();
            // std::cerr << nmodels << " " << std::chrono::duration<double>(end - start).count() << std::endl;
            }
            if( nmodels <= 0 )
                continue;
            CV_Assert( model.rows % nmodels == 0 );
            Size modelSize(model.cols, model.rows/nmodels);

            for( i = 0; i < nmodels; i++ )
            {
                Mat model_i = model.rowRange( i*modelSize.height, (i+1)*modelSize.height );
                int goodCount = findInliers( m1, m2, model_i, err, mask, threshold );

                if( goodCount > MAX(maxGoodCount, modelPoints-1) )
                {
                    // Mat cheir_mask;
                    // checkPositiveDepth(m1, m2, model_i, mask, cheir_mask);
                    // if (!cheir_mask.empty()) mask = cheir_mask;
                    // goodCount = countNonZero(mask);
                    // if (goodCount > maxGoodCount)
                    {
                        std::swap(mask, bestMask);
                        model_i.copyTo(bestModel);
                        maxGoodCount = goodCount;
                        niters = RANSACUpdateNumIters_4pst0( confidence, (double)(count - goodCount)/count, modelPoints, niters );
                    }
                }
            }
        }
        // std::cerr << "4pst0 within iter " << iter << " " << niters << " " << (double)(count - maxGoodCount)/count << std::endl;

        if( maxGoodCount > 0 )
        {
            if( bestMask.data != bestMask0.data )
            {
                if( bestMask.size() == bestMask0.size() )
                    bestMask.copyTo(bestMask0);
                else
                    transpose(bestMask, bestMask0);
            }
            bestModel.copyTo(_model);
            result = true;
        }
        else
            _model.release();

        auto end = std::chrono::system_clock::now();
        // std::cerr << "4pst0 time " << std::chrono::duration<double>(end - start).count() << std::endl;
        // std::cerr << "-----------" << std::endl;

        return result;
    }

    void setCallback(const Ptr<PointSetRegistrator::Callback>& _cb) CV_OVERRIDE { cb = _cb; }

    Ptr<PointSetRegistrator::Callback> cb;
    int modelPoints;
    double threshold;
    double confidence;
    int maxIters;
};


Mat estimateRelativePose_PC4PST0_NullE_Poly(
        InputArray _rays1, InputArray _rays2,
        int method, double prob, double threshold, OutputArray _mask)
{
    // CV_INSTRUMENT_REGION();
    Mat rays1, rays2;
    processInputArray(_rays1, _rays2, rays1, rays2);

    Mat models;
    if( method == RANSAC )
    //     createRANSACPointSetRegistrator_4pst0(
    //             makePtr<pc_4pst0_nulle_poly::PC4PST0NullEEstimatorCallback>(), 4, threshold, prob)->run(
    //             rays1, rays2, models, _mask);
    {
        auto reg = RANSACPointSetRegistrator_4pst0(
                makePtr<pc_4pst0_nulle_poly::PC4PST0NullEEstimatorCallback>(), 4, threshold, prob);
        reg.run(rays1, rays2, models, _mask);
    }
    else
        createLMeDSPointSetRegistrator(
                makePtr<pc_4pst0_nulle_poly::PC4PST0NullEEstimatorCallback>(), 4, prob)->run(
                rays1, rays2, models, _mask);

    return models;
}

}
