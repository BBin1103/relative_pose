classdef prob_pc_relpose_3prast0_nullex < problem
    properties
        N = (3)
        NE = sym('NE%d%d%d', [[8] - (3), 3, 3]);
        w = sym('w%d', [[8] - (3) - 1, 1]);
    end
    methods
        function [eqs_sym, abbr_subs] = gen_eqs_sym(obj)
            NE = permute(obj.NE, [2, 3, 1]);
            NE = reshape(NE, 9, [8] - obj.N);
            tau = sym('tau');
            E = reshape(NE * [obj.w; 1], 3, 3);
            eqs_sym = sym([]);
            eqs_sym(1) = det(E);
            Et = transpose(E);
            te = 2*(E*Et)*E - trace(E*Et)*E;
            eqs_sym(2:10) = te(:);
            eqs_sym(end + 1) = (tau^2 - 1) * trace(E*Et) + 2 * (tau + 1) * trace(E * E) - 2 * tau * trace(E)^2;
            
            % Not used as is already implied in NE.
            % eqs_sym(end + 1) = trace(E);
            
            eqs_sym(end + 1) = 3*E(1, 3)*E(2, 1)*E(3, 3)+3*E(1, 3)*E(2, 3)*E(3, 1)+3*E(1, 3)*E(2, 1)*E(2, 2)-3*E(1, 3)*E(3, 1)*E(3, 2)+5*E(1, 2)*E(3, 1)*E(3, 3)-3*E(1, 2)*E(2, 1)*E(2, 3)+3*E(1, 2)*E(2, 1)*E(3, 2)-6*E(1, 2)*E(1, 3)*E(3, 3)+5*E(1, 2)*E(2, 2)*E(3, 1)+2*tau*E(1, 2)*E(1, 3)*E(2, 2)+tau*E(1, 3)*E(2, 1)*E(2, 2)-tau*E(1, 2)*E(2, 1)*E(2, 3)-tau*E(1, 2)*E(2, 2)*E(3, 1)-2*tau*E(2, 1)*E(2, 2)*E(3, 1)-3*tau*E(1, 3)*E(2, 3)*E(3, 1)+tau*E(1, 2)*E(2, 1)*E(3, 2)+3*tau*E(1, 3)*E(3, 1)*E(3, 2)+tau*E(1, 3)*E(2, 1)*E(3, 3)-5*tau*E(2, 2)*E(2, 3)*E(3, 3)-tau*E(1, 2)*E(3, 1)*E(3, 3)+5*tau*E(2, 2)*E(3, 2)*E(3, 3)-8*E(2, 1)*E(2, 2)*E(3, 1)-2*E(2, 1)*E(3, 1)*E(3, 3)-9*E(2, 2)*E(2, 3)*E(3, 3)+9*E(2, 2)*E(3, 2)*E(3, 3)-4*E(1, 2)^2*E(3, 2)-4*E(1, 3)^2*E(2, 3)+6*E(1, 3)^2*E(3, 2)+4*E(2, 1)^2*E(3, 2)-3*E(2, 3)^2*E(3, 2)-2*E(2, 3)*E(3, 1)^2+7*E(2, 3)*E(3, 2)^2-2*E(2, 3)*E(3, 3)^2+2*E(3, 2)*E(3, 3)^2+2*E(2, 3)^3-6*E(3, 2)^3-2*tau*E(1, 2)^2*E(2, 3)+2*tau*E(2, 1)^2*E(3, 2)+3*tau*E(2, 3)^2*E(3, 2)-3*tau*E(2, 3)*E(3, 2)^2-2*tau*E(2, 3)*E(3, 3)^2+2*tau*E(3, 2)*E(3, 3)^2;
            eqs_sym(end + 1) = -E(1, 3)*E(2, 1)*E(3, 3)+E(1, 3)*E(2, 3)*E(3, 1)-E(1, 3)*E(2, 1)*E(2, 2)-E(1, 3)*E(3, 1)*E(3, 2)+2*E(1, 2)*E(1, 3)*E(2, 2)+E(1, 2)*E(3, 1)*E(3, 3)+E(1, 2)*E(2, 1)*E(2, 3)-E(1, 2)*E(2, 1)*E(3, 2)-2*E(1, 2)*E(1, 3)*E(3, 3)+E(1, 2)*E(2, 2)*E(3, 1)+tau*E(1, 3)*E(2, 1)*E(2, 2)-tau*E(1, 2)*E(2, 1)*E(2, 3)-tau*E(1, 2)*E(2, 2)*E(3, 1)-tau*E(1, 3)*E(2, 3)*E(3, 1)+tau*E(1, 2)*E(2, 1)*E(3, 2)+tau*E(1, 3)*E(3, 1)*E(3, 2)+tau*E(1, 3)*E(2, 1)*E(3, 3)-tau*E(2, 2)*E(2, 3)*E(3, 3)-tau*E(1, 2)*E(3, 1)*E(3, 3)+tau*E(2, 2)*E(3, 2)*E(3, 3)-2*E(2, 1)*E(2, 2)*E(3, 1)+2*E(2, 1)*E(3, 1)*E(3, 3)-5*E(2, 2)*E(2, 3)*E(3, 3)+5*E(2, 2)*E(3, 2)*E(3, 3)-2*E(1, 2)^2*E(2, 3)+2*E(1, 3)^2*E(3, 2)+2*E(2, 1)^2*E(3, 2)-E(2, 3)^2*E(3, 2)-2*E(2, 3)*E(3, 1)^2+E(2, 3)*E(3, 2)^2+2*E(2, 3)^3-2*E(3, 2)^3+tau*E(2, 3)^2*E(3, 2)-tau*E(2, 3)*E(3, 2)^2;
            eqs_sym(end + 1) = -4*E(1, 2)*E(2, 1)*E(3, 1)-2*E(1, 3)*E(2, 3)*E(3, 2)-2*E(1, 3)*E(2, 2)*E(3, 3)-2*E(2, 1)*E(2, 2)*E(2, 3)+4*E(1, 2)*E(1, 3)*E(2, 1)-4*E(1, 2)*E(2, 2)*E(3, 2)+4*E(1, 2)*E(2, 2)*E(2, 3)+2*tau*E(2, 1)*E(2, 2)*E(2, 3)-2*tau*E(2, 1)*E(2, 2)*E(3, 2)+2*tau*E(1, 3)*E(2, 3)*E(3, 2)-2*tau*E(2, 3)*E(3, 1)*E(3, 2)-2*tau*E(1, 3)*E(2, 2)*E(3, 3)+2*tau*E(2, 2)*E(3, 1)*E(3, 3)+2*E(2, 3)*E(3, 1)*E(3, 2)+2*E(2, 1)*E(2, 2)*E(3, 2)+2*E(2, 2)*E(3, 1)*E(3, 3)-E(1, 2)^2*E(3, 1)+3*E(1, 3)^2*E(3, 1)-2*E(1, 3)*E(2, 1)^2+4*E(1, 3)*E(2, 3)^2-6*E(1, 3)*E(3, 1)^2+3*E(2, 1)^2*E(3, 1)-3*E(2, 3)^2*E(3, 1)-E(3, 1)*E(3, 2)^2+3*E(3, 1)^3+2*tau*E(1, 3)*E(2, 1)^2-tau*E(1, 2)^2*E(3, 1)-tau*E(1, 3)^2*E(3, 1)-tau*E(2, 1)^2*E(3, 1)+tau*E(2, 3)^2*E(3, 1)+2*tau*E(1, 3)*E(3, 1)^2-tau*E(3, 1)*E(3, 2)^2-tau*E(3, 1)^3;
            eqs_sym(end + 1) = 6*E(1, 3)*E(2, 3)*E(3, 2)+6*E(1, 3)*E(2, 2)*E(3, 3)-6*E(2, 1)*E(2, 2)*E(2, 3)-4*E(1, 2)*E(2, 2)*E(3, 2)-4*tau*E(1, 2)*E(1, 3)*E(2, 1)-4*tau*E(1, 2)*E(2, 2)*E(2, 3)-2*tau*E(2, 1)*E(2, 2)*E(2, 3)+4*tau*E(1, 2)*E(2, 1)*E(3, 1)+6*tau*E(2, 1)*E(2, 2)*E(3, 2)-6*tau*E(1, 3)*E(2, 3)*E(3, 2)+6*tau*E(2, 3)*E(3, 1)*E(3, 2)+6*tau*E(1, 3)*E(2, 2)*E(3, 3)-6*tau*E(2, 2)*E(3, 1)*E(3, 3)-6*E(2, 3)*E(3, 1)*E(3, 2)+10*E(2, 1)*E(2, 2)*E(3, 2)-6*E(2, 2)*E(3, 1)*E(3, 3)+E(1, 2)^2*E(3, 1)-15*E(1, 3)^2*E(3, 1)-6*E(1, 3)*E(2, 1)^2-4*E(1, 3)*E(2, 3)^2+10*E(1, 3)*E(3, 1)^2-8*E(1, 3)*E(3, 2)^2+4*E(1, 3)*E(3, 3)^2+5*E(2, 1)^2*E(3, 1)+3*E(2, 3)^2*E(3, 1)+9*E(3, 1)*E(3, 2)^2-4*E(3, 1)*E(3, 3)^2+8*E(1, 3)^3-3*E(3, 1)^3-2*tau*E(1, 3)*E(2, 1)^2+tau*E(1, 2)^2*E(3, 1)+5*tau*E(1, 3)^2*E(3, 1)+tau*E(2, 1)^2*E(3, 1)-tau*E(2, 3)^2*E(3, 1)-6*tau*E(1, 3)*E(3, 1)^2+tau*E(3, 1)*E(3, 2)^2+4*tau*E(1, 3)*E(3, 3)^2-4*tau*E(3, 1)*E(3, 3)^2+tau*E(3, 1)^3;
            eqs_sym(end + 1) = -3*E(2, 1)*E(2, 3)*E(3, 2)+3*E(1, 3)*E(2, 1)*E(3, 1)+E(1, 3)*E(2, 3)*E(3, 3)-3*E(1, 2)*E(1, 3)*E(3, 1)+2*E(1, 2)*E(2, 2)*E(3, 3)+3*E(1, 2)*E(2, 3)*E(3, 2)+tau*E(1, 2)*E(1, 3)*E(3, 1)-tau*E(1, 3)*E(2, 1)*E(3, 1)-tau*E(1, 2)*E(2, 3)*E(3, 2)+tau*E(2, 1)*E(2, 3)*E(3, 2)+2*tau*E(1, 2)*E(2, 2)*E(3, 3)-2*tau*E(2, 1)*E(2, 2)*E(3, 3)+tau*E(1, 3)*E(2, 3)*E(3, 3)-tau*E(3, 1)*E(3, 2)*E(3, 3)-2*E(2, 1)*E(2, 2)*E(3, 3)-E(3, 1)*E(3, 2)*E(3, 3)+2*E(1, 2)*E(1, 3)^2-E(1, 2)*E(2, 3)^2+E(1, 2)*E(3, 1)^2-2*E(1, 2)*E(3, 2)^2+E(1, 2)*E(3, 3)^2-E(1, 3)^2*E(2, 1)+2*E(2, 1)*E(2, 3)^2-2*E(2, 1)*E(3, 1)^2+E(2, 1)*E(3, 2)^2-E(2, 1)*E(3, 3)^2+tau*E(1, 3)^2*E(2, 1)+tau*E(1, 2)*E(2, 3)^2-tau*E(1, 2)*E(3, 1)^2-tau*E(2, 1)*E(3, 2)^2+tau*E(1, 2)*E(3, 3)^2-tau*E(2, 1)*E(3, 3)^2;
            eqs_sym(end + 1) = 5*E(2, 1)*E(2, 3)*E(3, 2)-E(1, 3)*E(2, 1)*E(3, 1)+4*E(1, 3)*E(3, 2)*E(3, 3)-7*E(1, 3)*E(2, 3)*E(3, 3)+E(1, 2)*E(1, 3)*E(3, 1)-2*E(1, 2)*E(2, 2)*E(3, 3)-5*E(1, 2)*E(2, 3)*E(3, 2)-3*tau*E(1, 2)*E(1, 3)*E(3, 1)+3*tau*E(1, 3)*E(2, 1)*E(3, 1)-tau*E(1, 2)*E(2, 3)*E(3, 2)+tau*E(2, 1)*E(2, 3)*E(3, 2)-2*tau*E(1, 2)*E(2, 2)*E(3, 3)+2*tau*E(2, 1)*E(2, 2)*E(3, 3)+tau*E(1, 3)*E(2, 3)*E(3, 3)-4*tau*E(1, 3)*E(3, 2)*E(3, 3)+3*tau*E(3, 1)*E(3, 2)*E(3, 3)+8*E(2, 3)*E(3, 1)*E(3, 3)+2*E(2, 1)*E(2, 2)*E(3, 3)-5*E(3, 1)*E(3, 2)*E(3, 3)-12*E(1, 2)^2*E(2, 1)+6*E(1, 2)*E(2, 1)^2-3*E(1, 2)*E(2, 3)^2-5*E(1, 2)*E(3, 1)^2+4*E(1, 2)*E(3, 2)^2-3*E(1, 2)*E(3, 3)^2-E(1, 3)^2*E(2, 1)+2*E(2, 1)*E(2, 3)^2+6*E(2, 1)*E(3, 1)^2-3*E(2, 1)*E(3, 2)^2+3*E(2, 1)*E(3, 3)^2+6*E(1, 2)^3-2*tau*E(1, 2)*E(1, 3)^2+4*tau*E(1, 2)^2*E(2, 1)+tau*E(1, 3)^2*E(2, 1)-2*tau*E(1, 2)*E(2, 1)^2-tau*E(1, 2)*E(2, 3)^2+tau*E(1, 2)*E(3, 1)^2-2*tau*E(1, 2)*E(3, 2)^2+3*tau*E(2, 1)*E(3, 2)^2-3*tau*E(1, 2)*E(3, 3)^2+3*tau*E(2, 1)*E(3, 3)^2-2*tau*E(1, 2)^3;
            eqs_sym(end + 1) = 9*E(1, 2)^2*E(3, 3)+9*E(2, 1)^2*E(3, 3)-9*E(3, 3)^3+6*tau*E(1, 3)^2*E(2, 2)-3*tau*E(2, 2)*E(2, 3)^2+3*tau^2*E(2, 2)*E(2, 3)^2+3*tau*E(2, 2)*E(3, 1)^2-3*tau^2*E(2, 2)*E(3, 1)^2-6*tau*E(2, 2)*E(3, 2)^2-9*tau*E(1, 2)^2*E(3, 3)-6*tau*E(2, 1)^2*E(3, 3)+3*tau^2*E(2, 1)^2*E(3, 3)-3*tau*E(2, 3)^2*E(3, 3)+3*tau^2*E(2, 3)^2*E(3, 3)-6*tau*E(3, 2)^2*E(3, 3)-6*tau*E(3, 3)^3+3*tau^2*E(3, 3)^3+9*E(1, 3)*E(2, 2)*E(3, 1)-9*E(1, 3)*E(3, 1)*E(3, 3)-9*E(1, 2)*E(1, 3)*E(3, 2)-18*E(1, 2)*E(2, 1)*E(3, 3)-9*tau*E(1, 3)*E(2, 1)*E(2, 3)+3*tau^2*E(1, 3)*E(2, 1)*E(2, 3)-3*tau*E(1, 3)*E(2, 2)*E(3, 1)-9*tau*E(1, 2)*E(2, 3)*E(3, 1)+3*tau^2*E(1, 2)*E(2, 3)*E(3, 1)+12*tau*E(2, 1)*E(2, 3)*E(3, 1)-3*tau^2*E(2, 1)*E(2, 3)*E(3, 1)+3*tau*E(1, 2)*E(1, 3)*E(3, 2)+3*tau*E(2, 2)*E(2, 3)*E(3, 2)-9*tau*E(2, 1)*E(3, 1)*E(3, 2)+3*tau^2*E(2, 1)*E(3, 1)*E(3, 2)+15*tau*E(1, 2)*E(2, 1)*E(3, 3)-3*tau^2*E(1, 2)*E(2, 1)*E(3, 3)-6*tau*E(1, 3)*E(3, 1)*E(3, 3)+3*tau^2*E(1, 3)*E(3, 1)*E(3, 3)-3*tau*E(2, 3)*E(3, 2)*E(3, 3)+3*tau^2*E(2, 3)*E(3, 2)*E(3, 3)-18*E(2, 3)*E(3, 2)*E(3, 3)-9*E(2, 1)*E(2, 3)*E(3, 1)-9*E(2, 2)*E(2, 3)*E(3, 2);

            abbr_subs = struct([]);
        end
        function [in_subs, out_subs] = gen_arg_subs(obj)
            in_subs = struct();
            in_subs.NE = obj.NE;
            in_subs.tau = sym('tau');
            out_subs.w = obj.w;
        end
        function [in_zp, out_zp] = rand_arg_zp(obj, p)
            [in_zp, out_zp] = vzp_rand_relpose_pinhole(obj.N, p, {'NE', 'tau'}, {'w'}, 'ZeroScrewTransl', 'inner');
        end
        function [in_rl, out_rl] = rand_arg_rl(obj)
            [in_rl, out_rl] = vrl_rand_relpose_pinhole(obj.N, {'NE', 'tau'}, {'w'}, 'ZeroScrewTransl', 'inner');
        end
    end
end