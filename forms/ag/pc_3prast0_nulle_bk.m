clear, clc

E1 = sym('E_1_%d_%d', [3 ,3]);
E2 = sym('E_2_%d_%d', [3 ,3]);
E3 = sym('E_3_%d_%d', [3 ,3]);
E4 = sym('E_4_%d_%d', [3 ,3]);
E5 = sym('E_5_%d_%d', [3 ,3]);
E6 = sym('E_6_%d_%d', [3 ,3]);

syms w1 w2 w3 w4 w5 tau
E = w1*E1 + w2*E2 + w3*E3 + w4*E4 + w5*E5 + E6;

eqs = sym(zeros(12, 1));
eqs(1) = det(E);

Et = transpose(E);
te = 2*(E*Et)*E - trace(E*Et)*E;
eqs(2:10) = te(:);

% tau = 4 * s^2 - 1;
eqs(11) = (tau^2 - 1) * trace(E*Et) / 2 + (tau + 1) * trace(E * E) - tau * trace(E)^2;
eqs(12) = trace(E);

eqs(13) = det(E + transpose(E));

eqs(end + 1) = 3*E(1, 3)*E(2, 1)*E(3, 3)+3*E(1, 3)*E(2, 3)*E(3, 1)+3*E(1, 3)*E(2, 1)*E(2, 2)-3*E(1, 3)*E(3, 1)*E(3, 2)+5*E(1, 2)*E(3, 1)*E(3, 3)-3*E(1, 2)*E(2, 1)*E(2, 3)+3*E(1, 2)*E(2, 1)*E(3, 2)-6*E(1, 2)*E(1, 3)*E(3, 3)+5*E(1, 2)*E(2, 2)*E(3, 1)+2*tau*E(1, 2)*E(1, 3)*E(2, 2)+tau*E(1, 3)*E(2, 1)*E(2, 2)-tau*E(1, 2)*E(2, 1)*E(2, 3)-tau*E(1, 2)*E(2, 2)*E(3, 1)-2*tau*E(2, 1)*E(2, 2)*E(3, 1)-3*tau*E(1, 3)*E(2, 3)*E(3, 1)+tau*E(1, 2)*E(2, 1)*E(3, 2)+3*tau*E(1, 3)*E(3, 1)*E(3, 2)+tau*E(1, 3)*E(2, 1)*E(3, 3)-5*tau*E(2, 2)*E(2, 3)*E(3, 3)-tau*E(1, 2)*E(3, 1)*E(3, 3)+5*tau*E(2, 2)*E(3, 2)*E(3, 3)-8*E(2, 1)*E(2, 2)*E(3, 1)-2*E(2, 1)*E(3, 1)*E(3, 3)-9*E(2, 2)*E(2, 3)*E(3, 3)+9*E(2, 2)*E(3, 2)*E(3, 3)-4*E(1, 2)^2*E(3, 2)-4*E(1, 3)^2*E(2, 3)+6*E(1, 3)^2*E(3, 2)+4*E(2, 1)^2*E(3, 2)-3*E(2, 3)^2*E(3, 2)-2*E(2, 3)*E(3, 1)^2+7*E(2, 3)*E(3, 2)^2-2*E(2, 3)*E(3, 3)^2+2*E(3, 2)*E(3, 3)^2+2*E(2, 3)^3-6*E(3, 2)^3-2*tau*E(1, 2)^2*E(2, 3)+2*tau*E(2, 1)^2*E(3, 2)+3*tau*E(2, 3)^2*E(3, 2)-3*tau*E(2, 3)*E(3, 2)^2-2*tau*E(2, 3)*E(3, 3)^2+2*tau*E(3, 2)*E(3, 3)^2;
eqs(end + 1) = -E(1, 3)*E(2, 1)*E(3, 3)+E(1, 3)*E(2, 3)*E(3, 1)-E(1, 3)*E(2, 1)*E(2, 2)-E(1, 3)*E(3, 1)*E(3, 2)+2*E(1, 2)*E(1, 3)*E(2, 2)+E(1, 2)*E(3, 1)*E(3, 3)+E(1, 2)*E(2, 1)*E(2, 3)-E(1, 2)*E(2, 1)*E(3, 2)-2*E(1, 2)*E(1, 3)*E(3, 3)+E(1, 2)*E(2, 2)*E(3, 1)+tau*E(1, 3)*E(2, 1)*E(2, 2)-tau*E(1, 2)*E(2, 1)*E(2, 3)-tau*E(1, 2)*E(2, 2)*E(3, 1)-tau*E(1, 3)*E(2, 3)*E(3, 1)+tau*E(1, 2)*E(2, 1)*E(3, 2)+tau*E(1, 3)*E(3, 1)*E(3, 2)+tau*E(1, 3)*E(2, 1)*E(3, 3)-tau*E(2, 2)*E(2, 3)*E(3, 3)-tau*E(1, 2)*E(3, 1)*E(3, 3)+tau*E(2, 2)*E(3, 2)*E(3, 3)-2*E(2, 1)*E(2, 2)*E(3, 1)+2*E(2, 1)*E(3, 1)*E(3, 3)-5*E(2, 2)*E(2, 3)*E(3, 3)+5*E(2, 2)*E(3, 2)*E(3, 3)-2*E(1, 2)^2*E(2, 3)+2*E(1, 3)^2*E(3, 2)+2*E(2, 1)^2*E(3, 2)-E(2, 3)^2*E(3, 2)-2*E(2, 3)*E(3, 1)^2+E(2, 3)*E(3, 2)^2+2*E(2, 3)^3-2*E(3, 2)^3+tau*E(2, 3)^2*E(3, 2)-tau*E(2, 3)*E(3, 2)^2;
eqs(end + 1) = -4*E(1, 2)*E(2, 1)*E(3, 1)-2*E(1, 3)*E(2, 3)*E(3, 2)-2*E(1, 3)*E(2, 2)*E(3, 3)-2*E(2, 1)*E(2, 2)*E(2, 3)+4*E(1, 2)*E(1, 3)*E(2, 1)-4*E(1, 2)*E(2, 2)*E(3, 2)+4*E(1, 2)*E(2, 2)*E(2, 3)+2*tau*E(2, 1)*E(2, 2)*E(2, 3)-2*tau*E(2, 1)*E(2, 2)*E(3, 2)+2*tau*E(1, 3)*E(2, 3)*E(3, 2)-2*tau*E(2, 3)*E(3, 1)*E(3, 2)-2*tau*E(1, 3)*E(2, 2)*E(3, 3)+2*tau*E(2, 2)*E(3, 1)*E(3, 3)+2*E(2, 3)*E(3, 1)*E(3, 2)+2*E(2, 1)*E(2, 2)*E(3, 2)+2*E(2, 2)*E(3, 1)*E(3, 3)-E(1, 2)^2*E(3, 1)+3*E(1, 3)^2*E(3, 1)-2*E(1, 3)*E(2, 1)^2+4*E(1, 3)*E(2, 3)^2-6*E(1, 3)*E(3, 1)^2+3*E(2, 1)^2*E(3, 1)-3*E(2, 3)^2*E(3, 1)-E(3, 1)*E(3, 2)^2+3*E(3, 1)^3+2*tau*E(1, 3)*E(2, 1)^2-tau*E(1, 2)^2*E(3, 1)-tau*E(1, 3)^2*E(3, 1)-tau*E(2, 1)^2*E(3, 1)+tau*E(2, 3)^2*E(3, 1)+2*tau*E(1, 3)*E(3, 1)^2-tau*E(3, 1)*E(3, 2)^2-tau*E(3, 1)^3;
eqs(end + 1) = 6*E(1, 3)*E(2, 3)*E(3, 2)+6*E(1, 3)*E(2, 2)*E(3, 3)-6*E(2, 1)*E(2, 2)*E(2, 3)-4*E(1, 2)*E(2, 2)*E(3, 2)-4*tau*E(1, 2)*E(1, 3)*E(2, 1)-4*tau*E(1, 2)*E(2, 2)*E(2, 3)-2*tau*E(2, 1)*E(2, 2)*E(2, 3)+4*tau*E(1, 2)*E(2, 1)*E(3, 1)+6*tau*E(2, 1)*E(2, 2)*E(3, 2)-6*tau*E(1, 3)*E(2, 3)*E(3, 2)+6*tau*E(2, 3)*E(3, 1)*E(3, 2)+6*tau*E(1, 3)*E(2, 2)*E(3, 3)-6*tau*E(2, 2)*E(3, 1)*E(3, 3)-6*E(2, 3)*E(3, 1)*E(3, 2)+10*E(2, 1)*E(2, 2)*E(3, 2)-6*E(2, 2)*E(3, 1)*E(3, 3)+E(1, 2)^2*E(3, 1)-15*E(1, 3)^2*E(3, 1)-6*E(1, 3)*E(2, 1)^2-4*E(1, 3)*E(2, 3)^2+10*E(1, 3)*E(3, 1)^2-8*E(1, 3)*E(3, 2)^2+4*E(1, 3)*E(3, 3)^2+5*E(2, 1)^2*E(3, 1)+3*E(2, 3)^2*E(3, 1)+9*E(3, 1)*E(3, 2)^2-4*E(3, 1)*E(3, 3)^2+8*E(1, 3)^3-3*E(3, 1)^3-2*tau*E(1, 3)*E(2, 1)^2+tau*E(1, 2)^2*E(3, 1)+5*tau*E(1, 3)^2*E(3, 1)+tau*E(2, 1)^2*E(3, 1)-tau*E(2, 3)^2*E(3, 1)-6*tau*E(1, 3)*E(3, 1)^2+tau*E(3, 1)*E(3, 2)^2+4*tau*E(1, 3)*E(3, 3)^2-4*tau*E(3, 1)*E(3, 3)^2+tau*E(3, 1)^3;
eqs(end + 1) = -3*E(2, 1)*E(2, 3)*E(3, 2)+3*E(1, 3)*E(2, 1)*E(3, 1)+E(1, 3)*E(2, 3)*E(3, 3)-3*E(1, 2)*E(1, 3)*E(3, 1)+2*E(1, 2)*E(2, 2)*E(3, 3)+3*E(1, 2)*E(2, 3)*E(3, 2)+tau*E(1, 2)*E(1, 3)*E(3, 1)-tau*E(1, 3)*E(2, 1)*E(3, 1)-tau*E(1, 2)*E(2, 3)*E(3, 2)+tau*E(2, 1)*E(2, 3)*E(3, 2)+2*tau*E(1, 2)*E(2, 2)*E(3, 3)-2*tau*E(2, 1)*E(2, 2)*E(3, 3)+tau*E(1, 3)*E(2, 3)*E(3, 3)-tau*E(3, 1)*E(3, 2)*E(3, 3)-2*E(2, 1)*E(2, 2)*E(3, 3)-E(3, 1)*E(3, 2)*E(3, 3)+2*E(1, 2)*E(1, 3)^2-E(1, 2)*E(2, 3)^2+E(1, 2)*E(3, 1)^2-2*E(1, 2)*E(3, 2)^2+E(1, 2)*E(3, 3)^2-E(1, 3)^2*E(2, 1)+2*E(2, 1)*E(2, 3)^2-2*E(2, 1)*E(3, 1)^2+E(2, 1)*E(3, 2)^2-E(2, 1)*E(3, 3)^2+tau*E(1, 3)^2*E(2, 1)+tau*E(1, 2)*E(2, 3)^2-tau*E(1, 2)*E(3, 1)^2-tau*E(2, 1)*E(3, 2)^2+tau*E(1, 2)*E(3, 3)^2-tau*E(2, 1)*E(3, 3)^2;
eqs(end + 1) = 5*E(2, 1)*E(2, 3)*E(3, 2)-E(1, 3)*E(2, 1)*E(3, 1)+4*E(1, 3)*E(3, 2)*E(3, 3)-7*E(1, 3)*E(2, 3)*E(3, 3)+E(1, 2)*E(1, 3)*E(3, 1)-2*E(1, 2)*E(2, 2)*E(3, 3)-5*E(1, 2)*E(2, 3)*E(3, 2)-3*tau*E(1, 2)*E(1, 3)*E(3, 1)+3*tau*E(1, 3)*E(2, 1)*E(3, 1)-tau*E(1, 2)*E(2, 3)*E(3, 2)+tau*E(2, 1)*E(2, 3)*E(3, 2)-2*tau*E(1, 2)*E(2, 2)*E(3, 3)+2*tau*E(2, 1)*E(2, 2)*E(3, 3)+tau*E(1, 3)*E(2, 3)*E(3, 3)-4*tau*E(1, 3)*E(3, 2)*E(3, 3)+3*tau*E(3, 1)*E(3, 2)*E(3, 3)+8*E(2, 3)*E(3, 1)*E(3, 3)+2*E(2, 1)*E(2, 2)*E(3, 3)-5*E(3, 1)*E(3, 2)*E(3, 3)-12*E(1, 2)^2*E(2, 1)+6*E(1, 2)*E(2, 1)^2-3*E(1, 2)*E(2, 3)^2-5*E(1, 2)*E(3, 1)^2+4*E(1, 2)*E(3, 2)^2-3*E(1, 2)*E(3, 3)^2-E(1, 3)^2*E(2, 1)+2*E(2, 1)*E(2, 3)^2+6*E(2, 1)*E(3, 1)^2-3*E(2, 1)*E(3, 2)^2+3*E(2, 1)*E(3, 3)^2+6*E(1, 2)^3-2*tau*E(1, 2)*E(1, 3)^2+4*tau*E(1, 2)^2*E(2, 1)+tau*E(1, 3)^2*E(2, 1)-2*tau*E(1, 2)*E(2, 1)^2-tau*E(1, 2)*E(2, 3)^2+tau*E(1, 2)*E(3, 1)^2-2*tau*E(1, 2)*E(3, 2)^2+3*tau*E(2, 1)*E(3, 2)^2-3*tau*E(1, 2)*E(3, 3)^2+3*tau*E(2, 1)*E(3, 3)^2-2*tau*E(1, 2)^3;
eqs(end + 1) = 9*E(1, 2)^2*E(3, 3)+9*E(2, 1)^2*E(3, 3)-9*E(3, 3)^3+6*tau*E(1, 3)^2*E(2, 2)-3*tau*E(2, 2)*E(2, 3)^2+3*tau^2*E(2, 2)*E(2, 3)^2+3*tau*E(2, 2)*E(3, 1)^2-3*tau^2*E(2, 2)*E(3, 1)^2-6*tau*E(2, 2)*E(3, 2)^2-9*tau*E(1, 2)^2*E(3, 3)-6*tau*E(2, 1)^2*E(3, 3)+3*tau^2*E(2, 1)^2*E(3, 3)-3*tau*E(2, 3)^2*E(3, 3)+3*tau^2*E(2, 3)^2*E(3, 3)-6*tau*E(3, 2)^2*E(3, 3)-6*tau*E(3, 3)^3+3*tau^2*E(3, 3)^3+9*E(1, 3)*E(2, 2)*E(3, 1)-9*E(1, 3)*E(3, 1)*E(3, 3)-9*E(1, 2)*E(1, 3)*E(3, 2)-18*E(1, 2)*E(2, 1)*E(3, 3)-9*tau*E(1, 3)*E(2, 1)*E(2, 3)+3*tau^2*E(1, 3)*E(2, 1)*E(2, 3)-3*tau*E(1, 3)*E(2, 2)*E(3, 1)-9*tau*E(1, 2)*E(2, 3)*E(3, 1)+3*tau^2*E(1, 2)*E(2, 3)*E(3, 1)+12*tau*E(2, 1)*E(2, 3)*E(3, 1)-3*tau^2*E(2, 1)*E(2, 3)*E(3, 1)+3*tau*E(1, 2)*E(1, 3)*E(3, 2)+3*tau*E(2, 2)*E(2, 3)*E(3, 2)-9*tau*E(2, 1)*E(3, 1)*E(3, 2)+3*tau^2*E(2, 1)*E(3, 1)*E(3, 2)+15*tau*E(1, 2)*E(2, 1)*E(3, 3)-3*tau^2*E(1, 2)*E(2, 1)*E(3, 3)-6*tau*E(1, 3)*E(3, 1)*E(3, 3)+3*tau^2*E(1, 3)*E(3, 1)*E(3, 3)-3*tau*E(2, 3)*E(3, 2)*E(3, 3)+3*tau^2*E(2, 3)*E(3, 2)*E(3, 3)-18*E(2, 3)*E(3, 2)*E(3, 3)-9*E(2, 1)*E(2, 3)*E(3, 1)-9*E(2, 2)*E(2, 3)*E(3, 2);

%% Verification
all_vars = [symvar(eqs), str2sym_('[Q, QQ, E]'), str2sym_('u'), str2sym_('s'), str2sym_('t')];

unknown_vars = sym('w%d', [1, 5]);
known_vars = setdiff(symvar(eqs), unknown_vars);
known = {};
for var = known_vars
    known = [known {char(var)}];
end
unknown = {};
for var = unknown_vars
    unknown = [unknown {char(var)}];
end

kngroups = ones(9,1)*[1 2 3 4 5 6];
kngroups = [kngroups(:); 7];
kngroups = [];

sname = mfilename();

cfg = gbs_InitConfig();
cfg.InstanceGenerator = @gbs_RandomInstanceZpFixed;
[res, export] = gbs_CreateCode(sname, eqs, known, unknown, kngroups, cfg);

